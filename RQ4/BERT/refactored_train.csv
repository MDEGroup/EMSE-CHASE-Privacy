description,readme
"TeamCity xBIM :: Xbim Geometry :: Release [Build 34](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=979&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 4, passed: 66 Build time: 00:31:24
### Failed tests

```
VSTest: GeometryTests.IfcExtrudedAreaSolidTests.IfcExtrudedArea_With_IfcArbritraryClosedProfileDef_And_IfcCompositeCurve: <no details avaliable>

VSTest: GeometryTests.IfcRevolvedAreaSolidTests.IfcRevolvedArea_To_Sphere: <no details avaliable>

VSTest: GeometryTests.IfcSweptSolidTests.IfcSurfaceCurveSweptAreaSolid: <no details avaliable>

VSTest: GeometryTests.SceneTests.ReadAndWriteWexBimFile: <no details avaliable>

```
",no
"Fine by me.  How do you feel about the usage down below, where it's `const set = index.externalIds[eid].set`?  In that case, it feels like either we should choose a new key for the array of descendants, or be ok with calling it ""set""?",no
"SymEngine doesn't need to be built as a shared library anymore. Both `-DBUILD_SHARED_LIBS=on` and `-DBUILD_SHARED_LIBS=off` will work. So I would just remove it from here. You can mention that both shared and static builds work with the Ruby wrappers.
",no
"Hi @shi-yan -

I appreciate you providing the details here, though asking this question as a comment on a several years-old commit is probably not ideal.  Opening a new issue or - better yet - asking a question on [Stack Overflow (with the libgit2 tag)](https://stackoverflow.com/questions/tagged/libgit2) would be best.

It looks like you're calling `git_repository_free` twice - once here in this method, and again in your destructor?  Only call it once, otherwise you'll double-free.  If I'm misunderstanding, though, please do open that question on Stack Overflow and we can figure out what's going on.

Thanks!",no
"This addresses a tp-exploit using minecarts and possibly boats as well. We will release as soon as we have a day or two running this on big servers to be sure side effects are not too nasty, because i am not 100% sure if there aren't any, e.g. with lag.
",no
"Actually, no. I found a way to fix the underlying problem. If there is a REPORT block inside a custom command block definition the Snap evaluator will simply treat it as STOP THIS BLOCK / IGNORE INPUTS.

I've just ran all the tests for this, and this way all the FINCH (and other hardware extension) blocks work again, but we still get to report out of nested custom C-shaped blocks.
",no
"Great, I will do a new release later today.

On Tue, 29 Aug 2017 at 16:12, Bodo Tasche <notifications@github.com> wrote:

> Perfect timinig. I just started to setup our CI server for private repos.
> Thanks for this 👍
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/hexpm/hex/commit/70b5aaf571de3cfd8ae3267d6cd916b2b5acf8b7#commitcomment-23947229>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AATV2o4DiFJ7gUZUiJxxHD0A3pAe4b9Lks5sdBxPgaJpZM4PGATF>
> .
>
-- 
Eric Meadows-Jönsson
",no
"Does the `Secondary` object contain state, such that it could not be shared amongst threads?   

Also, it would be great to have a big long Scaladoc and/or README explaining in general how the secondary workers operate, to make it easier for folks learning the code.
",no
"sorry about the delay just pushed 0.2.1

On Tue, Sep 25, 2018 at 7:17 AM, Rafael França <notifications@github.com>
wrote:

> Can we get a release now that Mojave is out?
>
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/discourse/mini_racer/commit/52920fac6240a94eaae1e92a9862614f2e387ce9#commitcomment-30628499>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAAUXR13tJwxQhKwYwrZu9y1BBr2OT2Xks5ueWfzgaJpZM4W3nCx>
> .
>
",yes
"This is a good question.  Right now, the answer is that whoever calls the compiler provides this  configuration file as a command-line argument, and can make any choices they like regarding it.  That's not a totally satisfying answer, though, because Pyret doesn't have a good story for _packages_, which I'm starting to understand as a future design space we'll need to address.  The issue is that this configuration file is global to the compiler, so any Pyret program that includes the compiler needs to provide a configuration file that describes the correct paths to `jglr`, which can't be the right long-term solution.

Of course, we have plenty of other languages to look at for inspiration here.  The crux of it is that a package mechanism specifies how to aggregate modules together after finding their files and compiling them for consumption by other contexts.  Once we go down that road, we run into all the design decisions about requiring pre-compiled packages vs. cross-project incremental compilation, libraries at the system level vs. the local level, and all that jazz.

In the short-term, this change is certainly no worse than what was happening before, where the compiler really only works well as an `npm` package that knows about all its own internal paths.  In the medium-term, elbow grease in merging user options with the default options is probably the way we'll go.  In the long term, we need to do some package system design.",no
"This was a silent, non-type-reflected change, that's the problem. Any code that thought it could construct a SQL query by looking at fieldDB now has to have an awkward check. In this case, `sqlIdName` isn't even available to use, because we're already using a specific `Field` constructor. Try running the esqueleto test suite from pull request 75 against the previous version of persistent-template.
",no
"Create_pseudofs uses the foreach_gsh_export() routine to iterate over the exports. That routine takes the lock (to protect it’s walking the export list) which means it is held for the callback routine (pseudo_mount_export_wrapper in this case). So ultimately, pseudo_mount_export expects the lock to be held. This dependency needs to be documented…

Frank

From: suhrud [mailto:notifications@github.com] 
Sent: Thursday, April 3, 2014 1:46 AM
To: suhrud/nfs-ganesha
Cc: Frank Filz
Subject: Re: [nfs-ganesha] Wrapper on top of pseudo_mount_export. (4cbce5c)

I am little confused, why do we need export_by_id.lock for pseudo_mount_export?
pseudo_mount_export() is called without it from create_pseudofs().

—
Reply to this email directly or view it on GitHub https://github.com/suhrud/nfs-ganesha/commit/4cbce5ce19aa154e015c2d17ff80e37409eae56a#commitcomment-5892587 .  https://github.com/notifications/beacon/399443__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcxMjEzMzk0MywiZGF0YSI6eyJpZCI6Mjg2MjYzMzd9fQ==--0482bc3a8ae0d5ca1cdad70ee3e8bb81fcbee18a.gif 
",yes
"what the...
mistake in PHPUnit shall not be fixed by diff package :(
if phpunit was claiming to support diff2, but it does not, simply drop v2 support for phpunit and keep v1 only, then, make new phpunit release that use diff2 with all the code updated
or, make diff2 backward compatible with v1, like suggested by @SpacePossum https://github.com/sebastianbergmann/phpunit/issues/2734#issuecomment-314543034",no
"Well, though ShrinkWrap makes no concurrency guarantees to users, this impl swap to a blocking impl from a safe concurrent one is something I'd like @aslakknutsen and @kpiwko to also review.  I _think_ it should be fine because we advise users to synchronize their own access to Archives anyway.
",no
"All of the 65279 (0xfeff, U+FEFF, BOM) characters can be safely stripped. That's what the Cabal parse should be doing anyway. I would report a bug, but they're part-way through a switch to using Parsec so it's probably irrelevant. I'm sure I'm using the ""legacy"" code path at this point. 

Looking at the package description for `nat`, I think the 0xf6 byte is supposed to be `ö`. In fact, that's exactly what [U+00F6](http://www.fileformat.info/info/unicode/char/00f6/index.htm) is. I'm not sure why that can't be converted from bytes to text. ",no
"This is not strictly necessary.

But as I said, either the function stays public, and I think we need be more careful with the way it can be called, to prevent future surprises, or it goes private in a closure, or prefixed with _, and then we can be less careful.
",no
"Consider a prebuilt object called `ShadowBoundary`. An ElementInjector should be able to get access to the closest shadow boundary. We can do it by either copying the shadow boundary or by walking up the tree of element injectors. The current code does the latter (I think because AngularDart works this way). It is not obvious to me which approach is better, especially considering that the view can get reattached during rehydration, and thus the shadow boundary may change.
",no
"These tags come from SQL. I have no other idea to implement this without breaking API changes of DBSession.

Right, having state in DBSession is not preferred, but DBSession should not be accessed from multiple threads at the same time. This implementation can be accepted.
",no
"Adding data mapper is premature. You should work on the API first **without** the database. This way you will learn TDD much better.

Make the API work first (with the token and error handling), refactor database component to a separate file (so it's easier to manage), write comprehensive tests for the database class and finally only then add database implementation.
",no
"This is a bit subtle. I had intended the meaning usually used in universal hash function literature. That is, you have a set of hash functions that you choose from randomly. The mechanism for this is normally just a secret key. Anyway, the new wording is fine with me.
",no
"well, it is less an issue for Composer, because it is rarely used as a library (and it controls the error handler when being used as the main project). But otherwise, it is an issue (which is precisely why everyone hates the Symfony 2.7.0 release and why we changed the way we trigger them in 2.7.1)
",no
"This won't be an issue in connect 3, but perhaps we may want to make a new release of connect 2 that adds the `enumerable: false` to `Object.createProperty` so that loading in sessions does not cause this warning by re-hiding the `_csrf` property? @jonathanong ?
",no
"OK, well it's useful for us to be aware if you're applying to another org - it doesn't affect whether we would want a student, but it tells us how many backup choices we need to have lined up in case a preferred choice is selected by another org.

You're also welcome to apply for more than one project with Xapian, but don't spread your efforts too thinly.",no
"Right; I don't think the new invariant on desugaring is an issue that should block a change like this, I just wanted to note it.  _Given_ that desugaring already needs to respect the existing scope structure, there's no need to check after, and good reason to save another AST traversal and merge it in with resolve-names.
",no
"I updated the release notes in 60f21f983f1c354283a3b5af39bbe173b83dd22c. I'd rather not touch `nixos-generate-config`, because I wouldn't how to guess a timezone for the user. IMHO, most distributions have an interactive dialogue that lets you choose your timezone during installation. That approach doesn't seem to fit well with us.
",no
"HF stands for hard float, GNU specifies dialect. It's just another prefix.

Linaro didn't release any ""official"" newer toolchain for gnueabihf. I created my own - ArchiToolchain (AT), for Cortex A9 with NEON, which you can find here -> https://github.com/ArchiDroid/Toolchain/tree/architoolchain-4.9-arm-linux-gnueabihf-cortexa9_neon

AT is based on Linaro 4.9.3 from 2015.02, and latest components (binutils, cloog etc.). It has everything I ever wanted, and is up-to-date (there is no March release yet).

If you have Cortex A9 device with NEON, AT should be the most optimized toolchain for your device right now.

Good luck.
",no
"There are much more features in Paradox than in the Toolkit. Though there are maybe a couple of little details that are not yet streamlined (like mulitple windows), but this should be fixable.

Note that the Toolkit will still be accessible and you will still be able to fork and fix it. But we won't provide anymore fixes/features to it. It will also no longer be part of the SharpDX official distrib.
",no
"Not sure if we should put this into a module? (the other shared examples are not). RSpec now [recommends explicitly requiring support files](https://www.relishapp.com/rspec/rspec-core/docs/example-groups/shared-examples) but making such a change would be out-of-scope for this PR.
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 39](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=1110&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 5 (2 new), passed: 65 Build time: 02:40:12
### Failed tests

```
VSTest: GeometryTests.XbimGeometryToIfcTests.ConvertIfcCylinderToBRepTest: <no details avaliable>

VSTest: GeometryTests.XbimGeometryToIfcTests.ConvertIfcCircleHollowProfileToBRepTest: <no details avaliable>

VSTest: GeometryTests.IfcExtrudedAreaSolidTests.IfcExtrudedArea_With_IfcArbritraryClosedProfileDef_And_IfcCompositeCurve: <no details avaliable>

VSTest: GeometryTests.IfcRevolvedAreaSolidTests.IfcRevolvedArea_To_Sphere: <no details avaliable>

VSTest: GeometryTests.IfcSweptSolidTests.IfcSurfaceCurveSweptAreaSolid: <no details avaliable>

```
",no
"@magnumripper  there WAS a core change (config.c), but it should be very isolated.  I thought it better to expose that variable using a getter function, vs making it a global non-static var.  The getter function is NOT documented in a header anywhere.  I just declare and use it within the dyna_parser function. Normally code should use the interface into config. But in this case, a great amount of overhead is saved by simply walking the entire config db 1 time, capturing off the dyna formats on that one run.  Before, we would do 4000 partial/full walks of the config, with almost all of them being 'full' searches.  So we have reduced that overhead almost 4000x (not a bad savings).
",no
"Oh cool I wasn't aware of that link. So basically it entails a few things:
1. Test to make sure everything is working as expected.
2. Merge devel into master
3. Tag the release with git tag vX.Y.Z
4. Update version in package.json for npm
5. npm publish ./ (https://www.npmjs.org/doc/cli/npm-publish.html)

We should get a few others who are interested in the project to take a look at the code and offer feedback and review. @gabrielhpugliese: How do you feel about taking a look?
",no
"> do we want to remove the check for line length for release notes and see how that goes?

Sure, sounds like we have consensus (or at least lack of opposition) on the mailing list—from the link you sent me yesterday, perhaps we should just delete [this method](https://github.com/gradle/gradle/blob/release/subprojects/docs/src/test/groovy/org/gradle/docs/releasenotes/StaticReleaseNotesTest.groovy#L47-L59)? @big-guy, do you want to do that?
",no
"Next time open issue so we can track such requests properly, yes, you're expected to parse yourself (because I have no clue if you want to follow ASF convention in commands or do whatever else), and yes, making ASF helpers to make it easier for you is the right thing to do.",no
"What's going on here deserves some documentation.

The HPSS algorithm looks at which median filter (horizontal or vertical) is responding more for each time-frequency bin, and assigns energy accordingly.

At the boundaries of the data matrix (ie spectrogram), the median filter is not fully supported, and 0-values are imputed to compute the filter response.  This causes a decay in the horizontal (harmonic) median filter near the time boundaries (t=0, t=end of track), and in the vertical (percussive) filter near the frequency boundaries (f=0/dc, f=sr/2).

Consequently, the percussive filter skews low in the bottom `kernel_size` bins of the spectrogram, which results in excess energy being assigned to the harmonic component.  The result is that the harmonic component becomes polluted with low-frequency noise.  (A similar effect is visible in the percussive component near the time boundaries, but the results are less detrimental due to their relatively short duration.)

To circumvent this, `util.medfilt` applies a reflection padding to each dimension prior to the median filter, and then trims out the excess.
",no
"You can avoid all of this by wrapping the response function in `json_params`. 😄 

If you're POSTing data, then you don't need to worry about the distinction between a body and query params -- which in the case of all JSON data I think that makes sense.",no
"@mbj When this module is mixed into a class does this method become private automatically, sort of like how `#initialize` does? If not then we should probably specify it as private explicitly so that we respect the visibility of the same named method in the superclass.
",no
"I can see you're organizing your rules by ""topics"" (positioning first, then dimensions, then colors, etc.) That's nice, I do it the same way. Some people choose to have alphabetical lists of rules. As long as you're consistent, that's OK.
",no
"> I don't think triggerMethod should have a monopoly on the on prefix. I see as on coming from html onclick, onblur etc and being a general handler prefix. We can choose another prefix like handle to be even more clear, but I don't think using on would be terrible.

Very good points – I agree. Would you agree that our concern, then, should be not interfering with the triggerMethod calls?
",no
"You shouldn't do that, the `activeTabSupportMinimap` have an explicit name that allow to not bother about the implementation of the test, by changing to `getEditor` instead you expose the implementation of the test, making it less clear, and more error prone if we need to refactor the minimap support test. 
",no
"@Spikhalskiy @normanmaurer - IIUC we are using a counter that is shared across all addresses to derive the round robin index. When I think of round robin I think of ""each time I want to communicate to a particular logical address (dns, etc...) I rotate the socket which is used"". The approach implemented in this commit will not provide this behavior, and in the pathological case return the same socket for each logical address. I agree what was implemented previously was not ""round robin"" either, but it's worst case properties, and properties in general are much more predictable. Perhaps we should use the behavior before this commit, rename the class, and take another stab at implementing ""round robin""?  WDYT",no
"It's not going to grow that feature. There will be a separate method (`get_credentials` above).

Note this method is a helper, not what actually is exposed in `get_application_default` and `get_application_default` calls is with the 3LO stuff turned off.
",no
"Nitpick: indentation is a bit screwy here.

Also - generally it's good practice to use 2 actual spaces, rather than tabs.

Your tabs may be set to 2 spaces - but put your code into any other editor (eg up here on github or shared with friends on different text editors) and it will not be the same.

ruby best practise is to use 2 real spaces for indentation.
",no
"Is this now a public method, I'm worried we're now exposing a lot of internal methods to developers that are not part of our API. Less is definitely more and we want to expose as little of the API as possible to meet the requirements of [our IDL](http://docs.ably.io/client-lib-development-guide/features/#idl)
",no
"Release of 1.3.1 has been performed.  It should show up in the next few hours in central.

Thanks for all your help!

Jeremy

From: Rémi Alvergnat [mailto:notifications@github.com]
Sent: Wednesday, July 29, 2015 3:00 AM
To: hazendaz/javabean-tester javabean-tester@noreply.github.com
Cc: Jeremy Landis jeremylandis@hotmail.com
Subject: Re: [javabean-tester] Formatter you got me! (b5c684b)

Thanks for merging my changes ! :)

Could you perform a release now ? I think there's no API changes (only deprecated methods) so it can be a minor release.

—
Reply to this email directly or view it on GitHub https://github.com/hazendaz/javabean-tester/commit/b5c684b92a624c8596df0a224007da5bac7fb606#commitcomment-12413343 .  https://github.com/notifications/beacon/AA7ho7qTSXOPi5SbB4Y1BVn98fZmol7Wks5oiHFbgaJpZM4Fhw3e.gif
",yes
"I would say let's rename this cloneTopicToTypes and return a copy for now (at least that's what I chose to do in December).

If we feel a copy might introduce a performance overhead which is unacceptable, I would do implement appendTopicToTypes and pass a vector by reference.

Another possibility is to move whatever the client code is using with the TopicToTypes vector and just do it internally from this class.",no
"Both `Object.{wait(), notify(), notifyAll()}` and `Condition.{await(), signal(), signalAll()}` work the same. 

Each waiting thread gets the monitor/lock, calls `Object.wait()/Condition.await()`. These wait methods implicitly release the monitor/lock. It's guaranteed that once a waiting thread is awaken, before `wait()/await()` method returns, that thread will own the monitor/lock.

When another thread requires to `notify()/signal()`, it must acquire the monitor/lock, call `notify()/signal()/notifyAll()/signalAll()`, and release the monitor/lock explicitly.

Difference between `notify()/signal()` and `notifyAll()/signalAll()`, former only notifies/signals a single waiting thread, later notifies/signals all waiting threads.

So you cannot `notify()/signal()` a thread that is not waiting...
",no
"@mingwandroid I understand what happened. But only because I had the dumb luck to be in another conversation with you two to know about your plans.

Other contributors are out of luck: they did not follow the discussion in git-for-windows/msys2-runtime#5.

My comment suggested that this commit left the door wide open to explain to _any_ contributor who has unfinished topic branches on top of `develop` what happened, and how she can rewrite her topic branch to fit on top of `msys2-master`.

To help such unfortunate souls, let me give it a try: to transport your topic branches over to the new `msys2-master` (which is based on Cygwin's own `master` branch), you will need to [rebase your changes](http://git-scm.com/book/en/v2/Git-Tools-Rewriting-History). Most likely, this will entail the call:

``` bash
git fetch https://github.com/Alexpux/Cygwin msys2-master
git rebase --onto FETCH_HEAD 6e8cd76e9ced1e6cf02f9df146c818b4e86ea556
```

For more fine-grained control over the rewriting process, pass the `--interactive` option to the `rebase`.

Note: the commit 6e8cd76e9ced1e6cf02f9df146c818b4e86ea556 is the last commit on the old, now abandoned `develop` branch.
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 27](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=859&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 3 (1 new), passed: 65 Build time: 00:12:47
### Failed tests

```
VSTest: GeometryTests.SceneTests.ReadAndWriteWexBimFile: <no details avaliable>

VSTest: GeometryTests.IfcExtrudedAreaSolidTests.IfcExtrudedArea_With_IfcArbritraryClosedProfileDef_And_IfcCompositeCurve: <no details avaliable>

VSTest: GeometryTests.IfcSweptSolidTests.IfcSurfaceCurveSweptAreaSolid: <no details avaliable>

```
",no
"> Not sure, it pre-existed in the code base.

Well whatever it is, it should not be part of the public API.  We need to figure out what it is, and set is exposure suitable so that the Ably namespace is not polluted with undocumented classes.
",no
"The issue with adding `GenRouter.subscribe` is that we also need a function that tells the router to subscribe to a source. Previously it was called subscribe but now I am out of names. :) I was thinking we don't need to expose the internal `$gen_subscribe` and `$gen_unsubscribe` with functions because they would be used by router implementations and not by router users.

Another idea is to provide GenRouter.Spec, where we define the demand-driven protocol and those helper functions, creating a proper division between what should be called by users and what is called by implementation. Thoughts?
",no
"Patience. The priority is the release -- I have no doubts you'll get tab
reordering in much less time than you've already waited :)

On Mon, Apr 18, 2016 at 12:49 AM, Benjamin Greenman <
notifications@github.com> wrote:

> ""Allowing tab reordering is not intended."" racket/drracket#52
> https://github.com/racket/drracket/issues/52 😢
> 
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly or view it on GitHub
> https://github.com/racket/gui/commit/f0d10e9cc830cb006a29ccff4377ec6f57b41df8#commitcomment-17137548
",no
"My main matter is that filter configuration will be not visible and customizable in the calling API.
We must find the way to allow the user to choose which filter he want to run.

I have worked here https://github.com/openMVG/openMVG/issues/1089 on extending the API in order to make the matcher factory a parameter and allow the user to have various matching mode.
This way the distance_ratio is not longer appearing in the HighLevel API but carried along with the matching method.",no
"It's confusing because we're misusing permissions a little bit here - checking for a not permission is a weird thing. For a real world example, we want to show the Reports link in the dropdown but not as a tab to save horizontal space. To achieve this we use `can_view_reports_tab` and `!can_view_reports_tab` respectively, so toggling the permission moves the link around. If `null` always rejected then the link wouldn't show up in either place.

The initial assumption was it should always be in one place or the other so this made it a one click change. But that assumption has since changed. Perhaps it would have been more clear to have separate permissions, eg: `can_view_reports_tab` and `can_view_reports_hotdogs_link_thing`, then we wouldn't have needed the `!` operator at all. I'm not sure if this would be a breaking change this late in the game...

My main issue with `null` being treated as special is it introduces a third behaviour which is difficult to communicate to the configurer and really hard to represent in the configuration UI. Making `null` behave the same as `false` makes the configuration UI simple and aligns with what I think a configurer would expect.
",no
"Why are you duplicating documentation comments between the `.ml` and the `.mli`? This looks like a maintenance headache, and concretely they seem to be already out of sync as this comment here is not in the `.mli`. I think you should choose one side and stick to it (implementation comments go in the `.ml`, but for interface/documentation you can choose the one that is most natural to you).
",no
"Unfortunately, the toolchain for bringing MonoTouch up to date with the latest Xamarin release (which is necessary to make use of the APIs that I'm using in the RoboVM backend) has fallen into disrepair. I started to bring it up to date and ran into so many problems that I decided it would simply be easier to finally implement the RoboVM backend.

The MonoTouch backend is not going to see any more updates and will probably eventually be deprecated.
",no
"I don't have preference for one over the other. My main concern is that it
needs to be a SNAPSHOT revision in order for the Maven release plugin to
work.

On Fri, Oct 24, 2014 at 2:21 PM, seriousamlqz notifications@github.com
wrote:

> What's the conclusion in the end? 4.0-SNAPSHOT or 1.0-SNAPSHOT? @pdaian
> https://github.com/pdaian @dwightguth https://github.com/dwightguth
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/runtimeverification/javamop/commit/df124c4b6a1ebbfa51df3619fbd7eb899eb670a8#commitcomment-8296470
> .
",no
"Currently any user (including non-logged-in users) can access the ItemsController.

Review the `before_action :authenticate_user` code from bloccit. This prevents anonymous users from accessing a controller's actions.

Consider adding `before_action :authenticate_user` to `ApplicationController`. This will make authentication-required on by default for all controller actions as all controllers inherit from `ApplicationController`. This is a secure default to use. You can then be selective about which actions should be available to non-logged-in users with `skip_before_action :authenticate_user, only: :some_action_name_thats_safe_for_all` in the resource controllers.
",no
"Got it. We should put a general comment above the first of these functions, which says they are safe to call on undefined.
In general, I think I would prefer to have the caller check for undefined first, but it's a personal preference.
",no
"Well, of course that's going to be a problem, but that's the same problem no matter what you do. If you capture instance-state in an inner class then you're hosed.

I'm in the middle of the release right now. What users can do is:

class MyPrioMailbox(config: Config) extends UnboundedPriorityMailbox(new MyGenerator)
",no
Note that we don't support llvm 5 with assertions on. I don't have the issue handy but it's a bug in llvm. In the llvm6 branch I'm making sure that we don't trip any asserts for when the next llvm release comes out. (And backporting the fixes to master branch where applicable),no
"I'm using 
```sh
LATEST=$(git tag -l | egrep '^v[0-9]+\.[0-9]+\.[0-9]+$$' | sort --version-sort | tail -n 1)
```
in the current setup to determine the latest release of a project, which again is important for stability of the tester.
Tags can be listed also be done before cloning, using `git ls-remote --tags git://github.com/...`.",no
"- Why not use `window.location.hostname` directly?
- use `JSON.parse` instead.
- I think `$.post` will do the `encodeURIComponent`.
- Why strips the leading '/'?
- If you safe the data in plain text, there is no need encode and decode again.
- `config` should contains only user configurations.
- Same problems in `$.serverGetDirect`
- I don't think caching all links by default is a good idea.
",no
"This commit contains a lot of locks of single operations which I'm not sure if they are of any use especially on the getters but also on the ones that only protect the action of changing the value of a variable (especially booleans). A lock only makes sense if you want to make sure that the state isn't altered by someone else between multiple or during ""long"" operations / actions.
",no
"@jmazzitelli cc ^ We should find an occasion to discuss the details of the possible future scenarios. Maybe the EAP 6 support is doable by an agent that runs on a separate EAP 7 and Java 8. In that way we could perhaps be able to use the Java 8 goodies?
",no
"@XhmikosR: If nobody has opinion on that one by tomorrow I guess release the hotfix build without it. It's not important enough to include it without review.

If you want you can probably cherry-pick https://github.com/kasper93/mpc-hc/commit/dbec868e1cdc7a9efa46b67248a648364f90ba5c because kasper said it's ok and anyway it really shouldn't have any effect for most users and the few that there unhappy with the change will be happy again.
",no
"I already removed custom code, but I need this because I cannot run semantic-release (or unit tests really) from Node 4 - some plugins I use are not Node 4 -compatible. Thus I limit the semantic release to run on Node 6, but the Travis CI runs both Node4 and Node6. See https://glebbahmutov.com/blog/releasing-for-old-node/",no
"Neither the `messagesDownloadUrl` nor the `reportsDownloadUrl` take district into account, so this change exposes all national data to district admins. In addition to this change we need to filter the downloads to the district admins district.
",no
"unrelated issue: the parser improperly reports a `class` kind of scope, because it doesn't actually track the correct kind and makes a guess.  There's a `FIXME` in the code already, but it's fairly tricky to correct especially with the tag emission delaying we do to get the right kind (e.g. to report a class for a function that use `this`)",no
"If you're going to submit a pull request against `scala/scala`, which would be very welcome, keep in mind that in 2.11.0-M7 things are slightly different. For one, `Context` is deprecated, so you would have to choose between `BlackboxContext` and `WhiteboxContext`. Which one would you pick?
",no
"This is a a workaround for a regression in JRuby, not in Sequel, and Sequel's policy is to only release patch versions for regressions in the latest release of Sequel.  For example, if this was working in Sequel 4.29.0 and broke in 4.30.0, I would release 4.30.1, but that is not the case.

The 4.31.0 release should be next Monday, so you won't have to wait that long.
",no
"It has happened several times that the NCS stops working and packages on Travis start report errors. Which is unpleasant.

Removing the file `easy-coding-standard/bin/easy-coding-standard.php` and forcing me to hardcopy another file https://github.com/nette/coding-standard/commit/eb32e4aca059c45a7803df0d84f22e44af858204#diff-2eb2930111864beeb409e946751215b1 seems to me like kicking the legs…",no
"I don't think ShortDecimalType and LongDecimalType should be in the SPI. They are implementation details of DecimalType, and the distinction only exists for performance reasons. See my comment on https://github.com/Teradata/presto/commit/74f60676451605ec8923007963943d2dda604afe#commitcomment-16437020 for a related point.
",no
"FYI, 1.9.9 is not yet out, but the change to getValueAsString() was back ported to 1.9.x branch too therefore these tests fail too when you change the openmrs version in the 1.9 profile to 1.9.9-SNAPSHOT, so i hope it is okay to use a not yet release version here but we will need to take care of 1.9.9 too
",no
"Putting the verb below the resource makes the file a little more repetitive, as each resource needs to have its own verb.
I find it more clear to group resources by method, which is why I initially used top-level GET and POST. But I'm open to changing it if you think it's more convenient.
",no
"@AdSchellevis do you have concerns about this fix, especially with regard to deadlocking configd? we have 3 success stories including one of my deployments...

The details are in https://github.com/opnsense/core/issues/1668 but very briefly: this script is called by dhcp6c, which listens on UDP 546, but then it leaks the port to the shell, to rc.newwanipv6, ultimately to OpenVPN if that is configured and OpenVPN seems to magically poll all ports for packets which then seems to cause to blackhole packets for the original dhcp6c.

We could fix dhcp6c instead, it's the obvious leaker, but I would like to have this change as well as it's more portable?",no
"ok, also now it's works for me, i had to add it to different cypress-touchkey with Fluxi code.
and auto brightness works, but now it's not timeout,

if light sensor exposed to light, then keys light but not turn off...
is that was the design or we can fix that?
",no
"You share `/var/run` for 2 different purposes:
- sharing the docker socket (/var/run/docker.sock)
- sharing the plugins directory (/var/run/scope/plugins)

It would be clearer to have 2 separate volumes (& 2 mounts) to avoid over-sharing.

ditto in other plugins
",no
"I added this in to protect against re-starting a transaction. I don't know if it could happen but the danger is there because start_pay gets called from two places, once in the login handler and once in lobby (if logged in already). I don't think start_pay will be called twice, just wanted to check.
",no
"@skeptical it says 
 `INFO  2014-11-01 01:40:24.424 [net.pms.PMS.main()] Checking shared folder: E:\Filmy\Test video \u010D\u0161\u0159\u010D\u017E
WARN  2014-11-01 01:40:24.425 [net.pms.PMS.main()] The directory E:\Filmy\Test video \u010D\u0161\u0159\u010D\u017E does not exist. Please remove it from your Shared folders list on the Navigation/Share Settings tab` and in the UMS.conf is `E:\Filmy\Test video \u010D\u0161\u0159\u010D\u017E`.
",no
"Modifying the file is permitted as by the MIT license. We are able to choose one. and we should choose MIT. We may even remove the stuff as a whole and just link to the original file. 

So what the user sees is the TW license, which just references the original. ",no
"Hi @olegmeister,

I don't have any release notes prepared for the 3.0.0 release, but note that the changes here are identical to the ones in the 3.0.0-preview2 release, where the key change was adding support for Spark 2.0.0 (there were other bugfixes as well; see the commit log for those).

My main reason for publishing this non-preview release was to unblock the 2.0.0 release of `spark-redshift`: https://github.com/databricks/spark-redshift/releases/tag/v2.0.0
",no
"Please don't comment on individual commits in personal repos like this; I might not be available and there are others who can help.

Either ask questions on Stack Overflow (spring-integration tag) or use [GitHub Issues](https://github.com/spring-projects/spring-integration-kafka/issues) for the project.

In this case, please open a new issue on GH and provide more information, including exactly which version of spring-integration-kafka you are trying to run this against.
",no
We should make many of these accessors protected or private because they're not used from outside this class.  Some may not be being called at all in which case we can remove them completely.  Some of this is an existing problem I think but .. some of these accessors look new.,no
"Yep! I hope to start working on it in September and release it before October.

> On Aug 30, 2017, at 13:40, Nicholas Ricciuti <notifications@github.com> wrote:
> 
> @mraible wondering if a new JHipster module for Okta is coming out soon to replace the Stormpath module?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.
> 
",no
"Hmmm, following on from the discussion on https://github.com/micropython/micropython/commit/baaaf65eaaeed7d7db56985c5093d4d07966afad, what's the preference for 3.4.0 over 3.3.0? (is there some existing conversation about this I can read for the rationale?)

If uPy is now definitively aiming at compatiibilty with 3.4.x rather than 3.3.x, should `tests/run-tests` be updated to say that MICROPY_CPYTHON3 should point at CPython3.4 ?
",no
"I think we should test end result, not some internal implementation detail.

As what matter is that proper element get highlighted, not that some property was set.

Unless, we expose this property, for cross-component communication, or we would like to have some internal staff unit tested as well to test separated layers of entire component.

So, I would at least add highlight test as well.
",no
"(Lynne Jones) The colRegistry is intended to be used from the driver or from a python script to get the columns needed from the database or the complete list of columns. We certainly could have the user at the other end just access this info directly instead of through these methods. 
",no
"Yes. I would certainly want to run the tests of a project before deploying code to my server. Any scripts that auto-install should also assert that the tests pass. I should not trust that the tests passing on a separate system indicate they will necessarily pass for me.

In any event, tests should _not_ be conditional. There should be a context for both settings of the variable, the explicit setting of them, and a duplicate test to ensure that in both of those conditions the tests pass. If you run the tests, and then change the environment variable, you should still expect that the project is 100% passing. However, in this case, what you have is the potential to change an environment variable and have a failed build suddenly occur simply because of that. Not to mention the now necessary action of setting an environment variable to actually have full test coverage.
",no
"Wrong point. The point is, I don't want this kind of bug report against the softgpu:

```
 User: Waah! I'm getting lines between my tiles, even in softgpu!
 Me: Did you force filtering?
 User: Doh!
```

That is, the softgpu should, to the best of our time, ability, and knowledge, be identical to what the PSP renders and any difference is a bug. No options that can muck it up. We already have enough bad reports on the OpenGL side.
",no
"Ah, good news. Trending data does have the trakt_id :-) 
its was the TraktTVUdateService.js that was deleting it!

```
            /**
             * Save Trakt.TV's trending list to localstorage once a week
             */
            updateCachedTrending: function() {
                return TraktTVv2.trending(true).then(function(result) {
                    localStorage.setItem('trakttv.trending.cache', JSON.stringify(result.map(function(serie) {
                        delete serie.images;
                        delete serie.ids;
                        delete serie.available_translations;
                        delete serie.fanart;
                        delete serie.banner;
                        delete serie.tmdb_id;
                        delete serie.trakt_id;
                        return serie;
                    })));
                    return true;
                });
            }
```

\o/
",no
"This is read-only mirror of file CVS repository, updated every half hour. NOTE: do not make pull requests here, nor comment any commits, submit them usual way to bug tracker or to the mailing list. Maintainer(s) are not tracking this git mirror
",no
"`DefaultProperty` also does whatever string conversions you've defined, i.e. converts datetime strings to datetimes, etc. If you want to turn these off throughout, we can upgrade to `jsonobject==0.6.0b1` (I should make a real release soon) and just add

``` python
class Foo(JsonObject):
    class Meta(object):
        string_conversions = ()
```
",no
"@magnayn you may not use release plugin, but you must follow maven versioning rules and logic. Any version without -SNAPSHOT tail must define only one source state.  So you should do 2 commits during release
I will try locally avoid modules and back to previous source code layout
",no
"I think the original translation might not be correct, so @sonora is in the right direction. Simply because  people should not choose between ""speed"" & ""safety"". ""Safety"" is very strong word & might not describe what we want to say. ""Prefer major roads"" might not be technical incorrect but it has more explanation in it i.e. we are not going to build a route from a cliff or something like that. ",no
"I think using the `displayFlags` meant for the window are not suitable for your intermediate buffer. Just pass in `SDL_SWSURFACE`, which will ensure fast CPU access to the pixels of the surface (we're not using hardware surfaces, and as far as I know we can't). Also, please make sure to pass 0 as alpha mask rather than `fmt.Amask`, since if this happened to be some value it would cause `SDL_SRCALPHA` to be set, which doesn't need to be since we don't want this intermediate surface to have an alpha layer.
",no
"This technique is the linchpin of these changes (it also survives through the whole PR, which is why I'm commenting on it now). `dispatch_block_notify` submits blocks to queues after a block is executed, modeling an async/await/rejoin workflow without threads or locking. In this code path, the Deferred is being created in a filled state (thus, the value is already available). Calling this block now is indeed a no-op, but it's what allows for `upon`s called after the creation of a filled Deferred to execute immediately
",no
"Skeleton, auto-generated files like this can safely be removed. 

Get in the habit of reviewing all files generated by the `rails g(enerate) ...` command and delete those that aren't needed (they can always be generated again later if it turns out they're needed). 

_Before_ `git add`-ing, use `git status` to review all files that have changed or have been created.

In particular, open every newly-generated file and try to determine if its needed.

If a newly-generated file is not needed, then do not `git add` it. Instead delete it (you can use `rm path/to/unwanted/file.extension` to delete a file from the command line).

By keeping the app free of unnecessary files like this it tends to make maintenance and debugging a little easier as the app contains less clutter.
",no
"You're accessing versionbitscache here without grabbing cs_main. Suggested solution:
- Don't expose versionbitscache from main.h, but create a wrapper function instead.
- Add this information to CBlockTemplate, and return it from CreateNewBlock (this way, it will be consistent with the created block template).
",no
"@particlebanana This was done this way on purpose-- the error is handled below (this just attempts to release the connection to the pool first in case it was somehow connected).  If that fails, it doesn't mean anything.

We could also just remove that line of code, but since I didn't want to spend the time to get to the bottom of it, I wanted to go the safe route.
",no
"There's no perf difference but the BufferClass is exposed through the module, so it may be a breaking change to put Array all the time. As for me I would put Array all the time and remove the BufferClass reference which seems not usefull.
",no
"Ahhhh.  That's why the .elf/.bin files aren't showing up for the newly tagged release then?

Should I manually build them and attach them to the release, so we don't have to muck around with trying to retag things?

It wouldn't take me long to get done. :smile:",no
"The comment doesn't explain why you group attachments by document. It seems you're trying to do some optimization but it's not clear what you're trying to optimize. The documents loaded from the database are cached so even if there are multiple attachments from the same document, that document will be loaded once from the database.",no
"> WDYM by that? The context is accessible from velocity with $xcontext, no PR needed. $doc.delete() as well, and it will read and use any BATCH_ID value set in the xcontext to set it to the recycle bin's deleted document.

I mean that you should look more closely to the implementation of Context#get(String) :)
Any other behavior would be a major security hole.",no
"HXCPP does not clobber the cache between debug and release in my testing, any longer. If it does, please let me know!

I feel that there are many reasons why someone may choose to separate their builds, however. Why stop at ""android/debug"" when you might want ""android-debug-x64-qatest"" instead? This is customizable using `<config:android output-directory="""" />` 😄 

The separate directories also made things strange for iOS and HTML5 😕 ",no
"Yeah, as you mentioned, errors here wouldn't be reported to the user and instead the entire macro expansion will fail silently. There's no good solution for that now, so error reporting in implicit macros is kind of crippled. One can look up the error in -Xlog-implicits, but that's quite awkward.
",no
"Don't post comments and start debates in random locations on the code repository.  Commit comments are only meant to discuss the specific commit they are attached to.  Unrelated comments have been deleted to avoid adding random noise to the repo.
",no
"We no longer care about case sensitivity anywhere in the codebase except when looking up the model by identity from the collection dictionary where they are indexed. This solved a lot of issues lower down in the driver where you would end up with a table name like `fooBar` and Waterline would re-map that to `foobar` which would error.

Indexing using the lowercase value makes it easier to lookup. In this case lowercasing when comparing isn't strictly necessary but prevents the case where a `collection: 'FooBar'` on an attribute wouldn't strictly match in certain cases.",no
"1. you should not be considering `dev-master` as stable
2. you should have asked for release earlier

@stof , I guess we should have released all drivers after Mink 1.6 release before making any non backwards compatible changes in `dev-master`?
",no
"This is called to ask for access to a file if we don't have access to it. If the sandbox isn't enabled, it was returning false (which indicates ""We couldn't get access -- cancel what you were doing."") so this was preventing any action that involved loading a file when there is no sandbox active.
",no
"if they add a permission the validator doesn't know about there is no error, correct? I think that is good. However, I think we should present a warning saying that the app has an unknown permission. That would help prevent typos for something like ""devicestorage"".
",no
"Private functions are great. But generally we make a distinction between ""functions that operate on an object or make use of its members"" and ""functions which are executed to help with some other function but which do not need access to any of the object's members or other functions."" Consider: If I call `obj.method_a`, I expect `method_a` to somehow give me information about `obj` (or change `obj`). But in this case, `permutation_matrix_from` would give no information about `obj`, and doesn't change it either.

It doesn't need to be a separate file, I don't think. You can just include it directly in your current file, probably as part of the NMatrix class definition.

```
class NMatrix
  module FactorizeLUMethods
```

but it's possible Ruby won't let you do that, in which case you have to declare it separately, in the way I demonstrated before. It can still go in the same file in that case, or you could put it in `math_helpers.rb`.
",no
"The comment in the fragment you deleted above says ""redefine, because alignment is ensured."" It means that, in this file, `GETU32` and `PUTU32` are only used in cases where the pointer is aligned on a 32-bit boundary. Thus, we can always cast `p` to `(uint32_t *)` and use `bswap_u32` if `bswap_u32` is defined. And, it seems this file assumes that BSWAP4 was always defined, so that means we can assume `bswap_u32` is always defined. But, in that case, why not also assume that `bswap_u64` is always defined? In that case, you can rewrite this whole block to:

```
    Xi[0] = to_be_u64(Z.hi);
    Xi[1] = to_be_u64(Z.lo);
```

Otherwise, with the way you currently wrote the patch, we'll likely regress performance on any platform where `STRICT_ALIGNMENT != 0`. Not sure if it matters.
",no
"1) I was answering by e-mail.

2) Lots of off topic, but that's nice.
BTW, now I'm using https://github.com/osyo-manga/vim-watchdogs instead of syntastic.

3) Oh, what's an old code, I'm not using VAM anymore. But your suggestions are good and quiet useful.

Please, can you answer clearly. Can we use pahtogen now and after that reinvent the system like this:
⋅⋅1) Use VAM as a plugin mng, maybe fork it and create smth like nixos-vam.
⋅⋅2) Let it load all plugins by default.
⋅⋅3) Let users manage it's settings at theirs .vimrc
⋅⋅4) Maybe create nixos config like vim.useSystemPluginManager? And by this eneble vam? Or maybe vim.loadAllSystemPlugins (then use pathogen)? Or smth like this. (calling @bjornfor here)
And after all this is done we have to create a wiki page about vim and how do we manage it at nixos.

And about information I've deleted. Now it's place is in wiki or smth, it's bad idea to provide information in the pkg. So the best way is to create a wiki page and give a link to it. Do you agree?
",no
"Just as a headsup:
Note that this (replacing datalist.html with an empty-message) prevents Ajax-updates of that data list.

S3DataList.html() will render an empty-section itself if there are no data, but it will also always render the data list widget (empty+hidden in this case) that is needed to bind the JS to Ajax-update the list e.g. when filters change so that suddenly there are matching rows.

A mere empty-section can not be Ajax-updated into a data list, nor can the filter form even trigger the update without its target being rendered. The empty-section is just a static DIV without identity or functionality to update itself.

Same applies for datatables.

Here you may not need the Ajax-update since there is no filter that could change - but generally, data list controllers should always return datalist.html() even when there are no rows.",no
"If the buffer is already open there is an error (add ! to throw away
changes).

That's why I added the silent - because it was least code. If you add
sp, then you'll get many splits (not much better).

Of course you can add more code doing this : ""if buffer is open then
reuse it else open it"" - I was too lazy - sry.

Another option is w|q after having added some lines (then the log is on
disk, too). But I don't like writing the buffer many times.

It was just the most simple short thing which worked which came to my
mind.
",no
"The C++11 `<random>` library is fantastic :+1: 

I'd recommend making your engine static and shared so you get a guaranteed distribution among all the places you need random numbers. This [paper](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3551.pdf) is superb.
",no
"Oh I see, my concern was that it is used in the shared app_config https://github.com/mozilla/fxa-content-server/commit/495063766982073ba4fff6eac0b10f1242c5439b#diff-4359012f0477286d7b8f8c89f4a714d6R21
Might break `grunt build` in production
",no
"OK... the file GitHub creates from the release (the one you linked to) is a tgz of the source code. The asset I added in the commit is the `python setup.py sdist` derived files that Fedora uses. They contain different things though. Very confusing. :-/
",no
"I'm thinking we should memory-map instead. Think 32-core host running various sessions against a 2 GB file. Using mmap, it will be just the 2 GB of shared virtual. With current code, 64 GB will need to be allocated...

But that's for later. Since we can't write to the mmap region, we can't replace the linefeed with a null, so we need to use pascal strings or something.
",no
"I chose not to talk about `django.setup()` here on purpose.

With your change, users encountering the exception are likely to try to call `django.setup()`. This will hardly ever be the correct solution. The only situation where this would be correct if is they're using Django from a standalone script (not a management commande) and relying on `DJANGO_SETTINGS_MODULE` being set. Few users do that.

I don't like the idea of targeting an error message at a minority use case for expert users at the expense of less experienced people who will end on the wrong track.

@collinanderson, @timgraham, if you want to do something here, put a link to the troubleshooting guide in the docs.
",no
"A temporary database is created, non-IBL subjects are cascade-deleted with django on the temporary database (cannot be easily done directly with postgresql as the cascade delete is implemented by django, not postgresql), and a JSON dump is created from the temporary database.

This feature requires to modify the `settings_secret.py` as follows:

```
'default': {...},
'ibl_tmp': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'alyx_ibl_tmp',
        'USER': '***',
        'PASSWORD': '***',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }

```",no
"**Only** the editing widget checks for permissions. If you don't do any permission checking in this API, users will be able to see units that they have no access to. Furthermore, they'll get no editing widget at all when navigating to units, giving the impression that something is terribly broken.

So you **must** do permission checking here, otherwise Pootle's `view` permissions can be considered useless.

By the way, when addressing this we moved to project-level `view` permissions. Further details in [833aa2776 @ evernote/pootle](https://github.com/evernote/pootle/commit/833aa277616d6c88c9de84094c87c71afe36e6d0).
",no
"Do we have a use case where it wouldn't? I feel like this is a great place to store config, which is why we chose it. Previously, it wasn't even configurable at all, and nobody has raised an issue with that yet. I feel like making it configurable is a great call, but it would remove a lot of extra logic from a lot of peoples' integrations if we could provide at least some way to hide away and abbreviate this large block of logic. Having it as a default is one option, maybe providing a helper would be another?

I just see this being replicated by every single sprout integration if we don't, which would make me sad.
",no
"I'm not talking about supporting for runtime and compile-time reflection. It all breaks down even for compile-time reflection. In a companion object for some data structure that you want to provide a lifter for you won't have access to `c.universe`, which means that it now becomes impossible to define a custom lifter that can be used without import tax.
",no
"re `rcvBufferSize` this is mutable buffer that is not exposed to client (thats why I only pass int instead of Array[Byte] or some sort of buffer. 
essentially it is assumed empty at every read operation. Once read is done I always take num of bytes by Array[Byte].take(read) to essentially do `CopyOnRead`. 

The implementation will NOT block unless that many bytes are available. However I believe there will be at least one byte always read (id depends on NIO 7 implementation( I am not really sure if it calls back when numBytes ready == 0).

At the end of stream, it just takes last chunk. Essentially end of stream shall not differ form `normal` read, as there is no blocking on number of bytes written. 

I think these semantic may differ once we will agree on CopyOnWrite....
",no
"The level WARNING is way too high, things are not broken if this is not set. I would reduce it to INFO or even VERBOSE, since we don't want to risk a minor release to flood people with a new message.

Also a bit too verbose for me. I would just shorten it to ""Failed to set LMDB max reader limit on database '%s', consider restarting CFEngine"".
",no
"Hi Norman,

Of cause I follow your development. I have a script running which checks 
genode.org for changes.

The release notes are like early Christmas presents :)

I would like to go to FOSDEM next year, but I'm not sure if Daniel will 
be able to come with. Are you attending? It would be amazing to meet 
up with you guys again.

Cheers
/u
",yes
"Are you sure the Hi10p workarounds are not needed anymore? E.g. are our hw decoders safe enough to not try to do hw acceleration on hi10p? Especially VAAPI only parse the codec and might try to open hi10p in hw.

How does the ""automatically"" multithreaded decoding for h265 work now? As the swcodec workaround is not implemented anymore?
",no
"When I choose the specific-to-general ordering, I had the routes file (Rails) in mind. More specific rules are at the top and at the bottom there's the catch-all route. I agree however that it felt a little odd to order them that way. Reversing sounds like a good option, I'll make that change and see how that feels. There's some simplification we can do however from the diffs you just posted. Hang on.
",no
"Sounds good

> On Jun 3, 2015, at 5:40 AM, Scott McPherson notifications@github.com wrote:
> 
> Add command option for orbit
> 
> @cmather, I'm getting ready to release a package that I've been
> working on called orbit. I talked to you about it a
> little bit before, but to recap, it exposes Foundation for Apps
> scss files, which will enable developers to easily layout and style
> web apps with ease. The package will also include some helpers to
> handle transitioning between views on mobile/desktop.
> 
> A boiler plate iron app and orbit app are almost identical, so it
> really didn't make sense to add a new command. Instead, I
> just added lines 70-75 to generate the additional sass files and install
> the orbit package.
> 
> I also want to add a few additional generators for orbit.
> 
> What do you think?
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/iron-meteor/iron-cli/commit/2b73ec4a72c6050ff29b13b685f7639ab10009f3
",no
"This is me fixing a problem that was exposed by the change I made in 86acc70a2ee8b6d2458c2fe7a2a8878f3f2eb997. Prior to 86acc70a2ee8b6d2458c2fe7a2a8878f3f2eb997, the `name` argument was not actually being used in `bq_test_init()`.

This brings the bigrquery build state back to where it was before I showed up, where a couple tests fail against dev dbplyr.",no
"Well ... if you feel up for the task. Honestly, way too much stuff is output by the importer right now, and that was by far the quickest path to get it to be silent in typelib-based operations.

IMO all messages that the importer gives are unimportant. Ideally, the importer should be silent unless there are errors.
",no
"@IOBYTE feel free to review this.

what do you think about the `break; // bailout` on line 122 in lib/symboldatabase.cpp ? maybe it should be a continue instead? I plan to change it to a continue after the release and see what happens.",no
"That doesn't exactly work in this case. getSubject is supposed to always return a valid permission subject that can be used whether or not the backing permissions plugin already has data stored for the given subject. hasRegisteredSubject returns true/false based on whether or not the backing plugin has data stored for a given subject.
",no
"This lets us import the plugin classes into another plugin at compile time, so that the functionality of the plugin can be exposed through an OSGI service.

We cannot use the main jar since it's a self-contained one (plugin) with all of the dependencies.",no
"`this.paused` is should be already a boolean, !! changes nothing, i am not sure i like this kind of defensive programming, we should trust the TS type system and the fact that the stencil's runtime should ensure this prop is always a boolean. If that's not the case, it means there is a bug to fix in the stencil runtime (the root of the problem), this change might just silent an existing bug in another part of the stack. 

I have tested, removing `!!` and it still works fine, I don't understand how this commit is fixing the issue.",no
"Very true and i had this in mind. I was just looking for a lesser evil than just closing the shared hibernate session, as a means of stopping these long running tasks. :)
@mseaton do you have any more ideas? Or should we revert this and wait for a smart way of dealing with this?
",no
"I thought that right now the cli is so general (except for that bit) that it should work with all the backends. So I also thought that the cli might know about the loaded backends and then choose the backend to run through a setting or general preferability... something. 
",no
"> I prefer helm's interface to ido when there are hundreds of matches to choose from. TAB offers you various actions to choose from, with SPC you can enter another word to filter by (like C-SPC in ido).

I'm sad to say I don't even use C-SPC in ido, because I use Quicksilver and have never trained myself to switch its default trigger key from C-SPC... I use `C-@` for `set-mark`.

> helm-ls-git is a great helm source that lets you easily jump to another file managed by the git repo without needing a project management suite. It is comparable to Sublime's Command-t feature or apps like PeepOpen.

Sounds good. I'm not very interested in alternatives like projectile. Hmm, I should make an ido version of helm-ls-git...

> Since it is (kinda) on topic, have you considered switching to company-mode? I've always liked it more than auto-complete (I don't know why exactly, it just feels less intrusive) and looks like it has a new maintaner.

I have a local branch in which I try out `company-mode` from time to time. The maintainer is a ninja, which makes me want to use it, and the underlying model is better, but I miss the `auto-complete` documentation pop-ups, and I have some specialised `auto-complete` sources. One day, though, I hope to switch over to it. :-)
",no
"@roji Each EF provider can choose whether to use GetValues or multiple calls to GetFieldValue<T> by configuring a different factory. Currently SQL Server is using the GetValues mechanism, while SQLite is using GetFieldValue<T>--see the differences in SqlServerEntityServicesBuilderExtensions and SqliteEntityServicesBuilderExtensions. The GetFieldValue<T> version is the most likely to work correctly so certainly you should use this for Npgsql. Using GetValues was at one point faster when using SQL Server, although lots of things have changed and so this may not be the case anymore. Also currently GetFieldValue<T> doesn't work for SQL Server on Mono.

Previous to this change it was not possible to use the GetFieldValue<T> mechanism. The original IValueReader implementation worked sometimes, but it could cause query to fail because it didn't buffer results. This change is specifically allow GetFieldValue<T> to be used in a way that is compatible with query, which is required for SQLite and it sounds like also for Npgsql.

With regard to boxing/upboxing. EF currently always creates an object array buffer, and hence always boxes the read value. This may mean that when using GetFieldValue<T> a value is unboxed in the data reader and then boxed again by EF, and hence GetFieldValue<T> may result in more boxing that GetValues--it all depends on how the data reader is implemented. However, we have a bug to potentially change the query buffering such that EF would not box the value coming back from GetFieldValue<T>.
",no
"It looks like there is no user of `TimeServices.ScheduledExecutor latencyStatsScheduledExecutor` inside of `LatencyStats` and a bit like an unfinished feature. `latencyStatsScheduledExecutor` is a static member shared across multiple instances and the very first `LatencyStats` instance that is shut down stops the global instance. This doesn't seem to fit in any known pattern because it could affect other `LatencyStats` instances if they would really use `latencyStatsScheduledExecutor`. Anyway, thanks a lot for looking into the issue and spotting this irregularity.",no
"thanks for your feedback!

shouldn't it be handled by a separate extension? (like, for example, `Facebook Container`: https://addons.mozilla.org/en-US/firefox/addon/facebook-container/)

also please use issues for reporting issues: https://github.com/actionless/pinterest_light/issues",no
"I can't tell what's changed in this commit. A really neat way of exposing the change is to commit the upstream copy of the template first and then make your changes in another commit. Something to consider next time :)

Can you describe the change you've made?
",no
"Just checked (I wanted to know), `Pan2` takes a little less cpu, so your version is the right one I think.

```
// 5 %
{ 50.collect { PanAz.ar(2, DC.ar(1), Line.ar(0, 1, 0.1) * 0.5) }; Silent.ar }.play;

// 3 %
{ 50.collect { Pan2.ar(DC.ar(1), Line.ar(0, 1, 0.1) * 0.5) }; Silent.ar }.play;
```
",no
"It's a huge pain to use (someone will email me, then I have to go track down their public key to reply, which I don't even bother verifying, etc.) plus I only have my private key on one device so when I'm traveling I can't decrypt incoming mail. I wish [SMIMP](http://smimp.org/) existed.",yes
"I would prefer to add a `//TODO` (here or somewhere else in the code) so that we have documented that problem and will solve it in a future release. 
I will add a known issue to the release notes that the kernel space module for i210 must be compiled as CN explicitly being able to use it as CN.
",no
"I wonder if there is some public interface we can add that can report the current values of things like this. In general I think its better if it is possible for tests to test public interfaces rather than digging into private vars. 
",no
"Toni, 

Please see the comment above the line you changed! ;)

I kept the identifier the same so existing .niogit's could be re-used (not a problem to delete it for us, but as a customer/user who's been running 6.0.x for a while it poses a problem changing the identifier).

Cheers,

Mike
",yes
"Why is this method private? Can the method somehow harm or modify data within the object so that access should be restricted for security reasons? In other case I suggest making the method public. Someone else might want to use it (who knows).

Just like with the other similar method there could be one alternate version of this one where you can specify the levelshtein max distance.
",no
"> It makes total sense ! Do you have a place you are posting your roadmap with a timeline for when you hope to put some of these things in?

No timeframe, but just opened an issue that'll block a v1.0.0 release. There's not much else to do for v1, so this'll be a priority when I have some free time.

> My suggestion at the end there was basically a suggestion that you create a buffer for all responses and force ajax pollers to read for the buffer only. You then have a single 'manager' handle the actual receipt of message from the server. follow ?

Okay, gotcha. It's a solid idea - but buffered reads can get hairy when trying to support an unknown-and-constantly-changing number of dynamic clients per user. When client pollers connect, they'd need to indicate somehow how much of the buffer they've already seen. That'd require keeping synchronised state and some kind of global notion of time identity.

It's _possible_, I toyed around with it at some point on the client-reliability end, but the dumb brute force approach that we have now is actually quite reliable in practice (mostly due to being able to use a _lot_ of force cheaply with core.async).

And once the send batching is in, I think reliability will be very solid even under the worst circumstances (Ajax + bad connection + very high throughput pushing).
",no
"I get the Travis-CI notifications when a branch is pushed ;-)

Don't worry about this for now - we are very, very close to release so I need to get the tree in shape now. I've pushed a small fix for the package list. Thank you for your work on `sos` and taking the time to submit pull requests - once `3.4` is released we'll go back to the usual review cycles (and giving you time to update them!).",no
"Basically you can attach release notes to your tags: https://github.com/rails/globalid/releases
##

Kasper

> Den 08/02/2015 kl. 22.06 skrev David Heinemeier Hansson notifications@github.com:
>
> I haven’t checked out that feature. What’s the scoop?
>
> > On Feb 8, 2015, at 11:54 AM, Kasper Timm Hansen notifications@github.com wrote:
> >
> > I thought we were switching to the releases feature on GitHub? @rafaelfranca https://github.com/rafaelfranca @dhh https://github.com/dhh
> > —
> > Reply to this email directly or view it on GitHub https://github.com/rails/globalid/commit/ab5f975fefa62054b3acd4845d77fac60f5bc213#commitcomment-9642473.
>
> —
> Reply to this email directly or view it on GitHub.
",yes
"Is there a reason we can't simply use the existing macros and open the device exclusively?  Is this because it causes udev issues when recreating the devices?  The bdev can be safely opened multiple times from within the kernel itself as long as the same `holder` is used each time.  Failing that you can use a NULL holder in open_bdev_exclusive().

This code is particularly troublesome so if at all possible it would be good to avoid changing it.  For example, this change breaks both of the !HAVE_BLKDEV_GET_BY_PATH cases because the kernel provides no simple open_bdev(), or close_bdev() interface.
",no
"Well, in the previous comment I actually lied. The old code is safe because it first calculates the length as uint64_t (no integer overflow possible) and then compared the length against the actual length of the reply (len > r->length -2). This was exactly to avoid integer overflows.

In your version of the code, the data pointer could overflow and become smaller than the end pointer. In that case we'd crash.

Sorry for being pedantic, but this needs to be fixed.
",no
"That does sound like a handful. :) I'll cut a release later tonight then. Unfortunately, I've been pretty busy myself lately, so I haven't been keeping up either. I can ask around on Clojurians if anybody might be interested in helping out with he project.",no
"@mitya57 I plan on doing a release at the end of the week. I just released 2.3 on Friday, so I wanted to leave at least a week for the few inevitable bug reports to trickle in. Actually, this particular bug has been undiscovered for a few years now, so its not urgent IMO that the fix be released immediately.
",no
"@eugeneo @ofrobots Under what conditions will there be multiple ids? I don't see a way to cause this with node, is it theoretical? I'm in process of exposing this through js layer, so would like to know if the API can be narrowed to expose only the single ID, or if multiple is possible, how to trigger the condition so I can test for it.",no
"Okay, this was really obnoxious, but here's what I did to get this to work without deleting my whole database.  Delete every table that has anything to do with projects.  Run `$ ./manage.py sqlclear projects`.  It'll give you something like this:

```
BEGIN;
ALTER TABLE ""projects_project_members"" DROP CONSTRAINT ""project_id_refs_id_98caaa4f"";
ALTER TABLE ""projects_project_applicants"" DROP CONSTRAINT ""project_id_refs_id_13e44a87"";
ALTER TABLE ""projects_project_mentors"" DROP CONSTRAINT ""project_id_refs_id_dce14211"";
ALTER TABLE ""projects_project_city"" DROP CONSTRAINT ""project_id_refs_id_72c5f7c0"";
ALTER TABLE ""projects_project_cohort"" DROP CONSTRAINT ""project_id_refs_id_e04f53a0"";
DROP TABLE ""projects_project"";
DROP TABLE ""projects_project_members"";
DROP TABLE ""projects_project_applicants"";
DROP TABLE ""projects_project_mentors"";
DROP TABLE ""projects_project_city"";
DROP TABLE ""projects_project_cohort"";
COMMIT;
```

Run `$ ./manage.py dbshell` and paste these commands into it.  If you get some error about sqlite3 not being installed (even though if you open `$ ./manage.py shell` and type `import sqlite3` and it works just fine....), they are referring to the _program_ not the python library.  On Heroku this was really frustrating, but it turns out the problem was that I didn't have postgresql installed locally.

Now the old tables are gone, add the new ones, right? Nope. South has a record of db migrations that no longer exist.  Reset those to zero:

```
$ ./manage.py migrate projects zero --fake
```

The fake is in there so south doesn't actually try to reverse all the migrations, 'cause the tables are deleted.  You might be able to get away with just reverting all migrations to zero and not have to run the sql commands directly, but IDK.  Now you have no projects tables, and south doesn't expect to see any.  Run `$ ./manage.py migrate projects` to create the tables from the new migration file.

Good luck.
",no
"Technically we shouldn't remove the blobs from s3 as someone might want to go back in history and build a release from those src blobs.

Removing them from blobs.yml is correct. They aren't necessary for building packages from HEAD onwards; and now people won't have to sync them down unnecessarily.

On Sat, Feb 8, 2014 at 11:25 PM, David Laing notifications@github.com
wrote:

> @drnic - this commit removes the ""extra"" blobs.
> 1.  Originally I was trying to compile cf-cli from source; but I couldn't figure out how to make the cf-cli build work on a ubuntu 10.04 based stemcell.  This is where these ""extra"" blobs originated
> 2.  I'm very unclear on the process for removing blobs.  Here I have just manually edited `config/blobs.yml`; - I can't figure out how to also remove the actual blobs from S3.
> ## Is there a better way?
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/cloudfoundry-community/jenkins-boshrelease/commit/fb0858a12ce2bc1b53fb5ce902fea7f3a68efa57#commitcomment-5319046
",no
"@mgsloan Btw, why does stack.yaml need to know the source-tree of GHC's boot packages for? What does this enable? In the past there was little reason to release boot packages to Hackage before a GHC release (other than for the benefit of having older GHCs being able to use the new versions)
",no
"@yluhadiya7 commenting on commit isn't a good way to get feedback. The code may have been polished or adapted. If you believe you have found an issue, please create an issue in [the tracker](https://jira.spring.io/browse/SPR) with as much details as possible (a sample would be ideal).",no
"New release is coming soon, there is already a pull request for new data types outstanding, please refer to https://datastax-oss.atlassian.net/browse/PHP-80?jql=project%20%3D%20PHP%20AND%20fixVersion%20%3D%201.2.0 for outstanding issues for 2.3+ support
",no
"We do release a lot of alpha versions though... let's benchmark it

On Thu, Nov 13, 2014 at 1:24 PM, Nicolas Raoul notifications@github.com
wrote:

> I would argue to clean for release, though, never know. It's not like it's
> taking 15 minutes.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/ankidroid/Anki-Android/commit/66654f3528aa1a88f2cbd358a81826d4ff91d6ad#commitcomment-8550663
> .
",yes
"@Techcable I did not looked whether we have to release the direct buffer somewhere, but you can replace the `ByteToMessageDecoder` by adding the class with the change in the bootstrap module. Also its not known whether maybe another method in netty uses a heap buffer somewhere forcefully, thats why I provided the file and tagged all the people having the issue.
",no
"I hit this when updating the demo service to 2.17, which is part of the release tasks when putting out a new LXD release. Since I do that task prior to releasing the final tarball and git tag, I still had time to fix the issue and release afterwards.

I think you should be able to reproduce the problem with:
 - Mount a loop btrfs filesystem on /var/lib/lxd
 - Spawn LXD
 - Run ""lxc storage create test btrfs source=/var/lib/lxd/storage-pools/test/""

The trick is that you need to make sure that /var/lib/lxd is empty at the time you spawn LXD and make sure NOT to restart the daemon before you issue the ""lxc storage create"".",no
"@bozana, yes, I started discussing some changes to branches on the technical committee list after the 3.1.1 release -- I'd like to use a convention such as `pkp-stable-3_1_1` where both applications are sharing code. I decreased the amount of back-porting I did from `master` to the `ojs-stable-3_1_1` and `omp-stable-3_1_1` branches around the time the open reviews code was merged, as we can no longer easily assume that changes are compatible, and it's possible I wasn't consistent. If you need this one back-ported to `omp-stable-3_1_1`, please go ahead.",no
"Is there a way we can make this more modular and extensible? Hard-coding a list of six modules to track is not very pylearn2-ish, and it doesn't serve the needs of our users very well. For example, most people doing research will have their own private research repo implementing part of the experiment, and they'll need to configure this to track their research repo.

I think at the very least we should support an environment variable where you ask it to track some module for every experiment. For example, to track my private research repo galatea and the private repo for the D-Wave project I could say

export PYLEARN2_TRACK_MODULES=galatea:dwave

Or if we wanted to be fancier, each Train object could query its TrainingAlgorithm, Model, and Dataset for their dependencies, so that only the dependencies that are actually used get stored. i.e., if I run something not related to D-Wave in my private repo, the script doesn't need to import the dwave module to store its version.
",no
"id(self) was unique, the new string is shared between all objects that have per model settings. I would be surprised if that did not break things with multiple models that have different per model settings.

At any rate, str(id(self)) would provided a string without the likeliness of breaking stuff.",no
"I would not recommend making your production.dump public because it could contain sensitive data. I put it in `.gitignore` for that reason. Instead, the proper way to [restore your Heroku database](https://github.com/codeforamerica/ohana-api/wiki/How-to-deploy-the-Ohana-API-to-your-Heroku-account#populate-the-heroku-db) is to follow the instructions in our Wiki. Our instructions are based on Heroku's instructions.
",no
"I think the use of `$evalAsync` is more subtle here. Yes, we can ensure that we are in exactly one `$apply` block by checking `$$phase` and so the `$evalAsync` is not needed for that.
What it is trying to do here, is force `blur` to always be async. I.E. If we are already in a `$apply` then it must have been called programmatically so make it async; if it is not already in a `$apply` then it must have been triggered by a user event (such as a click or key press), so it is already async.

It is the same as in this commit https://github.com/angular/angular.js/commit/719c747cd892ee933e7e414a7dc97e657b88317d

Does that make sense?
",no
"but who ensures that RemoteProject is used at all? the if statement looks there were crashes otherwise. Otherwise the entire function would not be needed and the kind could be accessed directly, no?
Can you try browsing with the webui on remote projects as smoke test? sources and build results should work.
",no
"![kraken](https://cloud.githubusercontent.com/assets/21006/7099542/e3ec4c6e-dfc2-11e4-8188-5e416637f961.jpg)

Release The Kraken - https://www.youtube.com/watch?v=gb2zIR2rvRQ

![release-the-kraken](https://cloud.githubusercontent.com/assets/21006/7099281/2228a442-dfbd-11e4-9925-a7c186c34e1f.gif)
",no
"Hmm, looks good in general, however I wonder about the separation of create + download since one must always call create before download, and download after create since there is no other way to access it afterwards. Would it make sense to combine these two operations to one?
",no
"Blocking operations cause a serialization point which in a concurrent context is what Amdahl's law is all about. You need to take this further and consider the coherence cost on that serialisation for true effect. This can be modelled with Universal Scalability Law from Neil Gunther.
",no
"@ederign Help!!! Does this need to be on 0.7.x too? @mbiarnes is trying to build 0.7.x for the 6.2.0.CR2 release _today_ and `uberfire-extensions` fails to compile due to this missing commit (and others?)... your soonest attention is going to help alot....
",no
"It seems silence ends in the sink directly after configure and no data there yet, especially when passthrough is configured, that causes a slight blip noise. So the very moment the ""real transition"" to Play will produce the blip as silence is added while the sink is already configured for passthrough.

Any idea on howto solve that properly?
",no
"@UniversalMediaServer/developers @Optimusprimeums I'm thinking of doing a new release soon so we have PS4 support. Transcoding still isn't working for PS4 but streaming is working and it supports the most popular video formats. Should we make it a beta release?
",no
"I don't see that we expose `responseType`. Oliver made a mistake with initial `DOMParser` and I compounded it back in the day but it's fixed now on this end. :). The commits for the overall history of the exposure were a little vague since it only applies to `text/xml` and `application/xml` media types. Usually one wants to parse a page not a document... but good to know it works for xml.
",no
"I am not following this logic.  The stats you inject are always for last year, which was done intentionally to ensure that stats from now never interfere with the stats you are testing.  You are now creating a range from last year Feb to this year Dec, which means for every date other than Dec 23 onwards, there is still a risk that the current stats for the app will effect the stats you are testing.  Added to which, you are only ever injecting stats for day 3 of Feb, so why are you checking a range up until Dec 22 this year?  This is broken.
",no
"1. We should make sure that default functionality works until we release it. (and afterwards as there will be a way to turn off the bubbles on a form)
2. It does slow down tests
3. I would also need to refactor tests due to how ckeditor initializes/destroys. I did a couple as a POC to make sure it was testable, but I'd rather keep these tests for testing out non widget based logic, and explicitly enable it for those tests that will be using ckeditor later.
",no
"Unaligned LH is an illegal instruction on the RSP anyway.

Though I did have to emulate it regardless.
The real problem isn't (addr & 1), but ((addr & 3) == 3), where you have to cross the 32-bit endianness boundary and cannot possibly write 16 bits at once.

``` c
        case 041: /* LH */
            offset = (s16)(inst);
            addr = (SR[base] + offset) & 0x00000FFF;
            if (addr%0x004 == 0x003)
            {
                SR_B(rt, 2) = DMEM[addr - BES(0x000)];
                addr = (addr + 0x00000001) & 0x00000FFF;
                SR_B(rt, 3) = DMEM[addr + BES(0x000)];
                SR[rt] = (s16)(SR[rt]);
            }
            else
            {
                addr -= HES(0x000)*(addr%0x004 - 1);
                SR[rt] = *(ps16)(DMEM + addr);
            }
            SR[0] = 0x00000000;
            CONTINUE;
```

If the RSP address is odd/unaligned, but not |= 0x003, you can still do a halfword endian swap HES(0x000) (on x86 32-bit, 0 ^ 2 or just 2) and use that as the little endian coefficient for the precise alignment of the address to compute the offset on a non-big-endian CPU.  (And no I don't know what the heck I just said either, so never mind I guess.)
",no
"@Nadahar not sure about @Optimusprimeums but we can do Windows/Linux releases in the meantime if he isn't

If I do a release soon without the crowdin branch, I'm still happy to do another one as soon as Crowdin is finished - that way there is no change in wait time for translations to be released
",no
"This is awesome! 

No need to super gold plate this quite yet, but for next major release we could look at associating with the user api key, that way if you log out from the api key section we would delete the device here and if you delete from logged on devices we would invalidate the user api key.",no
"When suppressing code, please use the preprocessor, #if 0 ... #endif, and include a comment saying why you're suppressing it.  Nesting of #if-ery works, while that of comments does not; and comments are meant for including messages to the human reader of the code; the preprocessor is for selecting what code to compile.
",no
"I don't think `isPassportStrategy` flag should be exposed to application developers. It should be part of implementation details. We can register two different strategies, one implemented in LB4, another one in Passport.

IMO, here is the extension point structure:

- AuthStrategyExtension Point
   - StrategyExtension1
   - StrategyExtension2
   - PassportStrategyAdapter (as an extension point to all passport strategies)
      - PassportStrategy1
      - PassportStrategy2",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 80](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=1767&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Compilation error: Xbim.Geometry.Engine\Xbim.Geometry.Engine.vcxproj (new) Build time: 01:44:23
",no
"Ok, thanks for fixing and merging -- would be good to mention that it's resolved, as I ended up doing some snooping to try to figure out what the status was (since the last thing posted was a request to make a change).

Not sure who added that import -- as I mentioned, that code is totally unrelated to mine. It's possible that it came about during the merge conflict.
",no
"Tests started failing with this commit https://travis-ci.org/grails-plugins/grails-spring-security-core

Burt - Also note that the Travis CI build now automatically publishes snapshots and releases. To do a release just tag the repo in git and push.
",no
"The benefit of the new setting is that a user could have downloaded both crops and full images and still be able to choose between them as desired. Currently if crops are downloaded they have priority over full images and the user needs to delete the crops to go back to setting the full images. Whereas in the new setting, the user just needs to flip the setting to ""as printed"".",no
"Yes, this is a complete clone of the JSON backend.. I guess that most of the functionality shared between them should be pulled out (into a mixin?), however I'm not doing that here for minimum change - I'll follow up with a patch to do that if inclusion of JSONY is considered acceptable.
",no
"I have restored the commits, including the fixes from the both of you. And I have release 1.3.10. And something went wrong during upload so for good measure I released 1.3.11 as well. :-)

Can you both check that this last release (or current master) is correct, and that I did not miss any code that you contributed?
Thanks.
",no
"So in the current release 5.3.0 it would appear that `data-ckeditor-basepath` does not work because this commit here is not in that release. 

It will not work until you do a 5.3.1  Correct ?

At the moment it is required to use   `window.CKEDITOR_BASEPATH = '/static/ckeditor/ckeditor/';`  ?
",no
"Actually, bullet point 2 is also a point supporting bullet point 1.  I'm sure there are other parts of the code where we've made dangerous (or at least sub-optimal) API decisions because the unit tests don't have access to private methods.
",no
"While writing my test, I needed to add a feature to ensure the test was working and it occurred to me that allowing plugins to expose their features good for the ecosystem. However, I now question whether `sass-supports` is the right name for this function. Perhaps `feature-exists`, `feature-present`, or `has-feature` would be better.
",no
"Quite an obscure scenario, but good to think it through - thanks!

I guess it's debatable either way (whether a developer would want their synchronous callback to react to observables it references) but I agree it's probably safer just to block this obscure behavior. Blocking it ensures developers don't get really hard-to-repro race condition bugs whereby _if_ the callback is async because some other code hasn't already loaded the component, then some `ko.computed` finds no dependencies and hence disposes iteself immediately.

Have made this change and added it to specs.
",no
"Git keeps track of all changes happening. You'd better drop those lines permanently, but committing it as a single change. This way you'll be able to run `git revert <commit_hash>` to get these lines back.
Moreover, such commenting in a commit:
1. Sucks
2. Is useless
3. Makes review damn complicated

P.S. Do not mess with several changes in a commit! Bear in mind one single rule: make one commit for one single atomic change. i.e. don't mix up code refactoring with adding/removing feature etc.
",no
"Specifically, the comment implies that `this.isSysop` should never be `true`.

I don't think it would happen, so there's no need to check it and possibly throw. On the other hand, setting it to `false` could prevent another bug from leading to a security issue.
",no
"you should make it private until the day you find a legitimate reason requiring it to be protected. Otherwise, it will make your maintenance work more complex (protected stuff are part of the BC surface area, making changes harder if you want to keep BC)
",no
"I consider reverting these changes for all four comps for now, and do another initial step instead which should not change semantics but clarify what is shared and what is not.

it is practically impossible to see at a glance which data items are exclusive to a funct, and which are shared:

``` c
struct fortran_common { // status now
   var1...varN;   // impossible to see who uses what
}
```

to this setup:

``` c
struct instance_state {
  struct funct1 {
       var1...varN;   // exclusively used by funct1
                            // no special attention needed
  } funct1;
  struct funct2{
       var1...varN;   // exclusively used by funct2
  } funct2;
  struct shared_state {
     varX,varY;   // these need attention for synchronized access
 }
}
```

the functs would not use a pointer to `struct fortran_common`  but rather so:

``` c
funct1 (arg, period)
{
    struct funct1 *f1 =  &((struct instance_state *)arg)->funct1;
    struct shared_state *ss =  &((struct instance_state *)arg)->shared_state;

   // no way to access instance_state.funct2 here
   // reference to per-funct-state is syntactically visible like so:
  ... f1->varX 
   // as is access to shared state:
   .... ss->varN
}
....
```
",no
"These functions are accessed from lua as `xkb_get_layout_group()` etc. So this adds new global functions. I am saying that it would be better to have these as `awesome.xkb_get_layout_group()`, so that no new entries show up in the global env.
",no
":) yeah it was a case of the browser version not being really changed so we
didn't feel the need to force a new release just for a node-centric bug
fix. As you can tell, numbers are hard to manage :)

With the next bug fix or change to Cocktail.js,  we'll have the numbers
back in sync.

I’m good with a version number in the minified version as of now, but what
about those who pull down development versions and minify/mangle
themselves?

It’s no biggie, though. If it’s easier to drop it, drop it. package.json is
at 0.5.9 while the minified script is at 0.5.8, by the way. :)

—
Reply to this email directly or view it on GitHub
https://github.com/onsi/cocktail/commit/cf011a88847dc0588925d02d96d577b828e0f1dc#commitcomment-8750850
.
",no
"I don't have data showing otherwise, but there are nonetheless issues to fix.

In the past year, there were changes in GameObject code and in database with now some NPCs or GOs that are visible in game for everyone while they should not (some were previously in this state, some weren't).

I know that most of these changes were based on sniff data, some of them from MoP by TrinityCore about many hidden GOs. As we are facing cases where invisible objects are visible, there are a few possible reasons:
1. the sniffs are wrong (I don't believe this is the case, but the possibility exists at least in the way they were understood)
2. the way our cores handle these data is wrong (our core are probably not perfect, but as there seem to be no issues in TBC and WotLK, unlike Classic)
3. the sniffs from which the changes were made, are not valid for all cores

I tend to think that the explanation lies in the third point. The fact that since MoP, Blizz sends to client data from invisible GOs that were not sent previously means that changes were made on their side in the way they handles these GOs (and this was not the first time). Moreover, we know there were changes in the models from Classic to TBC (at least to model scale), that many sever-side objects and spells were removed from DBCs and that the visibility/invisibility system was revamp with the introduction of mage invisibilty.

Thus, to fix the various visibility issues in Classic core, I had the following options:
1. modify Classic core and only this one to ensure that invisible objects are truly invisible
2. modify objects template in database to ensure that invisible objects are truly invisible

Whatever case is chosen, this will lead to a difference between Classic DB/core with other ones. I'm uncomfortable with changing the core because this will make porting even harder and we are lacking of reliable data from Classic time to define which changes needs to be made and what data will flag objects as visible/invisible in client. Thus, I decided to fix this in DB by using relevant flags/fields. We already have DB content that evolved from one expansion to another like flags, therefore I think that this approach is the more logical to handle this behaviour difference between the expansion.

I can't say this is 100% Blizzlike. Like many things regarding Classic, we are lacking of data and thus must make some assumptions while avoiding being misled by sniffs from later expansions. In the current situation, I think this is the most probable solution.",no
"What? Why do you need this in the database? These conditions are already checked in core and they have no relationship at all with the database. The event works just fine without the conditions in the database.

```
// Exception for SSC water
            uint32 liquidSpellId = liquid->SpellId == 37025 ? 37284 : liquid->SpellId;

            if (res & (LIQUID_MAP_UNDER_WATER | LIQUID_MAP_IN_WATER))
            {
                if (!HasAura(liquidSpellId))
                {
                    // Handle exception for SSC water
                    if (liquid->SpellId == 37025)
                    {
                        if (InstanceData* pInst = GetInstanceData())
                        {
                            if (pInst->CheckConditionCriteriaMeet(this, INSTANCE_CONDITION_ID_LURKER, NULL, CONDITION_FROM_HARDCODED))
                            {
                                if (pInst->CheckConditionCriteriaMeet(this, INSTANCE_CONDITION_ID_SCALDING_WATER, NULL, CONDITION_FROM_HARDCODED))
                                    CastSpell(this, liquidSpellId, true);
                                else
                                {
                                    SummonCreature(21508, 0, 0, 0, 0, TEMPSUMMON_TIMED_OOC_DESPAWN, 2000);
                                    // Special update timer for the SSC water
                                    m_positionStatusUpdateTimer = 2000;
                                }
                            }
                        }
                    }
                    else
                        CastSpell(this, liquidSpellId, true);
                }
            }
            else
                RemoveAurasDueToSpell(liquidSpellId);
```

I'm not sure about YTDB, but in UDB it works fine. And if it doesn't work in YTDB, it won't work even if you add the conditions.

I would really appreciate if you or someone else will submit a correct spawn for SSC so we can check if the script and DB are in sync rather than add some conditions which won't do any good.
",no
"`$self[key]` does not work because `$self` is a pointer, I rather use the arrow notation (`$self->`) than the start (`*$self`) in this case. Returning a reference is a legitimate technique to expose internal structures ready to be changed, but these referenced objects need to live as long as the container object is alive to guarantee memory consistency. It's very convenient in the `entry` type case since together with the `operator=` set you can have `e[""keyname""] = ""stringvalue""`.
",no
"I don’t need a W3C Recommendation to be published in order to change the HTML checker behavior; instead I just need https://w3c.github.io/aria/aria/aria.html (the Editor’s Draft) to change.

I remains unclear to me why, if the ARIA working group plans to resolve this, the group hasn’t just gone ahead  and done that and made the appropriate change to the sources so the https://w3c.github.io/aria/aria/aria.html spec could get updated and so that I could go ahead and update the HTML checker to conform to that change.",no
"Shall we downport this fix again? 
The previous version did only work for 2k11 auto includes. Remember, we had a discussion about this being a real new feature, which would have better not silently being included to 2.0.1. But we announced it a little in the forum though. I'll wait with the news update, until we have decided on how to proceed here.
",no
"```
PS is only able to create or update data on RWS, but not to delete it. This means that, for example, when a user or a task is removed from CMS it will continue to be shown on RWS. To fix this you will have to intervene manually. The ``cmsRWSHelper`` script is designed to make this operation straightforward. For example, calling :samp:`cmsRWSHelper delete user {username}` will cause the user *username* to be removed from all the RWSs that are specified in :file:`cms.conf`. See ``cmsRWSHelper --help`` and :samp:`cmsRWSHelper {action} --help` for more usage details.

In case using ``cmsRWSHelper`` is impossible (for example because no :file:`cms.conf` is available) there are alternative ways to achieve the same result, presented in decreasing order of difficulty and increasing order of downtime needed.

* You can send a hand-crafted HTTP request to RWS (a ``DELETE`` method on the :samp:`/{entity_type}/{entity_id}` resource, giving credentials by Basic Auth) and it will, all by itself, delete that object and all the ones that depend on it, recursively (that is, when deleting a task or a user it will delete its submissions and, for each of them, its subchanges).

* You can stop RWS, delete only the JSON files of the data you want to remove and start RWS again. In this case you have to *manually* determine the depending objects and delete them as well.

* You can stop RWS, remove *all* its data (either by deleting its data directory or by starting RWS with the ``--drop`` option), start RWS again and restart PS for the contest you're interested in, to have it send the data again.

.. note::

    When you change the username of an user, the name of a task or the name of a contest in CMS and then restart PS, that user, task or contest will be duplicated in RWS and you will need to delete the old copy using this procedure.
```
",no
"This will add additional data to the docker image because you run the `update` and `install` in two separate RUN lines. You could do something like this instead:

    ADD apt-packages.txt /tmp/apt-packages.txt
    RUN apt-get update && apt-get install -y --no-install-recommends build-essential $(<apt-packages.txt) && rm -rf /var/lib/apt/lists/*",no
"> I think adding safety checks for expected/default behavior is unnecessary.

This is also true. For very risky operations that are accessible by the user, it is still helpful to have them (i.e., `anvi-delete-misc-data` will clearly delete misc data, but we ask the user whether they are sure, and it saves lives).

But for programmer calls, I don't think we need confirmation.

2 cents.",no
"This is a very DRY way to write this code, but also very obscure. It took me some time to figure out what happened when there is no expectation. I think this logic would read more nicely if you either separated out the two choices cleanly:

``` rust
let opt_coerce_ty = expected.and_then(|e| e.only_has_type(fcx));
match opt_coerce_ty {
    Some(coerce_ty) => {
        demand::coerce(fcx, arg.span, coerce_ty, &**arg);
        demand::suptype(fcx, arg.span, formal_ty, coerce_ty);
    }
    None => {
        demand::coerce(fcx, arg.span, formal_ty, &**arg);
    }
}
```

or else unified them:

``` rust
let coerce_ty = expected.and_then(|e| e.only_has_type(fcx));
let coerce_ty = coerce_ty.unwrap_or(formal_ty);
demand::coerce(fcx, arg.span, coerce_ty, &**arg);
demand::suptype(fcx, arg.span, formal_ty, coerce_ty);
```

which would be functionally equivalent, but somewhat less efficient in the case where there is no expectation. I suspect this later option will offend your sensibilities. ;)
",no
"> I just installed the latest installer but it doesn't show the log for me.

It will only work with the latest app_process and XposedBridge.jar versions. I haven't created a release build for them yet (and didn't copy them to the assets) because I'm still changing them frequently.

> Unfortunately the disabler zip was missing all of the sudden...

https://github.com/rovo89/XposedInstaller/commit/f66f1bf25f49ca804decd5d4f98147569816ba97
You know that the disabler zip is automatically written to your SD card when you install the framework?
",no
"@tvand I ran `mvn clean install`. I looked briefly at `ThreadPoolUnitTest` and it is racy by making assumptions about the system clock, wake times, reactions. My 8-core macbook may be more prone to exposing these types of flaky tests than your machine.",no
"I like the idea, but do you really want microseconds of uptime?

How about we measure in seconds? Or decimal minutes, like 6.9 minutes? Or perhaps in microseconds, but with a nice display on clusterctl side?

Would be nice to expose into ops dashboard, too. But that's another PR.
",no
"No, it's not finalized yet.  When it is, I'll definitely tag
and update the website.

+++ colinodell [Apr 28 15 15:18 ]:

>   Is this release finalized? If so, would you mind tagging this release
>   and updating spec.commonmark.org? Thanks!
> 
>   —
>   Reply to this email directly or [1]view it on GitHub.
> 
> References
> 1. https://github.com/jgm/CommonMark/commit/a9673c96e8cdf930c7e2635950fce055a39af6a0#commitcomment-10952693
",no
"If it is so (can be only one instance), consider using [Singleton](http://ruby-doc.org/stdlib-2.2.4/libdoc/singleton/rdoc/Singleton.html), or (even better), just expose everything useful as module functions, like just `KernelHandler.load(filename)`
",no
"I chose absolute positioning to match the original discussion. First of all, by monitor relative positioning I assume you mean that `\s` would advance one monitor. The only problem with this is that it makes it impossible to select the last monitor without knowing the number of monitors. This shouldn't be that big of an issue but was also brought up in the previous discussion. I could also add a second command, `\S` (capital), to advance to the last monitor.

Back to your first comment, should it even be possible to address all monitors as one logical screen if Xinerama support is enabled? That is, should I just get rid of `default_screen` and start by drawing on screen 0?
",no
"@teamfball - Would you be willing to hop on chat tonight or tomorrow and be my guinea pig for the update script? I'd like to make a release and then follow up and make sure it's working as intended. That way, you can update the player database without relying on me to make a release. :-)

P.S. It now includes meta data (full names) for just about every player in nflgame!
",no
"Let's wait and see if anybody asks for true readonly. Basically the idea of readonly user is to disallow device editing. Many users requested it because they want to restrict users to certain number of devices. For example, when they run a paid tracking hosting, they don't want to allow user to add new devices or edit device id.
",no
"In this case (and all of the cases we currently have implemented) we are letting the parent class take care of the SharedSampleBundleGroup for us (i.e. the Shared and the Group parts) and it is passing us the just a reference to the (first) SampleBundle itself.
",no
"I'll write a ticket for it.

What should be done is the following.. when a actor fails that accessed by a direct router.. it will be reconstructed somewhere else because de events are stored and can be replayed (TransactionLog). 

Currently afaik there is no functionality for a failover of such an actor.
",no
"@sraue without applying a keymap via loadkmap (bkeymaps) voldown reports f14, mute reports f13.
I assume once eventlircd fires in, no keymap can be loaded. the remote works ootb as a regular hid device. why make it more complicated that it should be?
saying it for last time: drop this. keep amremote. keep the powerbutton fix in evenrlircd (key_input), and dont touch aml_keypad (you have amremote for this). done.
",no
"Hi :),

Oh, I think you’re right about the fact that Shopify always returns in gram, so definitely it would be useful to convert them between units. I’ll try to see if I can do that (I’m really lost with this CoffeeScript this, why did you choose that? :D)
",no
"Ah, I totally misread!  Sorry about that!  Will add it back, then will open an issue to move the PID logic into the `cronserver` code--that way, it can be shared across linux and windows, which are doing very different things right now.

Thanks for catching!
",no
"From http://flask.pocoo.org/docs/0.10/api/#flask.Request.get_json :

`By default this function will only load the json data if the mimetype is application/json but this can be overriden by the force parameter.`

I guess that means that if another mimetype is sent, it will be `None`?
I can pass `force=True`, however. But it doesn't seem very clean (will accept valid JSON sent with another MIME type).
",no
"With the current state of this PR, we always re-create the FTQ, also if ""only"" the paging params change. I think we need to re-create the FTQ as it is not safe to be shared across threads (there is one instance of `FullTextSearchQueryTranslator` per HQL query).

But we could cache the actual Lucene queries, so we'd have to only parse them once for a given set of parameter values.
",no
"on linux you can get random values from /dev/random and /dev/urandom. One of those devices will block until it gathers enought environment data to ensure its random enought and the other will put the data in the pipe although it might be that there was not enought data for a certain degree of randomness. On windows its probably your fault if you want a random number. Another possibility is to declare a variable and get the adress of it. This is usually very random and platform independent. But it needs a comment so people dont remove his unneeded variable.
",no
"No, that's wrong I'm pretty sure. Because we do need to load anonymous object types for the metamodel. How did you come across a situation that required this fix? If you give me a test case I can investigate, but please report this in a new issue with steps to reproduce.
",no
"(not sure why I didn't get a notification for your comment sorry for the delay!)

The main reason is I didn't want to have this intermediate state where you haven't given Muzei permission so it can't show you random camera photos, but you haven't selected any photos from any sources. Basically the extension would be selected but it wouldn't have any photos it could actually show..
",no
"Nice long commit message :)

> more than one bank can have the same blz

Did you mean to say that one bank can have more than one BLZ? Or can one BLZ in fact be shared by multiple banks?

I'm asking because banktools-de (since before your reverted changes) has a BLZ-to-bank-name lookup that currently returns a single bank name. If that's an incorrect assumption, could you add an issue to banktools-de?
",no
"Yeah, the release process broke somehow. I'm not maintaining this though so it's unlikely to get fixed. Even if I were actively maintaining this library, I would tell you to try to stop using bower if you can and just use npm instead.

Good luck.",no
"if any of these locations track stock we may also want to delete the corresponding supply point cases. though I think that if we're running this command on a domain it's likely because that domain is full of garbage, so probably not necessary to prioritize.
",no
"Problem with net.SplitHostPort is that it returns an error if the string doesn't have a ':', which is likely the case as we leave it to the http package to choose the default port.  But I can change this another way to support IPv6 addresses.
",no
"@suhailshergill Yes, `sbt-release` prompts for release version and next version, it then has steps that updates and commits `version.sbt` both before tagging and after to return to SNAPSHOT version or whatever ""next version"" is. Since we are using git-based version management in SBT we don't need those.

I might consider contributing something that facilitates this workflow to sbt-release.
",no
"> Lodash has something similar to this one, but this patch 2-3 times faster than lodash stable release in most browsers. There are tests demonstrating that.

I believe you were testing against `master` which is not stable, but yes reducing checks to a more bare bones state will improve things. However there's no real gain in being 2-3 times faster than something that's already millions of operations a second.

> This patch doesn't has these bugs. It's completely different patch to that one you've commented. Unit tests passed. _.isEqual( /a/, /a/ ) === true.

Test it in [older Safari environments](https://github.com/jashkenas/underscore/blob/4e2d94d63ae8074da234af2258c1fae5106996ae/underscore.js#L1249-L1255) . You'll hit the case where `typeof /a/` returns `'function'` which will hit your `if (typeof a != 'object' && typeof b != 'object')` condition and cause `_.isEqual(/a/,/a/)` to return `false`.
",no
"Yes if you're using the same version of the file. I think the most
pragmatic thing is to just live with it till a new release of hashie is
available.

On Tuesday, February 19, 2013, DiCli wrote:

> I'm new to rails and have never experienced an issue like this. I believe
> that what the above information is say is that I can just remove lines
> 80-83 from mash.rb and lines 100-108 from mash_spec.rb and I will no longer
> get the warning and it will not cause any other issues, correct?
> 
> Thanks in advance.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/matschaffer/hashie/commit/58972fc22ef0040d2ad7a0c1b7f2361e02d5a746#commitcomment-2652381.
## 

-Mat

about.me/matschaffer
",yes
"Really nice, I will adopt it, definitively!
I plan to do a minor release just before the end of the year (base on google code, with only bug fixes) and then hopefully end of january the 'next' branch will be ready for a major release!
",no
"> Should I file a PR in imagej-common then, which will be merged first, then you release 

yes please!

> Does imagej-common allow code-generation? I will maybe make use of this ops-feature.

@ctrueden would know; it looks like ""not right now,"" but if we can generalize the auto-generation and move it upstream that seems like a win to me.
",no
"This change was intended to prevent Coverity issue, because it considers <code>StreamListener</code> as closable.

During the fix I noticed that <code>IOException</code>s in <code>new StreamTaskListener(getLogFile())</code>are being suppressed by <code>catch (Throwable e)</code>. IMHO, such situation requires an additional analysis, because the task is not being started.
",no
"```
Do you want to start the release process? Push all your changes to the remote branch first. All local changes and commits will be removed. [y/N] y
Please enter the branch name to release [upstream/master] dev/kasper-release
'C:\Program' is not recognized as an internal or external command, operable program or batch file.

------------------------------
[ERROR] `C:\Program Files (x86)\Git\cmd\git.exe fetch dev` - failed!
------------------------------

Press any key to exit...
```

So apparently this doesn't work

``` bat
IF NOT DEFINED GIT (
  CALL :SubMsg ""ERROR"" ""GIT wasn't found""
  EXIT /B
)
```
",no
"I'll be able to make more comments tonight when I'm at a keyboard, but I definitely lean toward the block version now that you raise those concerns. From a user-experience point of view, it would be very strange indeed to ask for `makeglossaries` and get a complaint that `makeglossaries-lite.lua` is not available. 

Perhaps the cleanest solution is another Java 'primitive' that takes a variadic array of programs (`String... programs`) and tries each one in succession, returning the first program on the path. That way a message could say 'None of ... were found on your PATH. Are you sure you have this tool installed?`.

It would be even better to have a version (or same-name generalization) of `makeCommand` that does this. 
",no
"> Does Primus only expose Node.js Buffer?

Historically we have always used Node.js `Buffer` so I'm not changing this behavior.

> You also need to copy the buffer if you expect the user to hold on to it past the callback.

Does this mean that `uws` frees the `ArrayBuffer` memory once the callback is invoked?
",no
"I just meant it as “[name] wanted to look into this soon”. I mentioned this below too:

> Paul: Flat bundles, modernizing our build process, **thinking about the new release process.**

and in [the previous notes](https://github.com/reactjs/core-notes/blob/master/2016-04/april-7.md):

> - Let’s decide on a test runner and write some tests.
>   - Let’s pick a recent regression and try to write a test for it.
>   - **Jim will work on this.**

Should have been more clear, thanks for the feedback!
",no
"Looking at the code, I misunderstood.  The HTTP codec retains any reference counted objects it passes through, so we need to release them.  This means, any messages in our buffer that we drop, we need to release if they are reference counted.
",no
"Probably better to do the function call in the top scope, for optimal perf. Possible now since it's not using the global flag.

Feel free to do a release afterwards. Just assume that if I add you to a repo I also add you to the npm package ;)
",no
"Yes, this milestone will likely become Release 62. We have Release 60 in test now and Release 61 is almost done.

This release will include currency conversions to a base currency using Open Exchange Rates (hence the `_base` fields).
",no
"this looks like the delegate system has changed recently, probably to use std::function but void event has never been updated to track those changes. i haven't used poco in a while and don't really have time to solve this, perhaps open an issue i think this commit is the problem: https://github.com/pocoproject/poco/commit/d5d048e68991c977a92af38e29d49c137a6ea1ed  it's probably just a matter of doing the same changes they did in other delegates to that specific version
",no
"@axtimwalde This is a very good reason to switch to release bindings. This will avoid being impacted by upstream changes, whereas pinning to a `SNAPSHOT` is inviting such problems. We are working through all of Fiji to switch over to release couplings instead to avoid future problems. Once there is a `2.0.0` release of `pom-fiji` I would highly advise changing `mpicbg` over to use it instead of the `SNAPSHOT` version. Ultimately, it cannot be @dscho's or my responsibility to submit PRs for downstream code.
",no
Prior to 8afe2cbda658410e07947c784da5bd377bb6337d this would just silently log null and move on with life. I don't have any idea what this debug message was trying to debug. It was added back in 6cdb61c05985b51a1346014f0864b768a402873b,no
"Had a discussion about it with Stephane, says it isn't necessary after further reflection.  To be 110% sure would need to read the implementations myself, no comments on the high level methods in rxjava wrt to the thread safety of the method.  
",yes
"> When can we expect the next release?

The release will be made when MEI 4.0 will be out, which will happen in the next months.

> Hmm. What are the replacement options for controlling the width and height of the image? Must be `--page-height` and `--page-width`

Yes, this is it.

> It would be nice for -h to be a short option alias for --page-height and -w for --page-width.

We will not have short option for all of them, so I left only the ones that are passed to the Toolkit class.",no
"This is great!
it's works perfect so far.

http://pastebin.com/0F9XMYwg

to activate:
echo lz4 > /sys/block/zram0/comp_algorithm
echo 512M > /sys/block/zram0/disksize
mkswap /dev/block/zram0
swapon /dev/block/zram0

much more can be loaded to RAM. and cpu is not used at all. idle is the same.

Zram now using 63.25MB REAL RAM
and output: 162.34MB

it's 258% more RAM :)

and Vswap is 200MB now. when it's will reach 512MB i will get more than 1GB RAM to use :) :+1: 
",no
"@kraileth
I'm working on the gstreamer plugin mechanism.  I'm going to simplify it from what FreeBSD does.  I'm just pointing out that I converted the gstreamer1 version to something that can be shared beween ports and also to let you know in case you were working on the same.",no
"Pretty much :(

It's sad because C++ destructors are IMO the most useful feature of the language, and you basically can't safely use them in the presence of functions in the R API that might longjmp, unless you catch / suppress those errors through other means.

There are some R APIs, e.g. `R_ToplevelExec` or `R_tryEval` which ensure that longjmps don't occur, but these tend to break other condition handlers (e.g. warnings, messages, ...)
",no
"you are correct. it should be hosted there, or not be included in the
build deps.

if we choose to do the latter, we need to include the headers in the
tree, so support can be compiled in, and users who wish to have CEC
adapter support have to download the lib first.

On Fri, 2011-10-14 at 03:48 -0700, Sascha Montellese wrote:

> May I ask why the libcec zip file is not stored on xbmc's server like all the other win32 dependencies? IIRC the dependencies stored on xbmc's server are mirrored by a whole bunch of other servers so that would make it always available and reduce the load compared to if everyone downloads it from the same server.
",yes
"Review done. Overall, is looking very nice. I think that this is ready to go into the codebase(and the above issues can addressed either before or after this). I'm going to post this code to the community to ensure nobody has issues before bringing it in, though.
",no
"Seems ok... consider that the MTB data on Can robots and ETH robots are (currently) published in two different ways, so perhaps it can be considered two different types.. or perhaps not, depending how you implement the parameter processing.
",no
"On second look:  only `getSpaceCommand` was exported from Shared, and I only see a use for that in the writer.  The reader includes this table in its `symbols` lookup table.  Of course, we could export the table from Shared and factor it out from `symbols`, but I don't see a use for `getSpaceCommand` in the reader.  What did you have in mind?
",no
"> How far up the chain should this go? I could just make the seal and open functions use [u8] as well

The main goal of converting the code to Rust is to use as many of the Rust safety features as possible, and avoid `unsafe` and less-safe constructs like casting as much as possible. The reason that `ctx` is `[u64]` now is so that the compiler will align it at 4/8 byte alignment which seems to be needed by the AES-GCM code. But, that's the only reason. So, IMO, it would be a good idea to convert to `&[u8]` even in aead.rs in `open_or_seal` or somewhere around there.
",no
"In the release cycle all templates are imported. That means only when a new release is made and then only on fresh installs.

However, there is the [foreman_templates plugin](https://github.com/theforeman/foreman_templates) you can use to import all templates.
",no
"Ok, super. 18.7.4 is a nice and quiet spot to land this.  Thanks for your work!

> On 22. Sep 2018, at 16:51, Fabian Franz BSc <notifications@github.com> wrote:
> 
> @fichtner looks like it is everything.
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub, or mute the thread.
",yes
"I don't have a very clear suggestion here, but I feel the user may get confused with the order of precedence here. What I mean is:

```
$ avocado --log none,app run /bin/true
```

Gives completely silent output, while

```
$ avocado --log none,all run /bin/true
```

Gives complete verbose output. It may just be a matter of documenting that behavior though.
",no
"Thinking about the results object, if it exposed methods for things the service wanted its context to know about then it could be used directly in the view, in the way Sandi Metz talks about only having one instance var used in views. It could be wrapped in a presenter to provide any web specific stuff.

I'm thinking about services (or more likely query objects) which fetch entities.

``` ruby
@result = FindOrganisations.execute(form)

if @result.successful?
  # redirect
else
  # render
end
```

``` haml
%p You requested
= @result.form
%p We found
= @result.organisations
```
",no
">  I'd prefer to leave release cherry-picks to Quintus, though.

This is so simple a change that I don’t mind if anyone of you cherry-picks it to `release-2.0.0`. However, if you do cherry-pick, please use the `-x` option so there’s a marker in the commit message that actually says the commit has been cherry-picked.

> To clarify my primary worry is the translation subsystem.

Static strings in XML files never make it to the translation system usually, with very few exceptions such as the colour names. This is bad, but that’s how it stands currently.

Also. I remember someone of you saying that this space before the final punctuation of a sentence was a German habit. I highly object that! (note missing space). This is invalid syntax in German also.

Vale,
Quintus
",yes
"> I believe that running 'make install' is not needed for running any tests, is it ? Thus the configure --prefix isn't required either.
> 'make distcheck' already checks that
> 
> make dist (can create release tarball), and with the content of the tarball we can
> 'make' and 'make install', whist --prefix and DESTDIR are honoured (latter is used by distributions package to things)
> 'make check' works
> and a few others

True. I'll remove it. But ./configure is required, as autogen.sh does not run it.
",no
"The lock is simply there to serialize access from the same process, thus reducing the risk of collisions. Collisions can still occur though, and there is no simple way to avoid that when multiple process are accessing the same file.

The best way to handle that with the JSON file-based subscription storage would simply be to retry whatever it tried to do when it catches an `IOException`.
",no
"I'm not entirely sure what error it would throw, if any. This check isn't necessary for the module to work, it's more of an opt-in tp have color. So for systems that would cause this to throw, we just silently ignore it and disable color.",no
"I could stage the artifacts into https://oss.sonatype.org/content/repositories/central_bundles-2057 but cannot release them to Central.
I think we'd need to find someone at Google that could do it. @cgruber? @dankurka?
All he'd have to do is log into oss.sonatype.org, go to “Staging Repositories”, locate the `central_bundles-2057` repository (verify that it's been created by `t.broyer` and contains `com.google.template:soy`) and release it: http://central.sonatype.org/pages/releasing-the-deployment.html

Note: I built the JARs locally (had to fix the `build.xml` as the custom Ant task was moved from package `shared` to `jssrc`) using OpenJDK 7 on Ubuntu 14.04, packaged the `java-complete` in a JAR, then signed everything with my GPG key and bundled them in a JAR uploaded to oss.sonatype.org. For the POM, I picked the one form the previous release and updated the versions; args4j 2.0.17 not being available in Central, I picked up the next available version: 2.0.23.
",no
"I set it to -1, and then within cracker, I only work with things > 0  I did not use 0, and instead chose something 'invalid' on purpurse, since it is a value we do NOT know.  I thought about setting the  resume_salt boolean to 0 here, but instead chose to keep the knowledge that there was a salt resume, and then within cracker, choose to ignore it upon seeing it was a v1 resume. I also though about adding another field to the structure (salt_resume_version), but desided it was not needed, since the only way the resume-salt_crypts_per could every be -1 is if things were reloaded from a v1 record.",no
"this fails when the two calls to timeout.TimeLeft() return different values, and the second one returns 0. that's why it's only read once in CCondition::Wait().

because of how picky this stuff is, I don't like CConditionImpl::Wait() being exposed directly. misusing that method can lead to locks that are hard to trace.

a better option would be to either use the existing CCondition::Wait() method, and use a bool predicate (e.g. flip a bool to true when m_state is set to whatever you're waiting for in SetState()), or to add a new method to CCondition that takes a function pointer and void\* argument as parameters, and make the new Wait() method call that function to check the predicate.
",no
"@matthewrudy That adds more complexity for what is really in incredibly rare event.

I'm actually too busy to do much work on Faye at the moment, especially not to put a release out. As soon as I do have time, I will catch up on issues and get a release done.
",no
"The form setting 'exclude' here is the list of database fields that the form should not create. However, the point here is that the database should not contain these any more, so there is no need to set them to be excluded since they don't exist.
",no
"Is it safe to call this if `on_worker_acquired()` hasn't been called yet?
That would be the case if the first line in the try block (`acquired()`) throws an assertion.

If it never throws, it should probably be moved out of the try block.

Generally it might be better to make the ""acquisition"" of a worker count a RAII type.
Something like

```
class worker_acq_t {
public:
    worker_acq_t(extrproc_pool_t *_pool) : pool(_pool) {
        pool->on_worker_acquired();
    }
    ~worker_acq_t() {
        pool->on_worker_released();
    }
private:
    extproc_pool_t *pool;
    DISABLE_COPYING(worker_acq_t);
};
```

You can then have a `scoped_ptr_t<worker_acq_t> worker_acq;` field in extproc_job_t. It would automatically be destroyed when the extproc_job_t is destroyed. The try-catch block above would look like this:

```
try {
    ....->acquired();
    worker_acq->init(new worker_acq_t(pool));
    worker_lock.....
} catch (...) {
    user_error = ...
    worker_lock...
    worker_acq.reset();
}
```
",no
"Indeed you are right, I was just considering the current implementation...where everything passes by `require()` and `alreadyRequiredNamespaces` is not exposed (or I am reading the code in a wrong way) . But if you are planning something like you said, indeed you need a `ConcurrentHashMap`...
",no
"Fair enough, let's stick with what you committed. However, when I run `add_cflags()` against my compiler (gcc) this code raises an exception instead of silently failing to add the flag to `$CFLAGS`.

And if I wrap the `try_compile` call in a begin/rescue block, it looks like the flag is still added to `$CFLAGS` so subsequent compiles fail. Is there some mkmf magic going on that I just haven't discovered yet?
",no
"No objections whatsoever

> On May 23, 2018, at 3:58 PM, Veeck <notifications@github.com> wrote:
>
> hi @patrickkettner this release isnt tagged in the master branch, so for the sake of consistency I would like to rebase the current master unto this tags commit. Any objections?
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.
",no
"By the way, do we need to call loadLastIndex() in ApplySnapshot()? I think we should refactor what's done in NewRange() and ApplySnapshot() so there's shared code. I've already noticed two instances where the right thing is done at startup but not when the snapshot is applied.
",no
"The icons were @bwRavencl Me and Adobe Illustrator have disagreements on vertex placement.

As far as the controller goes, I think we could add a spinner (Controller, Mic, Webcam, Keyboard) and if they don't choose controller, set all the config stuff for that port to disabled. I see someone setting a Mic as 1 and then doing their Moga, too lol.
",no
"Is there a way to get an alias for phpcbf as well? Both those phars are attached to the same release in Github and I'm not sure how it is picking one over the other. If required, I could provide alternate URLs for the downloads (I have `https://squizlabs.github.io/PHP_CodeSniffer/*.phar` as well) to make it work.",no
"Yeah, we can add a blocking endpoint for that.

My idea of calling stop even for STOPPING and ABORTING is that you'd then get a background operation for the stop operation and can track that as you usually would, but I guess calling a blocking call in those cases isn't too bad since those only typically last a few ms anyway.
",no
"I'm going to move this conversation over to google group but it's being rather slow tonight.  I guess bumping this to parent 26 snapshot would have done the trick as well.  Anyway, figured we are doing this too many times as well.  We are running this on all 4 java builds so 4 times each go.  So i've corrected that.  I've also added version eyes and trying to get coveralls working now.  Should look rather nice when all done.  Probably will add in the site generation as well.  Anyway...once I can get google groups responding a little better I'll move this convo over there.  Thanks for helping out!
",no
"@bspitzbart - generally speaking I just delete unused lines of code instead of commenting them out.  The old code is always there for reference in your git repo.  Things get nicer with release tags (which you can create easily on github).  Then you can do something like ""git diff v0.1.1"" and see all the bits that got removed in the mean time.
",no
"@yacn @fnichol even using the latest release of chef-user, ChefSpec can't seem to find these methods:

```
  1) foobook::default ruby block creates foouser user
     Failure/Error: expect(chef_run).to create_user_account('foouser')
     NoMethodError:
       undefined method `create_user_account' for 
```

Is there a trick to being able to use them? From everything I've read, they should just automagically work if my cookbook has a dependency on this cookbook.
",no
"This is actually what CPython does internally itself, and I lean towards thinking that it's the right thing to do because new signature flags (or flag mixes) will no longer be silently discarded as previously. There is no guarantee that things will never break this way, but since the latest addition already broke the old code, there is at least a proof that we're not making it worse. :)
",no
"There is a test program on https://community.amd.com/thread/194895 (first post)
If the issue can be confirmed with it. Someone need to open a bug report to intel.
I don't know the release process of AMD but I'm afraid that you need to wait next major release. Hot fix and beta are only hack for AAA game marketing.
",no
" @philmmanjaro 

Yes, but either way, we need to make a clear announcement where team has to push and new structure goes in line with devel or iso branch of manjaro-tools. 
We need 0.915 release with new structure, or do 0.9.15 with old structure, and 0.9.16 transition. Your call, I think buildiso works fine even in iso branch. build process is good, and the changes shouldn't affect a running iso.
",no
"I'm not sure it's feasible to offer that ""promise"" that test ecosystem data will be immutable - take MetaDEx for example, we allow testing on test ecosystem properties which then for example reveals a bug in the math, which we subsequently fix.  This could happen multiple times over the course of testing.  To provide immutable test ecosystem data we would have to maintain every iteration of the code and subsequent fixes.

I think it's a fair ""promise"" to say data is immutable in the main ecosystem only.  I take this view primarily because we say that test ecosystem is just that, for testing, and tokens there carry no value.  Thus if we ""change history"" as it were, no users are at risk of financial loss, the worst we do is invalidate some existing testing.
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 26](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=855&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 2 (2 new), passed: 66 Build time: 00:14:25
### Failed tests

```
VSTest: GeometryTests.IfcExtrudedAreaSolidTests.IfcExtrudedArea_With_IfcArbritraryClosedProfileDef_And_IfcCompositeCurve: <no details avaliable>

VSTest: GeometryTests.IfcSweptSolidTests.IfcSurfaceCurveSweptAreaSolid: <no details avaliable>

```
",no
"If you want to use AtomicBoolean in this way, you can use if(closed.compareAndSet(false, true)) to ensure only a single thread gets through. You may also be able to remove the synchronized check unless you want other threads to block while the close procedure occurs.",no
"I'm somewhat surprised that removing `noLineNumbers` fixes the problem with source maps.

The comment you're referring to pertains to an `else if (noLineNumbers)` block after an initial `if (self.sourceMap)` block, followed by an `else` block where we generate an identity source map if no `self.sourceMap` was available. So, in this clause, there was no source map to begin with, and the source map we're not bothering to generate is just the one that would have helped us with the line numbering, not a source map that reflects any interesting relationship between the source and the output.

Now, I can imagine that this identity source map might be useful for stack traces, so I'd be willing to generate it regardless of whether line numbers are requested. I'm just concerned that generating the identity source map may be expensive in the same way that line numbering is expensive, if not more so…
",no
"We did it for the `xkb-cursor` one when almost no distribution had it and in a minor release (v3.5.2) ;) so I we've been there and did it anyway, so I guess we can let the distributor do their job again. Too bad for that poor Oracle Solaris developer who will have to comment even more code. AFAIK he is the only one forced to use a 10 years old fork of X.org.
",no
"@GaryJones Since this change was part of a PR for analytics (#714), I'm guessing the reason to hide was to prevent analytics from being supplied on WordPress.com. So it seems that this needs to be removed in favor of WordPress.com specifically removing the menu for analytics. /cc @mjangda ",no
"Review by @gzm0 for fast-forward on 0.6.x.

Since it's unclear what to do with https://github.com/scala-js/scala-js/pull/2969 at this point, I suggest we release a version now. It contains several important things, most importantly https://github.com/scala-js/scala-js/issues/2797 and https://github.com/scala-js/scala-js/issues/2943.",no
"We should do that when we release the new version of the sublime plugin.

On Tue, Apr 12, 2016, 12:21 AM Henric Trotzig notifications@github.com
wrote:

> Can you follow up with a PR to package control to change the repo url?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly or view it on GitHub
> https://github.com/trotzig/import-js/commit/45e4b745b85b15d1425365056ed3472bbb900260#commitcomment-17062214
",yes
"Hrm, I'll add some test cases as another commit and track it down.  I think
whatever behavior we choose is probably breaking some assumption, so I'll
make sure to test against 1.1 and see what we did there just in case.

On Sat, Jan 2, 2016 at 7:29 PM, Chao Xu notifications@github.com wrote:

> The value here is the value serialized to the wire when you map a
> conversion
> 
> FYI, I did some experiment on Status, the apiVersion on the wire is
> determined by typeToGVK, not the unversionedTypes. If you grep the code,
> we never use the groupVersion recorded in unversionedTypes.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/smarterclayton/kubernetes/commit/67bb9031ab16b2220dd5ba08e07abc7f8836d43a#commitcomment-15231783
> .
",no
"I make the RC a few months ahead of the release, it needs to go on a branch.



On Fri, 19 Oct 2018, 18:03 avih, <notifications@github.com> wrote:

> Also, I think a release tag on the main branch is generally nice to have,
> where possible. So maybe instead of tagging a release not on the main
> branch (which I believe is the current tmux practice), I think a useful
> release practice would be to (e.g. after 2.8 and towards 2.9):
>
>    - Version it e.g. 2.9-pre
>    - Once a release is ready, change it to 2.9 and tag it. Future minor
>    version updates to 2.9 would be on branched from this tag.
>    - Change the version to 2.10-pre and continue development.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/tmux/tmux/commit/c234032fcf94ebc6d1926922bfadccd544ed4f9c#commitcomment-30974532>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AASkc4mVPS8tM9g8Om_cMBobrxTXpoSnks5umgXYgaJpZM4XxCG6>
> .
>
",no
"@Alys a try catch block is only going to report js error which I have to say I'm not so sure it's happening in this case because if an error was thrown then the user shouldn't be saved so it doesn't explain why someone gets only a few dailies un-checked
",no
"You give them that chance now. I choose `lastPingSeq` as 123 and send you ""PING 123""; you reply ""PONG 0"" and I reset your `lastPingSeq_`. I choose `lastPingSeq` as 768 and send you ""PING 768""; you reply ""PONG 0"" and I reset your `lastPingSeq_`. I choose `lastPingSeq` as 923 and send you ""PING 923""; you reply ""PONG 0"" and I reset your `lastPingSeq_`. You'll never hit the `no_ping` check.

If the security cookie doesn't match, the PONG should be ignored, which will cause a PTO. Right now, a server can hard-core a PONG reply every 30 seconds and never PTO.
",no
"Hi Assefa

Yeah sorry for the confusion - the IRC conversation was a follow up
conversation to a skype chat between me and @mbernasocchi . In the follow
up conversation Marco was suggesting using the categorical processor may
not work so well to start because using it would require definition of two
fields in the attribute table and we have only facility to indicate one.
For that reason we will probably continue with the building type (and soon
road type) processors and lump all unknown types into 'other'. Post 2.0 we
will revisit this again with an implementation that will collect all unique
values for the type field and then use them as the classes for each
aggregation unit.

Feel free to ask further questions if the above does not make sense.

Regards

Tim

On Wed, Feb 12, 2014 at 1:48 AM, Yewondwossen Assefa <
notifications@github.com> wrote:

> Ah, just saw aggregation_categorical_postprocessor.py when doing a pull. I
> understand that It will use classes definitions.
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/assefay/inasafe-doc/commit/0f2aa8df4d93c392aec145f04b6d50a9eeb1122a#commitcomment-5343125
> .
## 
## Tim Sutton

Visit http://linfiniti.com to find out about:
- QGIS programming services
- GeoDjango web development
- QGIS Training
- FOSS Consulting Services
  Skype: timlinux Irc: timlinux on #qgis at freenode.net
  Tim is a member of the QGIS Project Steering Committee
  -------------------------------------------------------------------------------------------
",yes
"I see. Well I'd prefer the ""None"" by default, because I guess this might change in the future and it might not be easy to maintain old and new variants. Anyway guess you already considered this and chose this way instead and I'm not completely against it. Let's hope we'll remember how it works when we need to test it in a different setting.
",no
"Fine for me. As for https://github.com/Underground78/mpc-hc/commit/8dc8a75bdb8956b80fa8673759a94dbde680c81e I would include it in stable. Should be safe and it actually fix annoying bug (if you pay attention to track selection). But let others decide.
",no
Today in this adapter all the lines in that module will be deleted (and removed) for the next major Rails release.  So in that sense these small differences will not need to be tracked past 5.0.  With that said I can do what you say and isolate the constant qualification changes to the top of this module so we have virtually nothing different.  So it is a good idea!,no
"It's hard to choose a threshold to compare with `fabs(lastError - lastSO3Error)`, it depends on the contents of the images and their size.  On the other hand, `fabs(lastCount - lastSO3Count) < 0.001` is effectively saying `lastCount == lastSO3Count`, which means that the number of overlapping pixels between unwarped and warped images did not change. Which effectively means that the last rotation increment did not result in any change in image space.
",no
"(Scott Daniel) Bugfix/CATSIM-188 arcseconds
Some of the classes in baseCatalogModels/GalaxyModels.py incorrectly converted from arcseconds to radians when reading data from the database.  This pull request fixes that bug.  It also modifies the classes in exampleCatalogDefinitions/ to correctly convert back to arcseconds when writing to catalogs.

I also noticed that the class ExampleGalaxyObj in GalaxyModels.py pointed to a table that no longer exists on fatboy, so I deleted it.
- removed ExampleGalaxObj class from GalaxyModels.py.  The table that it
  pointed to does not exist on fatboy
- modified GalaxyModels.py to correctly convert arcseconds to radians when
  reading from the database
- cleaned up whitespace
- updated phoSimCatalogExamples.py to reflect new arcseconds-vs-radians API
- cleaned up whitespace
- cleaned up whitespace
- cleaned up whitespace
- updated refCatalogExamples.py to reflect new arcseconds-vs-radians API
- fixed bad import statement
",yes
"`readFromCurrentState` is the gem of database pools. It grants a reader the guarantee to see the last committed change, and yet unlocks the writer queue. It is another tool that helps avoiding blocking the main thread when it wants to access the db. It has been written for FetchedRecordsController first, and RxGRDB uses it as well.",no
"BTW which OS are you using?
From our conversations I assume you don't use Git yet?
I can only encourage you to give it a try. Once you get used to be able to retrace your steps you won't want to miss it anymore. And as  you are already using LilyPond and LaTeX you don't even have to go through _this_ change in mind-set :-)
",no
"But they _are required to_ comply. Otherwise they lose their safe harbor provision and are held directly responsible for any actual copyright infringement. This repo _is_ them fighting back. They can't refuse the takedown notice, but they can and do make it very transparent exactly what and who has compelled them to take down content.
",no
"We don't expose the enablement pref to users; it's a side-effect of having things to sync. (That we don't consider the clients engine to be a 'thing' that needs syncing in order to support a feature is why this is a problem. Send Tab is an awful hack.)

The 'right' fix for this is for send tab to be an engine or a service of its own, so it's a box to check. That's not really a viable short-term solution.

_The lowest-effort, safest thing to do here is to tell the user to choose to sync something, probably tabs_. I think the number of users who want to use Sync only to send commands to other clients is pretty low, and having nothing checked is likely to be due to a bug, not an intentional configuration choice.

Flipping the pref is both good and bad. Bad because we'll now be syncing every few minutes, even if there's nothing to sync. Good because we'll pick up remote engine election changes. Bad because this is also how admins are supposed to turn Sync off. And so on. If you are determined to go that route, please get review from mhammond.
",no
"I chose this formulation because I thought it best reflected the spirit of the original test. The problem here is that the type of `return n + 1` is a type variable (which defaults to `()`). If I annotate `0` to be `0_i32` (or something), that still leaves the RHS as an unconstrained type which we cannot infer (as there exist multiple impls that apply to i32, e.g. `impl Add<&i32> for i32` and `impl Add<i32> for i32`). Using a type parameter avoids this.
",no
"That's surprising because I removed really only the stuff that was modified after I let _my_ version of LyX do its job. And I did not get into trouble afterwards. Probably because I did not delete any of the non-modified files (which are still tracked even if .gitignore has lines matching their names).
",no
"I'm a bit unclear on the design choices that got us here. It seems like `Constraint` is implementing `as_posyslt1` so that children can override it?

@bqpd can you please summarize the issue(s) at hand, and what choice(s) we need to make?
",no
"Released.

On Fri, Jan 17, 2014 at 12:40 PM, Craig McDonald
notifications@github.comwrote:

> Any chance you would release a new version? I just spent two hours tracing
> down this same bug. Thanks.
>
> —
> Reply to this email directly or view it on GitHubhttps://github.com/progrium/ruby-jwt/commit/302dba26ea58c5f1863b9f3ef24b6e8f4d2010a9#commitcomment-5104864
> .
##

Jeff Lindsay
http://progrium.com
",yes
"`make non-rdf nodes and their descriptions both emit events that point to the non-rdf resource` 

:+1: In my mind, the descriptions are subordinate to the non-rdf resource, and the less we have to expose them directly (instead of via a hop from the resource), the better.
",no
"@jaydson please test/review when you have time.
- Work towards the Harmonic API: renamed the Parser class to Harmonic, centralizing APIs there. We can break it down/refactor and expose the API in a different way later on.
- Removing global pollution, most Harmonic data is now stored in class instance properties.
- Making use of async functions.
- The config file of a template is `config.json`, previously Harmonic was looking for a file named `harmonic.json` inside the theme.
- The `harmonic.json`'s `template` property has been renamed to `theme`.
- If the currently selected theme contains a `config.json` file and the contents of this file is not valid JSON, Harmonic will now throw an error instead of silently ignoring the invalid config file.
- Errors in the CSS preprocessing will now throw an error in the build process instead. Previously they were being silently ignored due to a bug.
- Added an useful error message when specifying an unsupported CSS preprocessor.
- You can now disable CSS preprocessing by setting `""prepocessor"": false` in the theme's `config.json` or site's `harmonic.json`.
- Overall clean up/DRYing.
",no
"> It looks like metacpan just indexes the most recently released perl, e.g. warnings is in RJBS/perl-5.18.2.

I think PAUSE treat a perl like any other dist.  Newer packages replace older ones.  But it a later release doesn't have a package, then the old one stays in the index.

> Maybe instead of diddling around with adding stuff from the ""right"" perl release (based on the stack's target version) it would be better to emulate the PANs?

I'm not sure what that means.
",no
"Please don't leave commented code around in the class library. If it's not needed, delete it. If you're temporarily leaving it around to enable it later, then put a comment explaining why. There's nothing worse to someone understanding new code than finding random pieces of commented code around.
",no
"@mikesherov I was hoping the PEAR site would be back by now so I could do a proper release (it will be 2.5.0 as I've got some new features in there as well) but it isn't ready yet.

If it isn't back up by Friday, I'll be releasing regardless.
",no
"I did a minor release (1.6.2), created this commit which is backwards incompatible (at last I went ahead with the more homogeneous if thinking regexps of putting a caret and a dollar sign around the action name), and will release a major version when the time comes.

Forgot to mention @marksim in the commit message, thank you for your help!
",no
"I don't think we use them anywhere right now. I guess it's the std practice in suri to expose the ptrs of each layer that made me do it this way.

We could suppress them and only reintroduce when there would be a need, for example if we would create a vlan keyword of some kind. OTOH, it's not much overhead, so think I rather keep them here.

As to why 2 ptrs, we can have 2 layers, so we should be able to access both.
",no
"@cioan fyi the only reservation I had about doing it this way would be if they collected systolic but not diastolic (or vice versa) and the data point collected was out of range, an alert would be shown.  It does seem like a *big* edge case though (they are never collected separately), and this does read better so I've fine with keeping it this way.",no
"Je suis pas trop pour, ça voudrait dire utiliser moment.js en dehors de nunjucks. Au final pas sur que ça apporte grand chose (on précompile quand même le template). Par contre je peux essayer de simplifier tout ça et d'utiliser {%- -%} .
",yes
"Well, I think we might just want to use the fallback implementation. Given that .NET's apparently just checks against `Char.IsWhiteSpace`, I don't think we'll be much slower. And there can still be a `<platform>.Lib.trim` to expose the raw native behavior.
",no
"Well I don't know how it should be on Linux so @wsnipex might be able to help you out but on win32 all the scripts are setup to not pollute the existing directories and to write all the generated files into `project/cmake/addons/build/`. You can choose whatever you want for `BUILD_DIR` but I would recommend choosing a directory that is already gitignored ;-)
",no
"Well done. The [] and []= is a bit complicated but they are perfect candidates for isolated unit tests not using the database at all.
You can test this is complete isolation. E.g.

``` ruby
clazz = Class.new do
  include PropertyContainer
end

obj = clazz.new
# mock low level methods (e.g. _set_properties) and setup expectation for those methods
obj['foo'] = 'bar'
```
",no
"@longnguyen11288 - can we / how do we upgrade the shared the environment to use v0.9.0.rc2 of bosh-workspace?

@rkoster - do I need to change how I am referencing the `logsearch-for-cloudfoundry-boshrelease`, or should it just automagically find the bosh-release in the subfolder?
",no
"> Sure, they might get selected, but they won't be used, so, it doesn't really matter.

Asking the database to retrieve data that is not going to be used is a waste of resources and can lead to serious performance issues, especially if one of the unused columns is a blob with lot of bytes.

If you are concerned about SQL queries written wrong and not persisting the data correctly in the database, I have to remind you that both 6.x and 3.3.5 branches are a work in progress and they should be tested before applying the updates to your production environment. You can also contribute to the project by peer reviewing all commits to ensure new fields are read/written correctly.
",no
"Buffering results could be advantageous, if done correctly you could avoid many server requests. If you fear fetching some number of extra records could exhaust the memory resources, there are mechanism you can employ to determine if you can safely allocate enough memory for the extra results.
",no
Then there is currently no way to get such data to the non-JS hooks' code. You could save that data to a separate data file and use the data in Dredd arguments using a Bash wrapper script. Then you could load the source file in non-JS hooks as well.,no
"we could remove this, but it is helpful to see something. the rule of silence http://www.linfo.org/rule_of_silence.html says that if there is nothing surprising to show, then there should be no output, however sadly, sbot is still pretty surprising no matter what it does.

maybe we should just have configurable log levels, I have had that at some point but I get lazy and just use `console.log`",no
"Mainly because of https://github.com/ember-cli/ember-fetch/issues/200#issuecomment-452555472
I agree this should have probably been a major release. I missed that boat a few versions back, and since I broke the release I did subsequent releases as patches.",no
"I think I would recommend that one use different Flock instances (and file handles) for different lock requests, because it will only transparently switch between shared and exclusive locks if one uses the same flock (file handle) for both lock requests.",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 36](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=1090&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 5 (2 new), passed: 65 Build time: 02:54:53
### Failed tests

```
VSTest: GeometryTests.XbimGeometryToIfcTests.ConvertIfcCylinderToBRepTest: <no details avaliable>

VSTest: GeometryTests.XbimGeometryToIfcTests.ConvertIfcCircleHollowProfileToBRepTest: <no details avaliable>

VSTest: GeometryTests.IfcExtrudedAreaSolidTests.IfcExtrudedArea_With_IfcArbritraryClosedProfileDef_And_IfcCompositeCurve: <no details avaliable>

VSTest: GeometryTests.IfcRevolvedAreaSolidTests.IfcRevolvedArea_To_Sphere: <no details avaliable>

VSTest: GeometryTests.IfcSweptSolidTests.IfcSurfaceCurveSweptAreaSolid: <no details avaliable>

```
",no
"@tartur please read the whole conversation, have nothing to be added.
""Jenkins users are developers after all or at least IT people :)"" - yes that's why when i see stacktraces i starting fixing code. And when end-users see such job they report stacktraces and not even reading git error that is just ""git push fastworward failed"" with real message.  Because even regular users knows that stacktrace - is broken code and we can't trust to the whole execution when it has stacktrace!
",no
"This is causing CircleCI to report failures, I think due to the doAction inside an undoAction which should not be there. Also I think we should not change both Blocking and Blocked at the same time, may lead to difficulty in debugging when something goes wrong. I've fixed the doAction problem and reverted Blocking to use set/clearState in https://github.com/magarena/magarena/commit/b255e1bc2461719b7df10857bf5d3452c3a421c4
",no
"If you choose not to follow a TODO please delete it from the codebase. The code comments are not meant to be a discussion between developers.

That being said `virtual_field` is used extensively throughout the ding2 system. The p2 modules are not standalone code. Your choice of not using virtual_field does not reduce dependencies for the system. It increases complexity as it introduces another approach for handling fields and limits the flexibility of how ratings can be displayed.

We do not use `hook_block_info/view` even though it is a part of Drupal Core. We use CTools content types.
",no
"QT serialises as well, at least if multiple threads are involved, and to my mind it's not an issue.

To me it seems like they want to share a socket connection, which 'only' requires some shared state. QT does it with a QCoreApplication, I do it with an 'Application'.

If the project is standalone, it might be best to provide such a state, like the zmq context, in some way and leave it to the library clients to manage it.

Makes sense ?
",no
"(Simon Krughoff) It always makes me uneasy to have a method that has optional arguments that cannot be used if some other arguments are used.  One way to deal with this is to make two methods.  You could also keep this and make it private and expose two @partial methods that do the two different things, just calling with different parameters.
",yes
"@sweirich Hi Stephanie,

thank you for sharing the delete algorithms for Red Black Trees. I'm about to implement a [Red Black Tree in Java 8](https://github.com/javaslang/javaslang/blob/master/src/main/java/javaslang/collection/RedBlackTree.java). However, the _delete_ method is still missing.

Please let me ask one question: Which solution for _delete_ do you recommend, the one from Stefan Kahrs or the one from Matt Might. Both, _conciseness_ and _efficiency_, are important for me. In Java, we cannot take advantage of GADT's.

I'm about to give the algorithm of Matt Might a try but am also curious (without having dived into it, yet) how Stephan Kahrs algorithm does compare to it.

A little hint would be great.

Thanks in advance,

Daniel
",yes
"`f-` is the branch prefix I use for features. I can find only one remote branch that contains `revdep`.

When doing a revdep check, I compare the results of the current CRAN release (tag v0.5.0) with the current master. Each revdep run results in at least one commit to that branch. Does that help?",no
"I think renaming them might be prudent with a comment describing in more detail the relationship between Jab notation and the actual chrominance subsampling factors. 

I've actually given the last one the wrong name if you see page 10 here. 

http://dougkerr.net/Pumpkin/articles/Subsampling.pdf

If you have a good insight onto how to perform the actual compression that would be awesome btw. I'm working from several different implementation  sources but I don't really understand the maths.
",no
"> it's possible to add a lock on main frame side just for that function so that we are sure we can't have concurrent access without having to lock everything

I will probably end up doing this because I'm in fact not sure at all we can't have race.

> But if you want to leave it for later I'm fine with your current branch.

I will try to find a solution. It's quite visible with those samples because it happens at the beginning when the queue isn't full yet so try to render many subpics in a row.
",no
"Changing the type of uiBin seems to be the simplest solution here. I'll submit a PR for that, and adding some simple casts elsewhere to silence other MSVC warnings - I checked with both gcc and clang that they still emit the same code.

FWIW, MSVC didn't manage to optimize the comparison and negation here, at least not on the optimization settings currently used.
",no
"I fear having `null` is not better and may hide further issues, don't you think? But well you decide better, I feel a little ugly that we have one more place saying that systemd shouldn't build on darwin. There are other assertions in the systemd package.
",no
"This undoes the very reason that that was there in the first place - it was intended to ensure that tests are always run in the test environment when running them locally - otherwise they will run on the development database.
As pre [my comment here](https://github.com/TryGhost/Ghost/issues/1385#issuecomment-27624913) this should check if the environment is set to travis before overriding it, but the override is still necessary.
",no
"In Django's docs, we have several release notes documents that use this pattern:

```
These release notes cover the `new features`_ ...

...

.. _`new features`: `What's new in Django X.Y`_

What's new in Django X.Y
=========================
```

Since this commit, we now have errors like ""WARNING: duplicate label new features, other instance in /home/tim/code/django/docs/releases/X.Z.txt""

Is it a bug? The documentation still seems to build correctly.
",no
"Unfortunately, more or less, yes ;)

Besides that I try to work on actual end user projects, though, and recently force myself to spend a little less time with the open source ones to speed them up a bit. But D's lack of ARM/Android support is also still holding back a few things (there is a D game engine and UI framework that I'd really like to use for mobile/tablet development).
",no
"This approach is [recommended in the python docs](https://docs.python.org/3/c-api/memory.html):

> However, one may safely allocate and release memory blocks with the C library allocator for individual purposes, as shown in the following example:
> ```C
> PyObject *res;
> char *buf = (char *) malloc(BUFSIZ); /* for I/O */
> 
> if (buf == NULL)
>     return PyErr_NoMemory();
> ...Do some I/O operation involving buf...
> free(buf); /* 
> ```",no
"This is still wrong. You need to check that `a.variadic` and `b.variadic` are the same and return an error if not, and then use `a.variadic` otherwise. Before you fix it, though, we should make a test exposing the problem. Something like this ought to do it:

```
fn foo<A>(a: A, b: A) {}

fn bar() {
    let x: fn(uint, ...) = fail!(""unimportant"");
    let y: fn(uint) = fail!(""unimportant"");
    foo(x, y); //~ ERROR mismatched types
}

fn main() {}
```

**UPDATE:** I see that this code was fixed in a later commit, but the test case is still needed. I'd personally squash those commits together but that's neither here nor there. Still need tests (I'll add a comment about it)
",no
"It's common for crystal (master) to break compatibility which is fixed in shards (master). I won't release a Shards version that may require crystal (master).

The homebrew formula should be fixed to use Shards master instead of the Shards release when `--HEAD` is passed.",no
"Hi. Any particular reason why not? Inheritance is not exposed to end users in any way and it is impl. detail.

First of all, the approach taken by this library is superseded by the in [prometheusresearch/react-stylesheet](https://github.com/prometheusresearch/react-stylesheet) and [prometheusresearch/react-dom-stylesheet](https://github.com/prometheusresearch/react-dom-stylesheet). We found out that injecting theme via context is not something we want to do in our apps. It's better (and also more performant) to premade components for any particular theme before using it.
",no
"Thanks @skivvies. The overarching issue is just one of priorities where things that aren't on the top of the queue inevitably become more complex than they initially seemed, end up causing more bugs and conversation, and take away from the things that are actually the biggest problems when they weren't that important in the first place. So that's just something I want us to be super vigilant about, and it's something I know I've been guilty of in the past.

In this case I think the damage is limited, but it's still distracting. There was clearly a straight bug here with iconLoc and with the error message on invites showing two messages, but I think the obvious response there is just to re-open the ticket and move on. I understand everyone's been working extremely hard, and actually a huge part of the goal here is to work smarter so we don't have to work as hard. I don't think the pace we've been keeping is sustainable, but I do think we can be just as effective if we're really super disciplined about where we put our energy.
",no
"I just went through the git log when writing this. Perhaps I misunderstood the commit message. In any event, feel free to edit this changelog.

I plan to include a more readable summary in the release announcement. This changelog is mostly for completeness (although it doesn't include all bug fixes).
",no
No. What we need is to understand what each error really means. Sometimes it's just bad code that could be rewritten to use the exposed interfaces instead of using internal constructors. Sometimes it's a bug that some interface is missing.,no
"if someone do it in production, happen that a third party can access to a new API exporting sensitive data. is a seriously DON'T DO IT for security reason. like the --XXX option... we can put them all documented in NOTES without any indication if the --help.
",no
"The goal is validating the good use of the annotations. for instance, `PostLoad` makes sense only for methods.

Another point is the validation of properties. You have 2 choices here: using `@Attributes` when using a constructor (which is the case currently as you extend the base class) or using `@var` on the public properties when removing the injection through the constructor (which requires the hack used by @schmittjoh to support older version of Common but the PHPCR ODM can make 2.2 the requirement to get rid of it)
",no
"To be clear, I first chose koa because it was the only framework with sync looking code support via generators. It doesn't matter to me if its implementation is ""unclean"" or ""hacky"" because the readability benefits in user code far outweigh the implementation (which wasn't bad at all IMO). Performance is not an issue for us either (for us, 3ms response times is nothing to worry about). If it wasn't for generators in koa, I'd probably just have used Hapi. 
",no
"From what I understand, Travis CI does not support checking a package for both OS X and Ubuntu; you have to choose either one. Besides, the only way to trigger OS X checking is through `language: objective-c`. So the OS X support may still need to wait for a while?
",no
"It is incorrect to install the binaries directly. We want to build, release and install the Pacman packages instead: https://github.com/lygstate/build-extra/blob/220ffc10a00c66cc1796fad3dceb7fbc55ba2f08/installer/HowToRelease.txt#L56-L63
",no
"@julian1 This was removed to prevent confusion that an account has multiple keys associated with it. There was at least one report of a person losing their owner key because they thought doing `wallet_dump_private_key <account_name>` was sufficient to backup their account, when in reality it was only returning their private active key which is not sufficient.
",no
"In large part because bookmarks and the various things they belong to all live in one index, which means you can't delete the index each time you do a bulk index of one type of document or you'll constantly be destroying the data you just added. That's why the bookmark method here looks different from the ones on works, tags, etc.

We could do aliasing for complete reindexes, yes, but I was starting with the ""reindex everything from scratch"" bits. 
",no
"TeamCity UnitsNet :: Release Builds [Build 1.13.0-stable.13](http://anj.no:8500/viewLog.html?buildId=74&buildTypeId=UnitsNet_ReleaseBuilds) outcome was **FAILURE**
Summary: Tests passed: 177, ignored: 1; exit code 1; error message is logged Build time: 0:0:19
",no
"It was reported somewhere, and I confirmed it was not working. When analysis completes, the filter is not updated. In any case, yes, I think anything two pass should not be allowed here because a track and multitrack are very volatile and quickly invalidate the first pass results, and we do not have a way to invalidate the filter's analysis results and automatically re-run them. (That problem still applies to trimming clips.)
",no
"Hi, thanks for looking into this, I'd love to support more `search_type`s.

The thing is, the proposed interface seems less then perfect to me. I think we should expose [all the URI parameters](http://www.elasticsearch.org/guide/reference/api/search/request-body.html), namely `search_type` and `timeout`.

So, something like this:

``` ruby
s = Search::Search.new('index', search_type: 'scan', timeout: 1) do
  query { string 'title:foo' }
end
```

would make more sense to me. What do you think?

P.S.

Ultimately, I'd aim for something like:

``` ruby
all = Tire.count 'articles'
```

and

``` ruby
ruby = Tire.count('articles') { query { terms :tags, ['ruby'] } }
```

And of course a first-class DSL support for the scan/scroll searches.
",no
"Hmm, I thought for some reason that we were going to choose each one based on the particular version shipped to the PowerShell gallery. 

As in maintain an arduous list mapping each module and version, so we could be sure we were on released versions and not what may be a WIP.
",no
"Nothing,as far as the core detect goes.

A new release was created to [fix a completely broken non core detect](https://github.com/Modernizr/modernizr.com/pull/35). This was required because the build system uses git submodules to pick up the latest released repo.
",no
"There is no explanation in the commit message why ~230 lines of `StatePensionAgeTest` integration test have been commented out in this commit.

Also I think it would be preferable to delete the lines, rather than comment them out. They can always be retrieved from git if it turns out they are needed in the future. Currently these lines remain commented out even after the final commit of this PR.
",no
"Hmm. Is there still just one single shared tropohouse (`~/.meteor/packages`) used by any node version?  I get why you'd want to do this only on first download, but then when you switch to a different version of Node you'll still have this cache and not rebuild.  Maybe we need to organize the tropohouse by ABI?
",no
"@UniversalMediaServer/developers I've done the last release as just one file per OS instead of having versions for Java7 and Java8. I still think we should look at when is a good time to make the switch to Java 8 completely (probably soon) but for now I think it's confusing and superfluous for most users to have to choose a version of Java, especially since we write the program in Java 7",no
"So if I understand this right, the trakt.tv update checker runs **once** at startup, and trakt.tv caches updates in a **24** hour cycle.
Do we need to consider  users that choose to leave their browser DuckieTV active all the time, only closing on Browser updates, or system reboots.
The same could apply to the standalone DuckieTV users, who minimise to the system tray as a long running task. 
I'm thinking we may want an attachment that periodically kicks off the update checks, perhaps similar to the autodownload code (if applicable)?
",no
"@stefanwalther, @doowb or I will do a pr to the recipes soon with some changes. We'll need to reformat how some of the tests are done to ensure that state is not shared across tests, and to make it more clear configuration is done. It took me a while to figure out that there was configuration outside of the tests that was effecting behavior in the tests.  also I'd like to make the formatting more consistent with the format we use for the rest of our examples and docs. In general though, the recipes are awesome, and the documentation itself is impressive. 
",no
"It seems this won't build http://hydra.nixos.org/job/nixos/trunk-combined/nixpkgs.phonon_backend_vlc.x86_64-linux

It claims to require vlc >= 2.2.0, but I see release 2.1.2 as the last. http://www.videolan.org/vlc/releases/

Any ideas? Also I see that it fails to find pkgconfig, though it seems unrelated.
",no
"I think it would be better to wait for the web branch to be more polished before releasing it - the worst thing would be to release it and have all the users try it and decide to never use it, despite the subsequent improvements.
Mostly I think we need to make the media items on the browse page load via Ajax, that way the load times will be much nicer. As it is now, it takes about 30 seconds for me to load a modest sized browse page on my relatively fast computer, so load times without Ajax are a real problem.
Also I think browsers still have problems smoothly playing our transcoded videos, for me in Firefox and Chrome the video freezes after a few seconds and I need to pause and unpause to make it keep playing.
",no
"@fosrias This functionality for Siren isn't completely implemented. I plan to build a separate more-featured fixture for this behaviour and keep `poll.<type>` identical across all the types.

I've filed #2 to track improving siren which would include building another fixture for the more advanced features.
",no
"Not needed, too complicated form-wise (subform inside inline-component?), sometimes it may just be a relationship, no name, and it may change (which would force us to create yet another person record, which is even more complicated form-wise).
",no
"@wonzhq maybe i am completely wrong and missing something. but following is what i have in my mind, i am using the some of the C++11 syntax to simplify the for loop, but the idea is that we just need to check the shared part of the single op and pipelined op using the loop.

``` patch
diff --git a/src/test/osd/RadosModel.h b/src/test/osd/RadosModel.h
index f9c0f9b..1ecbea3 100644
--- a/src/test/osd/RadosModel.h
+++ b/src/test/osd/RadosModel.h
@@ -1066,19 +1066,33 @@ public:

   void _finish(CallbackInfo *info)
   {
-    context->state_lock.Lock();
+    Mutex::Locker l(context->state_lock);
     assert(!done);
+    assert(waiting_on);
+    if (--waiting_on) {
+      return;
+    }
+
     context->oid_in_use.erase(oid);
     context->oid_not_in_use.insert(oid);
-    assert(completion->is_complete());
-    uint64_t version = completion->get_version64();
-    if (int err = completion->get_return_value()) {
-      if (!(err == -ENOENT && old_value.deleted())) {
-   cerr << num << "": Error: oid "" << oid << "" read returned error code ""
-        << err << std::endl;
-   assert(0);
+    for (auto completion : completions) {
+      assert(completion->is_complete());
+      if (int err = completion->get_return_value()) {
+   if (!(err == -ENOENT && old_value.deleted())) {
+     cerr << num << "": Error: oid "" << oid << "" read returned error code ""
+          << err << std::endl;
+     assert(0);
+   }
       }
-    } else {
+
+      uint64_t version = completion->get_version64();
-    if (int err = completion->get_return_value()) {
-      if (!(err == -ENOENT && old_value.deleted())) {
-   cerr << num << "": Error: oid "" << oid << "" read returned error code ""
-        << err << std::endl;
-   assert(0);
+    for (auto completion : completions) {
+      assert(completion->is_complete());
+      if (int err = completion->get_return_value()) {
+   if (!(err == -ENOENT && old_value.deleted())) {
+     cerr << num << "": Error: oid "" << oid << "" read returned error code ""
+          << err << std::endl;
+     assert(0);
+   }
       }
-    } else {
+
+      uint64_t version = completion->get_version64();
+      if (version != old_value.version) {
+   cerr << num << "": oid "" << oid << "" version is "" << version
+        << "" and expected "" << old_value.version << std::endl;
+   assert(version == old_value.version);
+      }
+    }
+    {
       map<string, bufferlist>::iterator iter = xattrs.find(""_header"");
       bufferlist headerbl;
       if (iter == xattrs.end()) {
@@ -1107,9 +1121,11 @@ public:
           << "", expected "" << old_value.most_recent() << std::endl;
      context->errors++;
    }
-   if (!old_value.check(result)) {
-     cerr << num << "": oid "" << oid << "" contents "" << to_check << "" corrupt"" << std::endl;
-     context->errors++;
+   for (auto result : results) {
+     if (!old_value.check(result)) {
+       cerr << num << "": oid "" << oid << "" contents "" << to_check << "" corrupt"" << std::endl;
+       context->errors++;
+     }
    }
    if (context->errors) assert(0);
       }
@@ -1138,11 +1154,6 @@ public:
         << "" and old is "" << old_value.attrs.size() << std::endl;
    assert(xattrs.size() == old_value.attrs.size());
       }
-      if (version != old_value.version) {
-   cerr << num << "": oid "" << oid << "" version is "" << version
-        << "" and expected "" << old_value.version << std::endl;
-   assert(version == old_value.version);
-      }
       for (map<string, ContDesc>::iterator iter = old_value.attrs.begin();
       iter != old_value.attrs.end();
       ++iter) {
@@ -1188,9 +1199,11 @@ public:
    }
       }
     }
+    for (auto completion : completions) {
+      completion->release();
+    }
     context->kick();
     done = true;
-    context->state_lock.Unlock();
   }

   bool finished()
```
",no
"Thanks for replying. This change is temporary for the buildbot work and
we'll make the library dynamic when we release binaries.

Roger

Danny Boisvert notifications@github.com于2015年7月23日周四 上午5:02写道：

> Isn't the new prebuilted binaries becoming LGPL by default because of this?
>
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nwjs/nw.js/commit/ed229e5f780da221542ae3c80e91b7ea86ab4a91#commitcomment-12307722
> .
",no
"Change commit message to:

```
Improvements to SConstruct:
* Default target is release instead of debug (scons with no arguments).
* All targets now include debug symbols, including release.
Rationale: ""out of the box"" builds of rippled using plain ""scons"" or ""scons -j4"" will produce
a debug instead of a release build, which could underperform.
```
",no
"Whoopie. Awesome trick. In fact it gets even simpler. By moving the condition to the property itself, you no longer have to have a dedicated PropertyGroup tag. So the one shown below can be shared with the rest of your properties.

```
<PropertyGroup>
    <!-- This is added to prevent forced migrations in Visual Studio 2012 and newer -->
    <MinimumVisualStudioVersion Condition=""'$(VisualStudioVersion)' != ''"">$(VisualStudioVersion)</MinimumVisualStudioVersion>
</PropertyGroup>
```
",no
"As a general comment of constructor/destructor patch I agree this is something we should do.  I think we've seen evidence that when we do make this change it will expose some other long standing subtle issues which will need to be addressed.  
",no
"> // TODO: Should we expose GetQueuesCount()?

Yes. W/o that, and with limitting to 100 queues, there's no way to know there are queues.
Alternatively, allow pagination by returning a result that is more than just queue names. E.g.:

```
{
  IList<string> Queues;
  bool HasMoreResults;
}
```",no
"my bad, forgot the work i did a while ago. This bower.json is merely for development purposes. When you run `grunt bower`, that actually builds the bower component that should be published on the web. A separate `bower.json` is outputted into that shim repo, which should have the correct dependencies.
",no
"@anatol RDoc `4.1.0`\* is only in preview release, it will be released soon and merged into trunk before the `2.1.0` release this Christmas.

That said, Eric is the current maintainer of RDoc and I think he's more than capable of handling the merge, please stay tuned ;)
",no
"@Toflar commenting on code being 1-year old is a bad way to start conversations. The _only_ way to find this conversation is through the github notification, which is a one-time solution (I don't think anyone will actually go read again their old notifications to identify such conversations).
Thus, some people might even have disabled notifications for such comments.
",no
"I'm away from the console right now so I can't be sure, but I remember there would be a problem when libiconv was installed from Homebrew.  Even if /use/include/iconv.h was missing the shared library would still be there since it is part of OS X, so when Homebrew installs iconv headers the build process will pick libiconv.h from Homebrew and the libiconv shlib from the system, causing linker error due to incompatibilities.  I'm on the iPhone so I don't have a reference right now.  Sorry.
",no
"Restrict the routes to only those that are needed. Lines 5 and 6 will create 14 different routes. By being selective about which routes are exposed as URLs, we reduce the likelihood of accidentally introducing a vulnerability or bug into the app.

To select only those routes needed, use the `only:` option, for example:

``` ruby
# No actions exposed for user resource:
resources :users, only: [] do
  # Only new and create actions from the ItemsController
  # are exposed as routes:
  resources :items, only: [:new, :create]
end
```
",no
"That would be cool, but VFPU vectors can be accessed both horizontally and vertically from the register set, as seen as 8 matrices. x86 unfortunately is very bad at gathering spread-out things together into one xmm register, doing the gymnastics for that will probably lose the benefit of SIMD so my current plan is to not do it.
",no
"> usually using a release version of ctrulib instead of a commit is the better idea unless it's very outdated, or you absolutely need a new feature in a newer commit.

This. It is recommended to stick to stable releases of software unless there's a compelling reason to use a development build. This applies not just to libctru but Luma3DS as well. It is natural that the current development version of Luma3DS would need stuff in the current development version of libctru.",no
"It could. But just in case there's a need/will to release a 2.6.1-1 with bug fixes (wrt #87 for instance), and because it's dead easy to [use another GWT version](http://mojo.codehaus.org/gwt-maven-plugin/user-guide/using-different-gwt-sdk-version.html) for your project (and 2.7 should be backward-compatible), I think it's better/easier to leave it at 2.7.0-SNAPSHOT.

But maybe we should rather branch a release-2.6 off 2.6.1 if/when we want to do a 2.6.1-1 and really keep the plugin version in sync with the GWT version, including in snapshots.

With 2.7 soon to be released (hopefully), feel free to do a pull request switching to 2.7.0-SNAPSHOT.
",no
"Well, there's at least one thing we could do:

```
interface List {
    ...
    shared actual default Boolean equals(Object that) {
        if (is String that) {
            return false;
        }
        ...
```

And document that...
",no
"Yes indeed. Need to expose it as the runtime instead of the DynJS also. See DynJSBuiltin for now. Happy to grab it a different way. 
## 

Sent from my iPhone

> On Jul 9, 2014, at 2:17 PM, Lance Ball notifications@github.com wrote:
> 
> This should ultimately be new io.nodyn.Nodyn(dynjs.getConfig()) (or similar).
> 
> —
> Reply to this email directly or view it on GitHub.
",no
"> This is not good, cause I won't have the permission to access Pacman packages.

Right, and you also do not have write access to upload a new release. Those notes are for the maintainers of Git for Windows.

To test, you can simply run that `make install` procedure and build your own portable application as described [here](https://github.com/git-for-windows/git/wiki/Making-a-portable-Git).
",no
"It's not entirely following semver, no; our rules are set out at http://matrix.org/speculator/spec/HEAD/#specification-versions. Of particular note is the fact that the major version number of the spec release is encoded in the REST URLs, so that servers can offer the old behaviour as well as the new - hence the need to bump the major version when a backwards-incompatible change happens.

I think it's a mistake to consider r1 as signalling ""we're prepared to keep the spec stable now"", mostly because too often that mythical point never arrives.

Notwithstanding all that, we've talked about this more on the team, and given that synapse is already implementing the ""breaking changes"" documented here under the r0 URLs (in fact, in some cases it never implemented the old behaviour), there's no point in a major version bump for now.
",no
"I think it’s probably better to let the engine crash until this extra parameter is evaluated and properly implemented, rather than to make it silently pass through with a TODO that someone might accidentally overlook. Happy to solicit others’ opinions on this though!

(Also, a third parameter is definitely _not_ handled by SQ6/SCI2.1mid, so the signature should probably reflect this instead of being `SIG_SCI32` with an extra optional?)
",no
"@dkubb `coveralls` depends on `rest-client`, which depends on `mime-types`. The latest versions of `mime-types` (2.x) are not compatible with Ruby 1.8.7, so we need to lock to specify 1.x to ensure that tests pass on Ruby 1.8.7 and REE. I made this a test dependency because [Gemnasium](https://gemnasium.com/dkubb/equalizer) was showing this project’s runtime dependencies as out-of-date.
",no
"That makes sense. However, it doesn't seem like there's breakage either.

On Fri, Jan 06, 2017 at 05:39:08PM -0800, David Lord wrote:
> Because I thought itsdangerous was stable enough at the time for that to be the next release once the issues were closed out.
> 
> -- 
> You are receiving this because you commented.
> Reply to this email directly or view it on GitHub:
> https://github.com/pallets/itsdangerous/commit/a8b386aa74c751b56af6749fd0f9f2349ab23953#commitcomment-20394786
",yes
"Chris, you and I understand that the R in the flatness-in-the-limit theorem doesn't actually have to be shared between n. That's just a nice way of thinking about it, and the criterion is really about the size of R. 

But that phrasing somehow doesn't match with this new statement about there being lots of small subtrees, does it? If we want to really make the connection than it would seem to me that we could just rephrase the theorem in terms of subtree size rather than subtree sharing, and then make the sharing thing a corollary. 
",yes
"I thought we had already discussed that for your pc the sweet spot was around 6 and then you ran into bottle necks like disk IO. What if the executor is a shared resource? Assuming you are not actually spawning new threads and just submitting batch jobs to the executor I think renaming worker threads to worker runnable and the worker thread count to something like parallelism (common terminology with fjp) the code would be clearer. Glad to hear that order is not important at all for linker and parser callers, just seemed that all linkers might be able to complete first then some parsers might complete and results would be lost.
",no
"It is the normal flow but I think that it makes sense to include things that are deprecated in one release and things that were deprecated and now removed in the next release. I realize this is repetitive, but I don't think this is an area where we should maximize clarity rather than terseness.
",no
"@skadyrov Are you planning to open a pull request for @diogobernardino for the Maven release feature?

---

@diogobernardino I would also suggest that you rename the artifact before publishing the first time to Maven Central. Currently the following files are produced: `library-1.7.0.aar`, `library-1.7.0.pom`. I would prefer to have something like `williamchart-1.7.0.aar` to being able to differentiate between multiple files in certain situations.
",no
"This is a WIP, not clear if we would actually expose `texcoord_ratio` directly (maybe), but in other cases it would be set automatically by providing a repeating sprite pattern. For shader-based patterns it's useful to control ratio though.
",no
"show the actual command the user types in, followed immediately by the output.  Something like:

```
$ cppcheck badcode.cpp
Checking badcode.cpp...
[badcode.cpp:10]: (error) Array 'a[10]' accessed at index 10, which is out of bounds.
```
",no
"No, I'm already using the fact that I can define my own repos per project in my demos. I have my local instance of Herd that I intend to hit during that demo.

Perhaps we can have a list of choices for the repos?
- Herd and user repo
- Project A repos
- Project B repos
- etc...

Is there any notion of which is the ""current"" project in Eclipse? I don't think so, but that'd help.
",no
"Controllers with namespaces typically are, but to ensure that non-namespaced classes can be found, and not have to pass around more information than necessary, I chose to load it there. I had it in CodeIgniter.php previously, but that felt wrong, also, so I moved it back to router, which might prove to not be the 100% best place, but the Autoloader is solely for handling namespaced classes or classes that have been added to the classmap - and I'm not about to force people to add every controller they make into the autoloader's classmap.
",no
"For databases with signatures, there should be no user facing difference between DatabaseRequired and DatabaseOptional.

Additional data points -- I signed core.db with my packager key and ran the following....

```
# with DatabaseOptional (holds true for DatabaseRequired as well)
$ time ./expac -S %n core/pacman
pacman

real    0m0.045s
user    0m0.008s
sys     0m0.006s

# with DatabaseNever
$ time ./expac -S %n core/pacman
pacman

real    0m0.008s
user    0m0.005s
sys     0m0.003s
```

If this isn't your experience, then you'll need to figure out why gpg hangs on verification.
",no
"Is the address reference to `rp->modify->u.replace` in the `WT_PM_REC_REPLACE` safe?  It seems to me that it's not, I'd be inclined to only release the hazard pointer when the loop completes -- in the worst case, we're holding a hazard pointer across a disk I/O, but it's a hazard pointer, so that shouldn't matter?
",no
"I know is the default and might be is exposed to the user by using 'help' on the command, not sure; but IMO is ugly :P 

I think I opened an issue about this in GATK public (use Optional<Type> for optional arguments with a dynamic default). 
",no
"> possibly heavier and slower data structure

Never, if this structure will be used also for such things as `d.keys()` or diverse iterators, because dict would be slower here as OrderedDict on big data.
And as I wrote in comment above - that makes sense (especially in the big data world).
",no
"On mobile at the moment, but:

Re: options object, I'm not really convinced this would be used often enough to be worthwhile. It would be fine perf-wise, but it is a lot of code.

I'm not sure exposing the exception suppressing is really needed either, so I would opt for just a `safeToJson()` which uses try/catch. The reason for this is, the rendering of suppressed exceptions is not very meaningful, so not very useful for public use.

Those are my 2c. There are probably typos in this which I can't edit on the mobile site, so ignore them if there are.
",no
"Hi. Nice tip.
- please respect Phobos style-guide (braces go on their own line, one-line if don't use braces, etc...). http://dlang.org/dstyle.html
- main returns void in D
- please don't mix indentation sizes
- don't use comments like `// which() function` to mark the end of a function.
- please rename the entry to:
  - `Is a specific program available in PATH?` (my fav)
  - `Is a specific program available?`
  - or anything you want but don't mention Windows or Linux there (what about OSX, FreeBSD? we need a snippet that works everywhere).

Modify the filename too (question mark must be replaced by `&#63;` in file name).
- please regenerate index.html by typing `dub` :)
- don't return the empty string on failure, better throw a `new Exception(""non existent"")`.
- your tip will probably works on any POSIX-like system, please replace mentions of Linux by Posix (http://dlang.org/version.html)
",no
"The current migration model is broken (well, it doesn't work at all currently, but also the model is broken), because it has to create the Language Root Folders at first, causing all existing content being indexed as shared content, and only then moving the content into LRFs.

I'm trying an alternative approach, where the content is moved into normal (properly named) folders at first and only then those folders are swapped into LRFs by changing their base class (which is pretty safe, because the old and new has the same Dexterity base object).
",no
"This is the script I ran across the 38 community buckets https://gist.github.com/drnic/663d47b6ecc0c443369b

I'm unsure how adding the bucket policy has caused this issue.

Also confirmed the problem (file size error) exists for https://github.com/cf-platform-eng/docker-boshrelease 
",no
"The main thing is that most calls to Ensure don't need to do anything - the data is already in the memory buffer and therefore the method will exit at the first condition (`count <= ReadBytesLeft`). When the 8K read buffer is exhausted and we need to read more data, only then do we continue to the invocation with `GetAwaiter().GetResult()`, but this should be a really really small percentage of cases. What are you seeing in your benchmarking?",no
"I'm not that worried about backwards compatibility at this stage, there probably aren't that many people using it. I'll also write up a changelog for the 0.2 release to describe the change. So yes, please go ahead (and make `iban` mandatory)!",no
"And lastly, this portion of the puzzle was not _directly_ solved by the program.

2 was the other isolated possibility for this square. My program chose 8 out of luck.

Dang, that's a lot of guesses.  Maybe in some era a few geometric conjectures can prove which guess is better.
",no
"this is not true. Computing the forward gradient is not exposed in make_forward_solution

computing the forward for the gradiometers is not the same as computing the forward wrt the dipole location and orientation.

so in order words this is a C specific thing.",no
"I reckon all that description would be useful in the javadocs. Does calling establishSession() twice reset the session (perhaps create a new cookie value)? Can you switch from shared to non-shared and back?

I'm still wrapping my head around why you'd want a shared session. I guess it could be useful if it read-only.
",no
"@gforcada Hey Gil, I am sorry if my comment sounded harsh to you. I know you are working your ass off for the community and I really appreciate your work here. Applying changes to all our packages is a boring and unthankful job, I can tell that from own experience. I understand that you don't have time to create pull requests in that situation and I am sorry that I did not take this into account when asking for a PR.

I got frustrated lately with plone.restapi development a bit because other devs with good intentions do things that lead to additional work for me as a maintainer.

plone.restapi uses semantic versioning and my goal is to do very frequent releases after every single meaningful pull request. This is only possible if I can merge PRs at any time and then do a release right away. This wasn't possible because of your commit to master. With a PR I could have easily postponed the merge of this important and valuable contribution to after the next release.

The simple reason why I did not complain about Maurits PR is that this one did not require me to manually go through all open PRs and having to amend them.",yes
"Ah, that is true. However, we _do_ have the association of where the project came from if they're opening a shared project, because the username is in the URL. If the URL is a shareable URL we could use that, or if not fall back to the current user, since it's a private project on their account.

(of course, if you've re-saved someone else's project, well...nothing we can do about that.)
",no
"TeamCity UnitsNet :: Release Builds [Build 1.13.0-<default>.10](http://anj.no:8500/viewLog.html?buildId=71&buildTypeId=UnitsNet_ReleaseBuilds) outcome was **FAILURE**
Summary: Error message is logged (new); error while applying patch Build time: 0:0:6
",no
"Forcing it to be constructed in one shot would definitely be a better behavior since it would guarantee that the different internal would stay in sync.

Baring that, the only truly safe alternative is to sort everytime there is a call to mapEId2chId. Just saying that one must always have called 'sort' before doing any regular calls on the class would lead to maintanence difficulties. It is always best to have a class enforce its own 'invariants' instead of requiring outside code to do that.
",no
">  I understood that release-version.sh rebases the release commit in an attempt to synchronize upgrades of parent and child which I consider ill-motivated. The result is that every artifact that is consumed by Fiji cannot be released without Fiji which is a too high burden for developers of artifacts that are used by many others. Please correct me if I am wrong

I think there is a misunderstanding here. The `release-version.sh` does not require preemptively bumping POM versions. Those are two separate issues. The ""rebasing"" of which you speak is just an ""orphaned"" commit on the release tag—i.e., the actual release commit is not present on the master branch. This is completely orthogonal to how versioning is done with Maven, BOMs, etc.
",no
2.1.1 is supposed to be a non-LTE release for Bahmni. We decided to use only LTE releases for RA. Did we change the decision? Using 2.1.1 breaks the appointment scheduling module. I set it back to 2.0.5 in https://github.com/openmrs/openmrs-distro-referenceapplication/commit/3f9d326bd58ea0b020c48a9a1ca827c71bd4feb6,no
"i'd say for sanity's sake @jun325 you should be free to update the minor and patch numbers of the version (a la http://semver.org/) - starting at this point, so let's call the next release (with the changes here up to now) 2.0.1 (and the next patch 2.0.2, and if adding an actual new feature/button/etc 2.1.0)

@stevefaulkner confirm that this is ok (seems non-controversial to me)",no
"With `||=` and `begin`/`end`, I usually format it like this:

``` ruby
@reporter ||= begin
  config.add_formatter described_class, *streams
  @formatter = config.formatters.last
  config.reporter
end
```

Any reason you chose to put `begin` on its own line?  Specifically, the 4 spaces diff between the `end` that matches `begin` and the `end` of the method looks odd/non-standard and it's nice to avoid that, I think.
",no
"Ah, I think I just forgot to mention that I'd probably suggest `2.6.0` for this release (it's not that there were some really major changes, but amount of those `reference` (and other) fixes done by @SomMeri is quite noticeable to deserve higher number :) If this won't bother you too much of course.
",no
"We don't the function to check path is wrong or not but we need to keep ok=true because when we ask delete using a glob (generic \* into name for example), if there is no file to delete, goal (having no more file) is achieved and we don't want to report an error, so we must return true. This is used by delete/purge process. I agree it is not same function than having a function that check entry parameters and tell if at least one file was used or not, but it is a behaviour we need.
I recommand to use a dol_is_dir or dol_is_file before calling this function if you need a control on a ""not globed"" and exact path.
",no
"This one is nice; I actually only have VS2010 and VS2013 in my primary dev VM, so I've been having to use another one for CefSharp lately... We should add the VS2013 `.lib` files to the CefSharp repo also I think, so users can choose to use either VS2010, VS2012 or VS2013 when doing CefSharp development.
",no
"This is a good start. Our telephone conversation makes more sense now. I don't think we'll be able to reuse _exactly_ same container (`TeamProjectCardContainer`) in the meeting context - that TeamMembers subscription on the container doesn't exactly make sense. We'll probably have to write another container component.

This branch is a good illustration of what we need to do. I didn't notice the `isProject` prop on `OutcomeCard` for example.
",yes
"@kylegregory I tried to clone your repo and cherry-pick this commit, but it appears that you deleted it from your repo. I could just apply the patch myself, but I'd like to give credit were it is due. Once we get this fixed, I'll be doing a point release (see #1192).",no
"Static free function is a function not meant to be accessible from other source files (you can use anonymous namespaces to achieve the same thing). Keeping this in mind the compiler is right to complain that such function is unused because you do not use it in every single source file.

2 fixes possible here
- remove static and move function body to .cpp (I would prefer this)
- remove TC_GAME_API and replace static with inline",no
"Not explicitly documented, but the project follows semantic versioning.  Yajl 2 was just released so another major release so early would cause undue pain and suffering.

I'll merge your changes today or tommorow.  Thanks for the contribution!
",no
"Hmm, apparently, rights on oss.sonatype.org are given on com.google.xxx, not com.google as a whole; so either you'd have to find someone at Google with release rights on com.google.template (I couldn't find any public issue at https://issues.sonatype.org/browse/OSSRH) or ask for those rights.

In the mean time, I can probably make a pull-request with an Ant target or shell script to build the bundle.jar to be uploaded to oss.sonatype.org (there are specific Ant tasks too, if you prefer; but I have never used them and I'm not sure how to), so you can easily (re)build it yourself (if I were you, I wouldn't trust a stranger –me– for doing so on your behalf), for this time and later releases.
",no
"@abe33 Question: What's the motivation behind making a new, tiny, release so often, sometimes 3+ releases per day? 
It's awesome that there is development going on! However, it kinda gets annoying that lately Atom prompts me to update autocomplete-python virtually every time I open it (plus a restart, often). Especially since apparently half of themicroreleases are for (micro)version bumps of kite-installer which I can't (and won't) use anyway.",no
"flow-typed just copy a file to your repo, so it's exactly the same at the end. Except flow-typed does not allow you to choose the location, so if you don't want default location, you need to move it by hand, so it's longer using flow-typed cli :D",no
"Supposedly though write-release and read-acquire must be paired to be correct, and we do have sequentially consistent loads, so maybe for the acquire barriers on those loads to work the stores must have release barriers. I don't see though that there are any values that are being synchronized by these barriers.
",no
"> a silent fallback to GL would be great though

I thought about this but this does not easily fit into the current code. would be ugly to call cleanup and delete here. we still can think about a fallback if somebody complains. who uses noveau or vmware and requires an accurate clock? I don't expect an answer :)
",no
"I personally thinks this kind on warnings should be thrown at users face hence topmost. I can change it if you want tho. 

It was always very annoying, I use release build to test subtitles and when it crashes I couldn't even close the window because of that message being hidden. I have only one monitor and on top is kind of useful for mpc... even for debugging. 
",no
"`ret` is declared as `NautilusOperationResult` (is it enum?). Here you override it with `long`. And function declaration have `gboolean` return type. Not sure what is the right type here (I'd vote for `gboolean`), but choose one and use it consistently.",no
"Yeah as much as I'd like proper upsert I'm not comfortable requiring
postgres 9.5 yet, especially as our release still bundles 9.3 or something.

Thanks!

On Thu, Feb 9, 2017, 6:43 PM Joshua Carp <notifications@github.com> wrote:

> This probably isn't the right time to require postgres >= 9.5, is it? I
> pushed an update to try the insert, then roll back and run a select if it
> fails.
>
> —
>
>
> You are receiving this because you were mentioned.
>
> Reply to this email directly, view it on GitHub
> <https://github.com/jmcarp/atc/commit/d34b46b0115127ca9b7a6d77d3b69dc890539d89#commitcomment-20825973>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAAHWI6n2Exp8z2gZnuf5nqMFEz6H36Uks5ra6S3gaJpZM4L7qzZ>
> .
>
",no
"Cool, I'll release this in conduit-extra with the foldl dependency for now, and if there's demand, I can bikeshed the name for the function to include in conduit itself.

I bet a similar function in `mono-traversable` would make a lot of sense, what do you think?
",no
"It would be nice to have a comment explaining what you are doing here, and for the nearly identical code in ViewStack.

Also, why does this block of code have an `if (this._timing === 0)` clause but ViewStack doesn't?

Also, are you expecting the for() loop to match multiple times, or just once?   If it's just once, then isn't the `if (this._timing === 0)` redundant with the `this._timing < this._transitionTiming[o]` clause?  It seems like you should have a `break` statement in here.
",no
"This move of `.spec` files causes the query profiling to miss all POSIX-tables, meaning the release/regression tests will silently say everything's OK even if there's a fault/exception in a table. We will need to update `./tools/profile.py` to handle this refactor.
",no
"Very interesting improvements! :)

One comment though...

> Added dirty flags to Object3d so that only needed matrix calculations are
> performed. This does however force the added step of flagging objects as dirty
> after making changes to them.

What's the difference of having that or calling directly updateMatrix();? Also, wouldn't it make more sense to call the boolean ""updateMatrixNeeded"" or something like that? I know ""dirty"" is a bit of a tradition, but I can't stop imagining a 3d object with a dirty texture :)
",no
"Do you think it'd be worth it to leave a comment here, noting that this is only safe to do because this `init` is located in a .go file with `_test` suffix?

If `time.Local = time.UTC` were to happen in normal package code, that would be extremely bad (and possibly very hard to catch) for any package that imports `go-diff`.

Such a note would make it much less likely this potentially dangerous line of code would inadvertently make its way into the normal (non-test) code.

It shouldn't happen, so it's up to you if you think it's worth it.
",no
"@vruusmann would you be willing to back-port this to branches 1.3 and 1.2 and consider a new release of those? AFAICT this might affect Spark, and there are versions still using the older JPMML. Or if I tried to back-port, would that help?",no
"This is causing a deadlock at startup on one of my OS X machines (OS X 10.8). It is not entirely related to one part (shared QMLEngine) vs. another (synchronous metadata loading).

While commenting out loadFilterMetadata() does prevent the deadlock, reverting this commit alone did not completely resolve it! I also had to remove the GLTestWidget created in MainWindow, which is not a big deal and uses legacy Qt OpenGL code anyways.
",no
" > In particular in the context of rero a major version bump of addons makes no sense for a new release of Kodi. There may not even be a single change regarding addons.

 Technically, yes. But from user's point of view it makes very clear which addon (version) is the correct one for ""my"" Kodi.  I tried just to be user oriented, that's the whole point.",no
"The one I chose is:

```
- (void)receiveNoteOn:(int)pitch withVelocity:(int)velocity forChannel:(int)channel;
- (void)receiveControlChange:(int)value forController:(int)controller forChannel:(int)channel;
```

etc. I think that matches what's in the PdListener for messages.
",no
"The problem is https://github.com/ldc-developers/ldc/blob/master/runtime/CMakeLists.txt#L525; there shared unittest-Phobos is linked against shared unittest-druntime.

**Edit**: Should be fixed by a0da72894ce066f4e70ff7f67c25144e0a6c78bb.",no
"This will silently ignore the settings if it's not of the right type, probably better to just assume it's a dict and propagate the error to the caller.

Maybe also it could be useful to do this in a more low-level way, e.g.

```
socket_options = (
    (socket.SOL_TCP, socket.TCP_KEEPIDLE, 30),
    (socket.SOL_TCP, socket.TCP_KEEPINTVL,  30,
    (family, option, value),
)
```

This way we could support arbitrary socket options, just need a way to set the default values.

It's more powerful but also not as user-friendly, but I guess people who want to set socket options
know what they're doing.
",no
"> Aren't the short name the enum in AvailableDatastoreProvider

Yes, they are, but I don't consider `AvailableDatastoreProvider` a public API which should be accessed by users. Actually I think we should get rid of it altogether as specifying the class names in _ogm-core_ is really ugly (plus it doesn't work for custom dialect which we don't know).

There is [OGM-544](https://hibernate.atlassian.net/browse/OGM-544) for addressing this issue; in this context we could enable dialects to return their own short name so `DatastoreProviderInitiator` can obtain this information without having an enum with fixed values in core.
",no
"I don't actually use LevelUP, so I've got no idea what it'd take to achieve full support.  Basic support came in as result of #1 and #2.  In the few apps I'm using Sophist, we're writing to the db with Sophia's C API and exposing it to web services with Sophist.  Nothing but reads come from node-land, so building in LevelUP support wasn't high on my todo list.

As long as full compatibility wouldn't break the existing API, I'd be fine with building it in.  Any suggestions on where to start?
",no
"Cool info. Release history looks awesome Thanks again Michael.
BTW - I just stumbled upon the fact that your're going to take the CMS 3.8 release lead... My best wishes for this task, hope you're going to find time for ""other"" stuff - Please don't get burned out :wink: ",yes
"Yest, hash will do. 

(Though, more straightforward solution, like 4 contexts with their own data may also play well, **if** you can foresee needs for separate debugging of only one instrument, for example. Generated contexts is acceptable solution, but they prohibit advanced rspec usage like ""run only one of failing specs and debug it"")
",no
"Writing here, because it's impossible to reply to release announcements ... just a nitpicky remark.

> Use `$var = null` instead of `unset($var)` to avoid triggering the garbage collector and slowing things down.

It's actually the other way around - the garbage collector will do its job anyway, so by using `= null` you avoid doing the GC's job yourself when you don't really need to.
",no
For hourly data we have to keep the timestamps identical as EnergyPlus does itself. You can change the timestamp for sub-hourly data as it is expected but here you are changing the logic for the whole library. I wish you had this in a separate commit so we could revert it if necessary.,no
"It's not obvious why this is needed, perhaps a comment explaining?

I'd guess it's related to http://stackoverflow.com/questions/11336120/when-to-call-obtainpermanentidsforobjects

> Core Data apparently generates permanent IDs for objects when they are saved physically to disk
",no
"I'm beginning to think `exported` is better:
- This feature is really about what targets are exposed (available to be built and depended on) to consuming packages, as the proposal notes it isn't changing the _visibility_ at all.
- This becomes more obvious when we consider that we should be able to ""export"" (make available to be built and depended on) executable targets.
",no
"> Think how we do that with ORM and databases: when we allow mapping to the specific representation of the underlying technology, we resolve the problem already, and it's very elegant.

Yes, sure, but what really is the native representation of data in Ehcache? You put `Serializable` objects into it, and that's how they are persisted.

> It's a mapping problem, and the users are in control of the exact mapping via configuration.. and we can introduce new feature to allow for more mapping styles without needing to break anything (or allowing users to write their custom migration tools as needed).

+1 for allowing alternative mapping styles in the future. It's something we can address after the final, driven by user feedback and demand.

> I don't have a magic solution, but at least storing exclusively the primitive array (Object[] columnValues) sounds better to me than serializing custom types, especially assuming those are all primitives or other JDK standard types..
> For example, it might be useful for the users to be able to use diagnostic tools to inspect the cache value without having OGM on their classpath as a requirement to ""decrypt"" the cache content.

So do you suggest to use plain `byte[]` as serialized key representation? Is that a common pattern in Ehcache world? There would still be some sort of ""guarantee"" regarding the structure of that array, though, right? Btw. we'd also need the column names and the table name, solely the column values wouldn't suffice. I'm wondering what we'd really gain by this. Ok, you don't need the key classes on the classpath for diagnoses, but OTOH is that really a problem we need to adress right now?

Also it's not as bad as storing object BLOBs right away because we work with tuple-like structures for keys and values in the store, not with the plain entities themselves. So it's just three classes you'd need, and I feel that's good enough to start with. We can investigate alternative modes later on IMO.
",no
"Oh I see. Still seems like they're tracking the git tags on each release though. Often those github releases are just the product of someone running some script on the tagged git revision. Perhaps we could just do the same thing on the underlying source code?
",no
"As I said, anything that gets executed before controller instantiation _should_ be only CodeIgniter's code. You can, of course, make extensions, but it's a sensitive area and so I'd rather force such code to explicitly load external libraries when necessary. An external library could change ini settings, alter environment variables, declare constants or classes that CI depends on ... A particularly frustrating situation would be when a package-defined class name could match a controller's name.

In essence, debugging a problem triggered by an external library would be hard and the framework has always been built in a way that'd rather prevent you from ""shooting yourself in the foot"", as some would say it.

Another reason is that because the framework itself doesn't utilize an autoloader, the easiest choice is to load it at this point, where in the general case is when the user's code comes into play.

And just a short note on index.php: it is more like a sensitive configuration file rather than a CI core file. :)
",no
"caching may give some issues.
- if disowned, the master becomes None
- if accessed before setServiceParent, the None will be cached
- really its only a few more access. I've made some tests, and you can
  access self.master with 2 parents like 10M times per second.

The problem I'm trying to solve is to remove all those games about
initializing the services with a reference to master. As here we are
abstracting this, we dont have to use setMaster anymore, we have a simple
and generic way to put self.master in every services of buildbot, without
any boilerplate code.

Le mar. 24 mars 2015 à 19:45, Dustin J. Mitchell notifications@github.com
a écrit :

> I'd like it to be a caching property, at least -- just about everything
> ""interesting"" involves self.master, so making that a recursive function
> seems suboptimal.
> 
> I'm not sure what problem this is solving, either -- do you often run into
> cases where an object has no master attribute?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/tardyp/buildbot/commit/10fb24503fddcd0fd416c40665ddf4ce0e052817#commitcomment-10374392
> .
",no
"exposing the profile name that will be added seems to make sense, but doesn't make the test all that much better since it is simply testing for 'local'.  Exposing the internal details of what env-vars are tested as a public string doesn't seem that useful to end users to see, it is an implementation detail.  Also, we prob need to improve the k8s one to look for the pattern *_service_host.",no
"@behlendorf While LWP defines thread_t to be an integral type, the Open Group Base Specifications Issue 6 defines pthread_t to be an opaque type:

http://pubs.opengroup.org/onlinepubs/009695399/

Performing bit operations on `pthread_t` is illegal while performing bit operations on `thread_t` is okay. That means that our `CPU_SEQID` implementation is relying on undefined behavior in code that we do not control.  Such things have caused rather spectacular failures in the past:

https://bugzilla.redhat.com/show_bug.cgi?id=638477

Something that spectacular is likely not a risk here, but relying on undefined behavior in code that we do not control makes me uncomfortable.

That being said, you are correct that this should work on the present glibc and musl. I had written that it might explain some failures after seeing that we had undefined behavior touching per-cpu specific data structures as was pursuing the patch set, but I realized that was a false positive in my cursory reading of the code after taking a closer look at it.

Lastly, musl is returning a pointer, so it would be better to type cast this using `(uintptr_t)` rather than `(long long)` and perform the typecast only when `HAVE_MUSL` is defined so that we do not lay traps for future ports to other libc implementations where the typecast will trigger a silent failure. It would be even better to come up with a way to to avoid performing a bit operation on the contents of `pthread_t`, but that is probably asking too much.
",no
"The stuff in ./configure needs to be tested on system without git. Also on a system that does not have a git account (but does have git). Something like that ALWAYS works and always works silently (on a developers machine), might be the thing that fails on ALL common users.

It is a very nice addition, IF it is found to be truly silent and 'safe'.  Being a professional developer for a long time, I have seen this bite MANY other developers (and me to) time and time again. Things work great on a development box.  All the libs are there, everything is happy.  It goes to a QA department, and the thing 100% fails miserably, or worse yet, there IS no QA dept, so the users get the joy of having a working system die after getting an update.  

I have no idea if this could be this type of situation, but I am just tossing a friendly warning ;)
",no
"In the end this was not a good idea because we have Velocity scripts that expect `$doc` instance to be shared between them. E.g.:

```
{{velocity}}
$doc.setTitle('foo')
{{/velocity}}

{{velocity}}
$doc.title
{{/velocity}}
```

And with this change each Velocity script gets a different `$doc` instance.
",no
"Hmm, yeah. Makes me think there are a couple of things which should go into workflow/job scheduling:
- tool needs internet access flag (for easy sequestering of jobs onto a head node for data download)
- multiple copies of this tool cannot run at once

As for load limiting; `Bio.Entrez` does some already, it behaves to the limit of ""no more than 3 requests per second"" (though, given how long it takes to schedule and execute Galaxy jobs, that isn't exactly a problem).
",no
"Just in case we need callWhenReady (at some point in the future) to be accessed by other pieces of code eg some drivers or a new method added to the API.
This would also allow monkey patching though (with ask the positives and negatives).
",no
"I committed that to fix what was arguably a bug, but now I'm reconsidering. Maybe we should choose the second option I outlined above, instead of making this one work?  Right now, it dynamically chooses a new value every time the path changes, for every single character added or deleted in the path widget, because ipywidgets will complain the instant the allowable options does not match the current value.  Instead, maybe we should _never_ change the value when changing the path, and simply always add the current value (whatever it is) to the list of available options?  That might be much more reasonable behavior, because then if one has to traverse through a directory to find the file you want, and reloading each file takes a long time, the file will be reloaded only when explicitly selected by the user.  And also that way the default file will never change unexpectedly or become None; it will just stay whatever value it was already (which is thus defined always to be a legal option).  I think I'll change it to do that unless someone objects.
",no
"How about we get a release or two out and then reconsider what Ruby versions to support for a 1.0 release?

> I'd prefer to leave it in if possible

Fine by me. Perhaps we can specify a version that Travis has preinstalled for faster test runs. I think my last commit pointed to jruby head, which gets downloaded and installed each time.

<img width=""773"" alt=""screen shot 2016-05-28 at 7 17 40 pm"" src=""https://cloud.githubusercontent.com/assets/5355/15630440/0b3fb792-2509-11e6-9951-746c459139f2.png"">
",no
"@whit537 The lock blocks: any other transaction that tries to do acquire that same lock, and also concurrent writes. It still allows read access for everything else though, so it won't block the whole site. The lock is released at the end of the transaction.
",no
"There's a major performance issue with dcadec that I've not seen before when building it as a shared object library.

Now, using this latest patch, any DTS audio stream will max out one core on the ARM processor when DTS HD support is enabled, resulting in significant stutter.

Something is wrong with how dcadec is now being built, as before in my test builds the CPU load would stay relatively low (about 30-40% on a RPi2 when playing a 1080/DTS-HD MA stream over nfs) and free of stutter.

I've debugged kodi and it is using the ""libdcadec"" codec, but I can't say why there is now such a significant performance issue.

I've done a completely clean build to confirm this behaviour (cleared ccache, removed all build directories etc.). Nightly builds from [Chimney](http://openelec.thestateofme.com/dev_builds), ie. r20742-g9e684fd, also show the same DTS-HD performance issue so this doesn't appear to be the result of any other newclock4 patches that I'm including/excluding/etc.

Obviously there's something subtle I'm overlooking, but can't see what it is right now. The only obvious difference is shared works well, static works badly.
",no
"Already in the process of doing that, prompted by this discovery :)

It's probably too late to roll back this change, but you might want to make a 1.1.1 release of `distributions` that fixes it so that everyone with a caret dependency will avoid this error.",no
"No, and its was a conscious decision not to.
Everything that the fields I removed exposed have getters below, so there should not be any reason for modders to need direct access to the field. Vanilla only needed in in 3 cases and thats because they just missed 2 getters. Other mod system can speak with me and we can work out ways to be compatible with eachother, but the amount of hacking around I would have to do because of this using Class instead of something else makes it to much of a pain.",no
@kazu-yamamoto @eborden  there is no need to release 2.7.0.3 if it's only for the metadata bound; it would serve no purpose (because 2.7.0.1 and 2.7.0.2's metadata has already been corrected via a revision) and only cause unncessary overhead for the Hackage ecosystem!,no
This one should actually go in the MPlayer class. That is where we declare them nowadays. The reason that is standard is because we can then access private fields and the like. It's the job of the entity itself to figure out if it's standard.,no
"I put this up in its current state because it's basically the last release blocker. I'm on errands until tonight, and if someone wants to resolve the outstanding oldIE issues before then I would not object.

I've basically resolved to standardize on attribute updates property/property ignores attribute (i.e., browser choice), but the start of that code is not yet commuted here.
",no
"You're creating a separate directory and using a separate git checkout to retrieve the data from the web.

But the data is just another branch in the current repo, so it seems a lot more sensible to check out (the files from) that branch into the folder.
",no
"sounds like a pretty low priority. :P my main use for this is activitystreams-unofficial, which only gets data from a few places. if you have a concrete case where you need support for more ISO 8601 feature, though, i'm open to additions!
",no
"this was just a brute force way to match the incoming bytes against what was sent so we know that the up-to-63byte block we wrote was echo'd before writing more for https://github.com/Pinoccio/library-pinoccio/pull/156 and @solidair I'm sure you can come up with a better way of doing this logic :)
",no
"> The youtube videos of Andy Grover

I hate youtube videos for stuff like this!! They're worthless and there's no cut-and-paste..

Is there no other information on how to add, manage and delete iSCSI shares other than
with targetcli and {lio,tom}_node?
## I could really need information on how to do this by modifying /sys directly...

There are no dumb questions,
unless a customer is asking them.
- Unknown
",no
"Not so sure about this one. Sure, it's possible to do unconditional client-wins requests, but we want to discourage that as it will lead to data loss. In fact, I could imagine making conditionality of PUT and DELETE requests a requirement (IIRC, CouchDB does that).

r-
",no
"We decided that Empty is fairly special concept that is only useful for `Layout`. It contains no useful data (the label and group are useless as all Empty elements are identical).

`Empty` is simply an identifier that means 'skip this space'. As a result it was decided that `Empty` shouldn't be an `Element` to make sure it doesn't nest into HoloMaps (for instance), to make sure it only affects layouts and to make sure it doesn't interact with the rest of HoloViews in surprising ways.
",no
"What's the normal pattern in Python world? I don't think we've released pre release versions of this library yet, but I don't see a big issue with uploading them to PyPi as as long as we label them as pre-release.

It looks like there are some suggestions here https://packaging.python.org/guides/distributing-packages-using-setuptools/#standards-compliance-for-interoperability",no
"This waitgroup seems odd.  I think a nicer design would be to expose a `Done()` method from the client that blocks.  This could be done by reading from a channel internal to the client which is closed as needed.  It doesn't seem that anything else needs this waitgroup.
",no
"Okay, I tracked down what had bitten me.

When moving data files like dict_en.dat[.gz] etc. to share/trelby (as discussed in https://github.com/oskusalerma/trelby/pull/167#issuecomment-6037696), I need of course to adapt the code so it still finds those files. The problem is that `progPath` is used both by `os.chdir()` in trelby.py, and by `getFullPath()`. Now as long as `progPath` is either `.` (which has been the case for test mode so far) or an absolute path, there's no problem. But for relative paths other than `.`, there is.

If resources are to live in subdirectories of `share/`, I need to set `progPath` to that relative path for test mode (and `loadMaybeCompressedFile(u""trelby/dict_en.dat""), frame)` in src/spellcheck.py). OTOH, `getFullPath()` also prefixes its argument by progPath, so spellcheck.py ends up looking for `share/share/trelby/dict_en.dat`.

As always, there's of course a couple of possible solutions. Personally, I don't really understand why to use functions like `getBitmap()` that invoke `getFullPath()` on the one hand, and rely on `os.chdir(progPath)` for loading files in other parts of the code (like spellcheck.py and namesdlg.py). As it also leads to said problems with relative `progPath`s, I'd opt for removing that one `os.chdir` line and switch the remaining few occurrences where files are loaded to using `getFullPath`.
",no
"@pgk Why is this method private? It would be nice to hook into the memberships plugin's `wc_memberships_user_membership_activated` hook, and then call `start_purchased_courses_for_user` to ensure they're added to any courses for which they gained access from the membership .",no
"Le 30/10/2012 14:39, Michele Lacchia a écrit :

> Why not leaving only keys and count and set callback=None? Then you
> only have two methods which automatically choose which strategy to
> use: if callback is given then go async, synchronous otherwise.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/kivy/kivy/commit/793255438713c8fbca1de1d316767d09ca90fe19#commitcomment-2073562.
> 
> We got the same issue with templates and python kwargs: if the method is
> put(self, key, callback=None, converter=None, **kwargs): we base our
> approach on key/value from the kwargs. Then we would have 3 reserved
> keyword instead of 1.

Also, just setting a callback completly change how the method works. Ie,
we would describing 2 totally different approach about handling (and
processing) the data.

So.. :)
",no
"@jrgifford my actual initial comment was a suggestion to remove rubygems-bundler now that Bundler is not included. Why force every rvm user to install a gem that only applies to Bundler if rvm doesn't even include Bundler? That doesn't seem very ""absolute minimum"" to me.
",no
"See https://github.com/sass/node-sass/pull/583, the behavior is changed. So we would need it back with ""about to release"" beta2 (or RC) release of node-sass. And since WE won't be getting an update before node-sass, so it makes sense to keep it.
",no
"@caijun never, ever, release your personal access tokens to the public!!! (please delete this token and read [this](http://rmflight.github.io/posts/2014/11/travis_ci_gh_pages.html))

(the secure string above is an encrypted personal access token.)
",no
"It seems like it would be safer to have an internal class method or something for constructing a `Mask` directly from a C `_mask` rather than constructing it and then deleting the automatically created empty mask?

Is `(1, 1)` the right size?
",no
"I'd almost prefer setting another data attribute to tell this function what to hide if the version has not yet been released. `parent` is a tricky thing cause it depends a lot on the structure of the HTML and people could unknowingly hide the entire form if they don't wrap the feature in a div for whatever reason.

not blocking b/c it won't affect anything immediately, but could be good for a next iteration
",no
"Awesome, thanks for checking. We'll do a release of 5.7.2.2 pretty quickly,
I'd imagine. Probably sometime next week.

best,
Andrew

On Wed, Aug 26, 2015 at 2:29 PM, Corey Reed notifications@github.com
wrote:

> Our beta sites are running the prerelease from /develop error-free on PHP
> 5.3.3 so looks like you got the last of the gremlins.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/concrete5/concrete5/commit/ef3bfdf1209be7e5e6a78b721dfc7e831fa30711#commitcomment-12913768
> .
",yes
"meh...and people at sm.org complain for any little change...jQuery changes their function almost every release LOL
The moment I learn how to use something I discover it's already deprecated... :cry: 

The eval dunno, it's a sort of shortcut, probably the code can be organized much better, though I hate javascript and I tend to mess it (even more than php), so I pass the name of the variable to update and the eval is used to update the message.
",yes
"**_Adding comment directly to the commit to ensure it is seen merging._**
I'd love to see this fixed, too, but I would probably advise rewriting this so that it doesn't throw an Error unnecessarily (not always a light hit) if the tests passed in the first place.  For example:

``` js
this.trace = this.passed_ ? '' : (function() {
    var trace = params.trace;
    if (!trace) {
        try {
            throw new Error(this.message);
        }
        catch(e) {
            trace = e;
        }
    }
    return trace;
})();
```
",no
"Hmm, I think you had it right before, especially since not all providers will implement tags.  Maybe the sweet spot is to have some helper methods like protected default_tags?

Partly this is just me trying to deal with my personal issues around methods named ""helper"" :)
",no
"I think we could do with a major review of both the API and in the internal implementation once the paper is accepted and we make a release to go with version 1 of the spec. As we discussed, the visitor pattern is difficult to understand and to debug, and I think all of these questions could be addressed together.
",yes
"> As part of my proposal exposing the native library was intentional (so that anybody familiar with the SPICE toolkit can hope right on and start using it without having to learn a new API). 

That's totally fine. You'll provide user with something like:

``` ruby
# user that familiar with SPICE and hates Ruby, OOP and complications:
SpiceRub::C.furnsh('path')
SpiceRub::C.unload('path')
SpiceRub::C.ktotal

# user that not familiar with SPICE and/or wants to do the things Ruby Way:
SpiceRub.kernels.load('path')
SpiceRub.kernels.count
SpiceRub.kernels.first.unload
```

...and call it a day.
",no
"@vi it groups duplicates stack traces automatically. For now, I don't mind that you send the reports to our backend since I will clean it up when I create a first alpha release anyway 👍 . But it might be more efficient to post them on my fork issue tracker on Github so we can discuss some issues.
",no
"Jaime as explained before we won't ever expose the actor to our (end-user) code. Instead Actor works as low-level components to implement some of the Async functions, like for example `race`. So the fact that we have the typed actor allows as to type-safely to bind Tasks that wrap that actor together. For example:

```
 Task<String> someAsyncNotification = ???

 Task<Boolean> awaitInterruption = ???

 Task<Either<String,Boolean>> = Async.race(someAsyncNotification, awaitInterruption) 
```

 That allows to compose nondeterministically effects, if we want to. So, the messages could be any type any arbitrary algebra we decide is good for our case. Still, the concurrency model is the same for any of it, giving you great deal of predictability, reuse and cetera. 

And the `race` here is implemented with this actor. 
",no
"So to update the live system we would need to:

1. Create a new database instance.
2. Create a new schema (all the new table names).
3. Copy the data from the old instance.
4. Switch the production app to point to the new database.

We can use these new migrations for 2. I guess. I didn't see 3. anywhere (I didn't look very hard), but it would require running an app with 2 `DataSources` probably? 4. is just a restart with new config data. I think ""hold from using admin"" is a bit vague. I would prefer if we could shutdown admin (writes) and prevent people making stale data.",no
Types listed in this attribute will be obtained asynchronously from the global `IServiceProvider` before blocking the main thread for the construction of the MEF-exported type. So it's all types the *constructor* will access with `IServiceProvider.GetService`.,no
"Fair point. I think that this is the wrong place conceptually for this to belong, though. A settings API should not concern itself with any of the details because it doesn't know what's going on.

If you want exclusive access of resources, I'd guess that it isn't limited to settings. Feels like it should find a home closer to the main application code. That in turn also helps solve the dilemma about how to deal with this at a UI level when the lockfile is possibly stale.
",no
"And here: for the sake of not clashing with packages installed from the old way, we probably should choose a different names. Maybe prepending xwalk-service to the name.

Need to check if other places need to be changed. And consider this when asking for uninstallation.
",no
"It should be shared within the process, but if you have a threaded webserver, you may have to set it for each service thread.  @sikachu it may be OK to revert this and be ""thread unsafe"" as long as we document that you need to set this value on startup, then never mutate it after you start serving requests.  The problem is that if anyone mutates this after the server starts, it would be very bad news.
",no
"I have another idea to change global behaviour, that would use the counter
in another way.

Play silence when passthrough. Noise when pcm.

Stop both after 10 seconds, when the Option is not ticked.
Am 31.08.2013 10:10 schrieb ""Rainer Hochecker"" notifications@github.com:

> I am ok with only streaming noise, but then remove warmup state and cycle
> counter completely. the local variable passthrough in OpenSink can be made
> a memeber.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/fritsch/xbmc/commit/311fb15a39fed5a76871da1a08f0e516284f9a15#commitcomment-3988027
> .
",no
"This seems a bit complex having to rely on the inner addClass/removeClass functions of the core module to work. Can't you just privately expose `jqLiteAddClass` and `jqLiteRemoveClass`? The problem here is that if `$$addClassImmediately` and/or `$$removeClassImmediately` change internally then we may run into some strange bugs.

@petebacondarwin @igorminar would it be OK if we had a private service called `$$jqLite` that exposed each of the shared methods? Having that we could clean up some of the existing code under ngAnimate/animate.js.
",no
"> However I am not so sure that explainTypes was always omitted when in silent mode (and that's what your change in Infer will enforce) so this time we might get less than in 2.9.x.

If so, that would have been a bug in 2.9.x. Quoting `scalac -help`:
`-explaintypes              Explain type errors in more detail.`

Moreover, I've used -explaintypes constantly for months on 2.9 and I didn't experience any such bug.
But looking at the source is confusing: even now, explainTypes is often called _without_ checking `reportErrors`. That works whenever `reportErrors` is always true. As mentioned in the commit message, I also have a patch fixing those call sites, but it's not here.
",no
"After this commit, we DO pick a one-byte or even zero-byte file in case we don't have any option (and then we print a warning about FP). If we have to choose between a 3-byte file and a 15 MB one, we pick the latter because it's safe.",no
"@shlevy, I recall a time when it was considered a matter of courtesy that people who make a change also make an effort to ensure that their change doesn't break Nix for other users. Personally, I felt that this is a matter of respect for the work others do to enhance this shared project of ours.

@alexanderkjeldaas, IMHO, we should try to reach a consensus in the community on how important grsecurity is for us. If some sort of majority feels that grsecurity should not be broken, then we need appropriate tests on Hydra that halt the channel or break the release tarball if grsecurity doesn't compile.
",no
"This is likely not a good direction to take this (combining drug code and other codes in database items in both the UI and the database; note there are safety reasons that can arise for both UI and database; also would then carry over into prescriptions and when integrate external rxnorm tables). Is something that should probably discuss on the forums.

Could employ following strategy instead:
1. Add a 'Drug' toggle in Administration->Lists->Issue Types (to database and gui)
2. Turn Drug toggle on in medications and allergies issue types
3. Keep the Diagnosis Code selector label and old behavior except if issue is a ""drug"" do not populate the Title textbox after select a diagnosis code.
4. Add a Drug Code selector below the Title textbox if Issue is a ""drug""
5. Only allow one code in the drug code selector (ie. overwrite it when select a new one) and always update the Title textbox (ie. overwrite it when select a new one)
6. Populate drug code (akin to diagnosis population for Diagnosis code) to new item in lists table called something like ""drugcode""
7. For the stats_full page can just dump all the codes there like already is (rename Diag column to Coding ...)
",no
"TeamCity QGC - Pull :: OSX Release [Build 73](http://latestfiasco.com/viewLog.html?buildId=3716&buildTypeId=QGroundControlPullRequests_OsxRelease) outcome was **FAILURE**
Summary: Snapshot dependency failed: QGC - Pull :: Origin Fetch Build time: 0:0:0
",no
"Link is nice to have, but mainly there should be something like short explanation in easy terms for users, like

```
0 – turns safety of your data off, you may lose your history and/or else.
1 – not as safe as 2, but slightly may improve sql syncing performance (or whatever should be written here)
2 – safe setting, don't change from it
```
",no
Yep. I had a lot of the release tags hard coded in the earliest days of beta 2 since there were no tags at the time and then just carried the practice forward.  I believe folks have been updating the track information in ardent patch releases as necessary.,no
"Kind of intended, yes. Since Yes is the default (but I personally prefer the silent mode), we want to make it as simple as possible to use the alternate behaviour, so both V=0 (which is quite common in other build systems that are silent by default and use V=1 for showing the build commands) and V=No (which matches the Yes/No names used here), without making this part of the makefile unnecessarily complicated (testing specifically for Yes/No/1/0 and doing something else for V=abc).
",no
"IMHO, this attribute is unnecessary. Think about the fact that you're exposing 2 names, one attribute and one method that return exactly the same thing. I understand that having an `Asset` instance and accessing `.path` multiple times will be faster than calling `.fetch()` multiple times, but most of the the efficiency difference is in the fetching/caching of the file, so it looks like the performance difference is negligible.

Also, even though the primary interface is `Test.fetch_asset()`, it looks more Pythonic to do:

```
   result = Class(parameters).method()
```

Finally, it's much easier to document `fetch()`, as it's already done, than to document the `path` attribute. Users can find `fetch()` in the docs and promptly understand what it's about. Not the same experience with `.path`.
",no
"They _can_ assume that the data is valid; they don't have to. It's probably best to have an assert to check it's in bounds, to make sure nobody does anything stupid.

Either that, or silently error with an extra `else` as a failsafe.
",no
"I think this change breaks the git-clone-others.sh script clearly. That script could make an exception, that would be acceptable.

It probably also breaks the release procedure because fuse-bxms-integ has it's own release lifecycle (and therefore version numbering). Breaking the release procedure is not acceptable. Either it gets fixed (if it's broken) or this change gets reverted.

@psiroky @mbiarnes Can you guys follow up on this?
",no
"This would compare two empty collections (where above check would be false != false, skipping the continue.
That defeats the purpose of HasParameters property - which is to avoid the lazy creation of the collections (allocation, GC tracking, release of memory) only to return a Count of 0.
",no
"Our goal is simply to have a proper release soon. So we have no time to discuss and reach a consensus among all users (incl. those that are not on Github).

I revert to  log4j.appender.R.File=${java.io.tmpdir}/spoon-log.log and we start a discussion elsewhere. 
",no
"@jdaguil: for #76 the packages and the file infos should be new sections entirely: they are neither part of the `licenses` nor the `copyrights` but each a new block of collected data that should not be concatenated to other data chunks.
Each are a new ""What""
",no
"I'm sure it's not necessary to do this.
have you checked AASM to see if there's a way to do this without having to call group save?
At a guess, I'd expect there to be a method that lets you do:

```
self.group.open!
```

which calls open and then calls save
",no
"Blocking is already in the WIP. Good idea on friends list, and on reporting
(blocking should suffice for a time) . For now I just need very basic
messaging so I can show gift recipients that they've received a gift. I'll
leave it to the community to augment the PMing feature afterwards unless I
find need myself
On Nov 19, 2014 2:56 PM, ""negue"" notifications@github.com wrote:

> Will there be a friendslist?
> 
> And what about a report button?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/HabitRPG/habitrpg/commit/5e36c5e3283892b211cbde1053ceec5b9e4d8451#commitcomment-8644649
> .
",no
"kujua-reporting is the package that handles the stock reporting module - I don't think we should be reusing the css, and changing it is dangerous as it might break the stock reporting module. Can we either use a different class (ie: not 'reporting') or at least only override the css for the targets analytics and not the stock reporting?
",no
"Add a function to RSexp.hpp (the implementation file RSexp.cpp has access to the R API). Note that the reason we lock down access to the R API is explained here: https://github.com/rstudio/rstudio/blob/master/src/cpp/r/include/r/RInternal.hpp#L19-L40 
The idea is that we should as much as possible wrap R API calls in the r namespace rather than littering them all over the place (and potentially having to deal with unsafe setjmp/longjmp occurring at arbitrary places in our C++ code)
",no
"> I reverted the exposing of the WebAgent, although it might be a good idea to leave it open since it adds flexibility at no overhead.

Since RedditSharp is open source, it's almost always better to move whatever you wanted it for into RedditSharp.

Can you tell me more about your unit tests? I haven't done unit tests because I don't want to bump against Reddit proper when running them, and setting up a local Reddit instance is a pain in the ass.
",no
"It was from this: https://github.com/jmoenig/Snap--Build-Your-Own-Blocks/pull/887
And #700 

I chose sensing because it seemed to make more sense since (lol) that was right where `OF` (and attribute and object eventually) belong, but I guess the control ones were BYOB.
",no
"Yeah, when you're already in parallel you can use blocking things. The only thing you might wanna do is to use a parallel queue to ensure you only have one dialog open per origin (in case the user has multiple tabs to the same origin). Most specs don't have that level of detail yet, but they should...",no
"I think that's fine to remove.  I was more worried about the comment that used to be right above the basic block assignment: ""We need to insert an autodestroy call for each symbol that is owned (live) at the end of the block but is unowned (dead) in the OUT set.""
",no
"I am a little confused about why we always seem to have issues around having to cloning arguments since they are just plain old data objects.  Is it because they have a UUID?  Does that cause issues in the database?  Maybe we should change the copy constructor to change the UUID or version UUIID?
",no
"If we add this function here, we are corrupting the data and application will receive a data that does not match what we sent.
Even if ther is some security check, goal of GETPOST is NOT to block all xss attacks. This should be done by escaping data when we use them, so we don't need (and it is not possible) to have a 100% sanitizing at the GETPOST level.
100% can be reached by escaping vars when used.
",no
"What I meant was 2 days back you made a tag, and forgot to push to github . I am seeing release made 2 days back . When looking at https://github.com/auraphp you can see Dispatcher updated 20 minutes back. That was why I asked ""Oh may be you forgot to push ?""

Thank you.

Hope you understand what I was mentioning. If not leave it :) .
",no
"The optimized release 4.6 may take a while since I need to validate all the changes done to the test infrastructure (it was completely rewritten). My fork also has a higher emphasis on compatibility across releases, so each change needs to be evaluated against that goal. If there are specific items from the release which make a notable difference I could release them as 4.5.x patch releases earlier. Currently the only item I'm planning to expedite is the disambiguation optimization, but if there are others they could be considered.",no
"Much better, we will need to work on moving the server specific configuration out of the credentials configuration... but that is less urgent than ensuring that the credentials are accessed and used only via their interface types (not seeing the change of use from P4BaseCredentials to the interface types in this commit though)
",no
"Ok, i tested this settings for a few days and can confirm that they keep the CPU at a lower clockspeed while not slowing down the device.

I included your settings as the new default for 'ondemand' in the 4.9.1 release - thanks again for sharing them!
",no
"Hmm, we should make `__KernelDeleteThread` add it to `pendingDeleteThreads` in this case.  Actually, maybe it should always be deleted later, I think (just could be a dangerous change, what with deallocating stack.)  Just need to figure out the right place for pendingDeleteThreads.

-[Unknown]",no
"Haha no problem. It probably took you a while to fix all the `*` and `-`'s anyway. Sorry about that. I like having these symbols as they allow downstream to see _immediately_ what changed and if they need to worry about it. Say if a release is all `+` then probably no.
",no
"Is it possible this breaks KDE? I ran git-bisect between this commit (tip of the release branch) and the channel's head (81428dd022c26764e9066d381ece90b1e88bd0d2) and this one is the first bad commit.

Reverting this commit locally seems to have fixed it. ",no
"@jeremy ah, sorry about that and thanks for the catch. It's fixed now in https://github.com/buildkite/homebrew-buildkite/commit/075e59e7189621c830bb21b1608a59b31a4b5708 so you can try again. I'll be updating the release script in buildkite/agent#350 to prevent this from happening again.
",no
"Can you use existing person attributes and attribute types from the database instead of creating them here?
There are a number of them in standardTestDataset.xml and so you can access them using something like Context.getPersonService().getPersonAttribute(id) Context.getPersonService().getPersonAttributeType(typeId)
",no
"I'd be inclined to do this by defining a view that joins a `bookmarkID` column to `history`, then here we'd just choose which table to query:

```
let target = includeBookmarked ? ViewHistoryAndBookmarks : TableHistory
…
""FROM \(target) AS history "" +
```

Makes things a little more readable.
",no
"Yeah, it was based on #220. Just something I thought might be handy, I didn't have any definite plans to implement. I do think it's good to have a clean version of the message object instead of adding context directly to the shared config (which is what I was trying to do via `Object.create()`) and once `Object.assign()` is available, we can discard the loop.

I do like your idea of submessages that are addressable by key (and of course, that can be added pretty easily). It would also make it easier to provide an API where extensions register their own plugins (probably with some kind of confirmation dialog in Caret), since we could associate each one with a single API object key.
",no
"That's because this commit is not part of a release yet. So you will need to make this change manually after the installation has finished.

Alternatively, you can use the installer to install Symfony 3.3.2 and then use Composer to update to Symfony 3.3.3 afterwards ",no
"On 28/04/2017 17:31, Louis Gesbert wrote:
> Allow `opam init --config URL`
>
> Useful for sharing config files, for custom repos, etc. The user needs
> to check the SHA256 of the file, because there are security
> concerns (this file includes the trust anchors and the repositories that
> will be used thereafter!)
>
> @hannesm does that seem enough to you, security-wise ?

I prefer to tell the user ""please check the hash using another channel:
ask the administrator via mail, or execute 'curl <url> | sha256sum' on a
remote machine."".

And then let them, instead of y/n, provide the entire hash (and make the
output of opam's hash a bit mangled (insert whitespaces, or output ALL
CAPS and expect all lower) to avoid people to simply copy and paste the
shown hash.
",no
"It looks to me as if the code in rpq.h is there just to be shared by the various cpp files. If that's the case (and it's not intended for export to native code in other packages) then it probably belongs in the src directory rather than inst/include (this effectively makes it private to the package). In this scenario you'd include it with #include ""rpq.h"" rather than <rpq.h> 
",no
"Podle me to nemas delat ty, je to zbytecne prace pro hlavni hlavu projektu. Jiz davno jsem rikal, ze to chce zavest release managera a management:
https://forum.nette.org/cs/16449-dalsi-vyvoj-nette-organizace-rozhodovani-budoucnost#p116306, https://forum.nette.org/cs/16496-jak-to-bude-dal-s-vyvojem-nette-frameworku#p116687. Co si pamatuju, tak kdysi jsme se taky bavili o tom, ze by to Honza Tvrdik delal. Ted jsme nekolik let dal a bojim se, ze on uz nema moznost to delat (cas).
",yes
"A report is fine, but it would take just a slight bit more work to actually fix them. If they are exactly the same, one can just delete one of them. If they are not the same, the last is being used and the earlier one(s) are being ignored. These aren't critical errors, but we need to fix them eventually. 
",no
"I don't understand how is this expected to work

a) with 8-bit IDs (expected access is uint16_t)
b) with 16-bit IDs (expected access is uint32_t)

For (b) definition is not clear. And for both it's not clear why data will be aligned properly.",no
"it looks like the extension does not work with snapshots :(

I will deploy a release today and use a little workaround until then

yes, I need de.saumya.mojo:gem-maven-plugin:1.0.4 for getting it to work -
1.0.3 does have a bug which bugged me
",no
"If it's holding up the release at all, please just ignore that commit. When I do a Stackage run, I currently disable the HTTP tests because they are using an older version of conduit than what Stackage is building, and this would fix it.
",no
"I deliberately left the policy empty. Originally, I did the same as your patch but noticed that acpica then interferes with already-running device drivers, specifically the ahci driver in my case. By not exposing any PCI device to acpica, the power-management-related features (e.g., battery reporting) still work while the PCI devices remain untouched by acpica.

Now., two questions come in my mind:
* Don't you observe any problems with the acpica accessing devices that are already in use?
* What additional feature of acpica do you gain by this change? ",no
"@kashike 

Do tell what that is.

To everyone else. Its a name. It was changed to avoid confusion with Guava in-which isn't going away. You subscribe to events, you listen to events, you handle events...many choices for names here. We chose Listener because that seemed to have the fewest conflicts.

@jk-5 
EventListener was a possibility but seemed to be more verbose than needed. Also, it now conflicts with FML if EventListener so...
",no
"I think we both agree that the status is a good way to communicate middleware desires to the server. I think the question is what codes should be used. The choices seem to be standard HTTP status codes or some others such as 0 or -1. It would be nice to allow middleware the option of passing back different status codes like 404, 5xx, or something else. Can we cover those cases?",no
"Don't you need to release the resources acquired here once the test completes?  Maybe you could use the `std::unique_ptr` to say something along the lines of

``` c++
std::unique_ptr<UnstructuredGrid> g(create_grid_cart3d(nx, ny, nz), destroy_grid)
```

to automatically take care of the memory management?
",no
"If you use a named path like ""python-gflags"" for this it's probably also clearest to replace resources.each with resource(""python-gflags""); I should eventually choose a generic dependencies pathname like ""dependencies"" or ""resources"" or ""vendor"" or something.
",no
"No, I'm not so sure.

OTOH, Users will see a very timid message in the middle of their output and, even if we put a warning in the release notes for the next version (yes, I'm planning on writing release notes this time and I would love to receive help with this), I'm _sure_ that many people will not read anything. Example:

```
$ ./coursera-dl --on-demand -n --aria2 -- ml-foundations
--on-demand option is deprecated and is not required anymore. Do not use this option. It will be removedin the future.
Downloading class: ml-foundations
Starting new HTTPS connection (1): class.coursera.org
404 Client Error: Not Found
Starting new HTTPS connection (1): www.coursera.org
Logged in on coursera.org.
Downloaded https://www.coursera.org/api/opencourse.v1/course/ml-foundations (52967 bytes)
Parsing syllabus of on-demand course. This may take some time, be patient ...
Gathering video URLs for video_id <iyhctVgPEeWVGAoAtDnZOw>.
Proceeding with download of resolution 540p of <iyhctVgPEeWVGAoAtDnZOw>.
Gathering subtitle URLs for video_id <iyhctVgPEeWVGAoAtDnZOw>.
Gathering video URLs for video_id <KlmwTFgQEeWwsAoexZR4lQ>.
Proceeding with download of resolution 540p of <KlmwTFgQEeWwsAoexZR4lQ>.
Gathering subtitle URLs for video_id <KlmwTFgQEeWwsAoexZR4lQ>.
Gathering video URLs for video_id <FdFtAVgSEeW7ehKhJ-vBVQ>.
Proceeding with download of resolution 540p of <FdFtAVgSEeW7ehKhJ-vBVQ>.
Gathering subtitle URLs for video_id <FdFtAVgSEeW7ehKhJ-vBVQ>.
Gathering video URLs for video_id <_EBC1VDEEeW9uQ44CNOOxw>.
Proceeding with download of resolution 540p of <_EBC1VDEEeW9uQ44CNOOxw>.
Gathering subtitle URLs for video_id <_EBC1VDEEeW9uQ44CNOOxw>.
Gathering video URLs for video_id <teDj3VgVEeWwsAoexZR4lQ>.
Proceeding with download of resolution 540p of <teDj3VgVEeWwsAoexZR4lQ>.
Gathering subtitle URLs for video_id <teDj3VgVEeWwsAoexZR4lQ>.
(...)
```

And there are so many more lines coming out of this. IMVHO, deprecation messages for user-facing options should be almost hysterical and conspicuous, so that they can't really be missed. The amount of output that is generated with ""Gathering foo"" etc. just makes the deprecation message ""invisible"".

To be honest, I don't know what is the best course of action and I am open to suggestions.
",no
"Thanks! I took the liberty to already pushed this to master (e4d8156) so that I can use the data in tests. I'll probably create a branch per issue. If I have comments on the test data I'll post them to the respective issues. I delete this branch now, if there's more data coming just push it to a new one.
",no
"Good questions. Yes, as explained in http://old.nabble.com/Should-abs(-nan-)-be-supported--td34389839.html, the warnings are errors in master, but suppressed in the release branch. That way, the release branch doesn't have any failures due to this, but the master has. On that thread, the conclusion I think was to simply go to the offending test and catch the error.
",no
"Too many unrelated things in this commit.
Differents things should go in different commits.

But also, if you want to touch different parts of the project, please use separate pull requests so we can choose to merge or not each feature. Different subjects should go in different pull requests.

And the changes in config loading were not necessary:
- subshells and `echo` are used, 
- they introduce variable pollution: i, j are not local
- they test for the existence of more files so that's slower
- $XDG_HOME_DIR/.liquidpromptrc will not be executed anymore if /etc/liquidpromptrc exists: this breaks the current behavior
- we agreed in another issue that the `liquid.theme` must be sourced by the user from his .liquidpromptrc: separating between config and theme is something that the user can do but should not be forced to do.
",no
"The bug is that 0.8 only works with Gradle 1.10 and Gradle 1.10 has a bug that prevents it from compiling AARs (read into this thread for the details on downgrading from 1.10 to 1.9 - http://stackoverflow.com/questions/20811514/gradle-is-issuing-an-error-could-not-create-plugin-of-type-appplugin).

But last Thursday Google did a new release of 0.8 (https://plus.google.com/+AndroidDevelopers/posts/LJCbjLuDVoB). And I just downloaded the latest 1.10 and used 0.8 (the Thursday release) and recreated the wrapper and did a successful build. So how brave are you feeling?

If you aren't feeling very brave then I would stick with Android tools 0.7 and gradle 1.9 for now, let things settle down a bit and then upgrade to 0.8/1.10. Or (since I actually have this set up on my machine) it would take a few minutes to update the pull request to 0.8/1.10.

Your call.
",no
"I didn't really understand this comment right away... how about

``` go
// Ticker is something which will be invoked every spyDuration.
// It's useful for things that should be updated on that interval.
// For example, cached shared state between Taggers and Reporters.
```
",no
"This race is already handled earlier, so this change isn't correct.

Specifically the race is handled here:

```
            ufsdirhash_hold(dh);
            VI_UNLOCK(vp);

            /* Acquire a shared lock on existing hashes. */
            sx_slock(&dh->dh_lock);

            /* The hash could've been recycled while we were waiting. */
            VI_LOCK(vp);
            if (ip->i_dirhash != dh) {
                    VI_UNLOCK(vp);
                    ufsdirhash_release(dh);
                    ufsdirhash_drop(dh);
                    continue;
            }
            VI_UNLOCK(vp);
            ufsdirhash_drop(dh);
```

Once dh_lock is slocked, no other thread can remove a reference from dh.  If ip->i_dirhash is still equal to 'dh' after the slock is acquired, then we know that there is at least one additional reference from the inode to the dirhash, and that reference cannot be dropped until after dh_lock is released.  Thus, the reference count is always >= 2 when ufs_dirhashdrop() is called (1 reference for our ufsdirhash_hold() at the start of the block above, and 1 from the inode).

Also, setting dh to NULL inside ufsdirhash_drop() does not affect the 'dh' variable in the functions that call it, so dh will never be NULL and your test would not actually work anyway.  Clang probably removes the entire check as dead code.

What you could do is KASSERT() that the refcount is >= 2 before ufsdirhash_drop().  If that appeases scan-build then that would be useful, but the goal would be to appease static analyzers like coverity or scan-build to avoid a false positive.
",no
"An issue I'm having is there are no changes to the JS version since 1.1.1, and so I'm not sure what to do about versioning. I could release 1.1.2 for Node with no changes, or fork the Ruby and Node versioning, and I don't like either of these options.

Until I figure out what to do, you can work around this issue like this:

``` rb
class Faye::Server
  def scheme
    nil
  end
end
```
",no
"Looks like @Defman21 removed his comment?  It was a good question though.  I'm not sure how the tracking works.  I assume it only checks that a pref was set, not what it was set to, correct?  We wouldn't be sharing data the user sets.  Is that a correct assumption?
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 46](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=1210&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Compilation error: Xbim.Geometry.Engine.Interop\Xbim.Geometry.Engine.Interop.csproj (new) Build time: 03:24:19
",no
"Excellent, thanks. We'll update our vendored copy. That'll make it into next week's staging branch release and land in prod a week from Thursday. Once it's in prod it'll take ~3 days for all pregenerated OCSP to be re-generated. So look for the fix in prod in about two weeks. Thanks for finding and fixing!
",no
"Thanks for the update.

I would like to ask to split these three separate fixes into separate commits, too. In this particular case, it is not just a style and a bisectability question, there is also a concrete concern: It has been reported that the WSH DropHandler [does not handle Unicode file names](http://answers.microsoft.com/en-us/windows/forum/windows8_1-files/wshvbs-drophandler-doesnt-support-unicode/6c74a306-0655-489a-a22c-99909bf74a02). If that is true, we need to reconsider this particular change, without dropping the others (and that is much easier if the commits are clearly separated by concerns).

Would you mind doing the honors of [splitting the commit](http://plasmasturm.org/log/530/)?
",no
"The case I really care about for our early-testing release is opam usage; in this case the optional setting is ignored entirely, so I'm not worried of cascading poisoning the well. The use of the default value of the variable is for contributors checking out the source and deciding to just run `make` without looking at the details first, and it's best if it works for them as often as possible, so I'd argue that a good cascading strategy is actually worth the effort. I'll see how horrible it looks in Make syntax, though.

Thanks for the $LIBDIR recommendation.
",no
"Note for the future: this assumes that the next release of MXRWO (0.15) is after Moose is released with core overload support.

Also, we might as well simply add a runtime-requires dependency on MXRWO, to make sure that the user gets upgraded -- there won't be any recursive dep problems because the new MXWRO can be empty and therefore not depend on Moose (and in order to achieve _that_, we'll need to move the backcompat version of MXWRO into a new dist that is only pulled in when Moose->VERSION is too old to have core overloading support).  It's fiddly in metadata but I've got this ;)
",no
"Then it should either be reported as an error with TravisCI or it should be set explicitly for that platform. Rails itself defaults to the current user when creating databases:

https://github.com/rails/rails/blob/master/activerecord/Rakefile#L113-126
",no
"Sorry, I don't understand.  [simple_form 2.1](https://github.com/plataformatec/simple_form/tree/a8da83bbaf1a90e25cb2ab2e0e3a41e1cd417d7f) has the following dependencies:

``` ruby
  s.add_dependency('activemodel', '~> 3.0')
  s.add_dependency('actionpack', '~> 3.0')
```

Is there a release that supports both rails 3 and 4?
",no
"Oh right, my apologies. I got confused because you are commenting on a larger request (post cloaking) and these lines are just minor style changes that are grouped into there.

This behaviour was intentional because EyeLine is meant to track the post the user is currently reading. After experimenting with it a lot, we determined that the topmost post entirely on screen was the one the user was typically reading.

The exception of course is when you reach the bottom of the document as those will never be the ""topmost"" post. So we mark them all as read. 

I think we should probably add some more comments ot explain this as it is confusing.
",no
If you are doing this here? What other things in Factions are serializable? Do they have a block comment? I'm thinking we could skip the block comment for this and just place it at the very top above all block comments. This is actually something that is worthy of a group discussion.,no
"`bufferedExtent` is actually only a read-only property, so this will have no impact. `map.bufferSize` is your best bet to inflate clipping extents. Recently Mapnik core starting allowing fine tuning of buffers per layer but this still needed exposed in the js api: https://github.com/mapnik/node-mapnik/issues/167
",no
"I realise that my suggestion of making the fifo an object was only an side email exchange yesterday, but surely if we are doing this then the static `fifo` object should only expose one method: its constructor.  The constructor should then return a `fifoObj` which has three methods: `fifoObj:queue()`, `fifoObj:dequeue()` and `fifoObj:getStatus()`; the last of these returns the value of the internal and private object variable `_go`.

See [Timer Object Methods](https://nodemcu.readthedocs.io/en/dev/modules/tmr/#timer-object-methods) for a pattern on how this pattern is implemented elsewhere. ",no
"Compilation errors reported [here](https://github.com/fourseven/meteor-scss/blob/0b35ec9a7264261f077a6117e909b06192d413ae/plugin/compile-scss.js#L223-L226) are suppressed if the file is lazy, and only reported if/when the file is imported by the `ImporScanner` [here](https://github.com/meteor/meteor/blob/295e3d78192ce5725266e44b6f5038e7cdbe377d/tools/isobuild/import-scanner.js#L476-L482). Unless that implementation has bugs, I think the resulting behavior is reasonable: you should get an error if you try to `import ""./imports/foo.scss""` by itself.

I suppose this means you can't import `.scss` files into JS if they have free variables, since there's no way to provide those variables by importing another `.scss` with a JS `import` statement. For that, you need yet another `.scss` to import both files, and that third file could live in `imports/` and be imported by JS.

If you have a reproduction where the errors are visible to the user even when the lazy file is never imported by JS, I would love to fix that.
",no
"This is not a Cython bug, this is catching environments where `SIZEOF_VOID_P != sizeof(void*)` which can result in silently wrong conversion to and from Python and C integers. An alternative is to define `CYTHON_USE_PYLONG_INTERNALS` to be a False value (which may slow things down, especially on Python 3 where all ints are longs). ",no
"In a way this is the same concept as how WorldObjects are deleted only at the end of the update loop since that's the only safe place. Another case would be a script calling SetData() to another WorldObject's AI that triggers an AI change and AI references are supposed to be safe during an update loop (to avoid code like the above or crashes).
Imo we should store the AI to be deleted in a list and delete the objects stored in that list on every loop (whether it's map update loop or WorldObject/Unit update)",no
"Won't this comparison fail for version 5.0? I think the easiest thing might be to take advantage of the lexicographical comparison for lists, and say `if gccVersion >= [ 4, 2 ] :`. I just checked the release notes and 4.2 is the version that the flag first appears in.
",no
"Sorry but I was not aware that the first two choices of the list were equivalent, and that this information was being trashed by the sofware; I discovered that yesterday by reading your code. I was also not aware that the new design would crash the application, when I accepted it.

Whatever your friend's experience was, I am absolutely sure that adding redundant questions to the wizard is the wrong approach to simplicity. I always thought that that extra question was justified by the distinction between choices 1 and 2, but it turns out that distinction did not exist.
",no
"We always use `run-tests` for testing now, don't we, so running against a database with other-cobrand data shouldn't be an issue? Anyway, I'm confused as to what this code did before this PR - did it error on any report that had not gone to an external body?
",no
"Suppose we did a new release of Mezzanine right now, and then Django 1.6 is released with breaking changes against Mezzanine. All of a sudden we have a ton of angry developers with broken sites. This is actually what happened with Django 1.5, so forgive me for being extra conservative here. Once Django 1.6 is actually released and we're confident Mezzanine works against it, we'll definitely bump the installed version up, but not until then. 

Claiming that it ""breaks"" compatibility with 1.6 right now is a bit of a stretch - if you're wanting to run it against 1.6 to test compatibility, simply install it manually.
",no
"@MarcinWieczorek This is still a very young project. In the latest release we changed the command line syntax as well as I added a `v` to the version number when tagging.  I would have expected more of an outcry from the former rather than passive aggressive comments about the latter. I'm sorry we don't live up to your high standards, but I fail to see how your input here brings the project forward in any constructive manner.  Many other projects don't tag at all, fail to upload tarballs, or if they do said tarballs don't build, and most other projects don't even provide a changelog. Respectfully, comment on things that actually matter.",yes
"InterlaceOperator interlaces by blocks, grouping all of block 1 together, then all of block 2, and so forth.  it was redesigned so that the strategy for interlacing should be separated from the InterlaceOperator code, and theoretically one could add their own Interlacer.
",no
"RELEASES-ia32 is the name of the 32-bit release file, to distinguish it from RELEASES. Here are the new Windows build artifacts:

<img width=""760"" alt=""screen shot 2016-09-17 at 10 14 30 pm"" src=""https://cloud.githubusercontent.com/assets/121766/18613025/3ba3f222-7d24-11e6-8490-2b77ff3658d7.png"">
",no
"Please use a proper `if ! grep -q ...` block here; it avoids the enormously long line and also avoids encouraging other people to adopt this `foo || bar` style of programming, which whilst fine here, can be dangerous (e.g. when running with `set -e`). 
",no
"@mauritsvanrees @gforcada is that commit above sufficient to initialize towncrier? I tried to make a release with zest.releaser and I would have expected that ""bin/fullrelease"" automatically fetches the changelog from /news and updates the CHANGES.rst automatically. This was not the case though. I would have released plone.restapi 3.5.2 without any new changelog entry if I would have proceeded.

After reading

https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst

I suspect that we have to add  ""zestreleaser.towncrier"" to the buildout, correct? Is there a minimal zest.releaser release that we need?",no
"I don’t understand what argument you’re trying to make, but I’m pretty sure you’re mistaken regardless: `m_accessible` is _never_ accessed directly and overriding `CreateAccessible()` is _indistinguishable_ from calling `SetAccessible()` as far as all the rest of the code is concerned. Greping the code, I just don’t see _any_ use it anywhere that wouldn’t go through `GetOrCreateAccessible()`. If I’m wrong, please explain (better yet, demonstrate with code), but I just don’t see what you mean above.

Whether the parent uses wxAcessible or not or if its the default one or not doesn’t seem to have any relevance to this either (neither does hit test and focus handling as far as I can tell) and wxDVC’s accessibility object is very much created and used even if _none_ of its parent have _any_ wx-provided accessible object.

This suggestion is just a trivial refactoring to create the object on demand and don’t waste resources with it in 99% of cases where it won’t be needed at all.
",no
"@sgress454 what prompted the ""files in Node core"" check?  Assuming this is running on every error stack that gets built through normal use of machines, It sounds like if we do this, it's something we might need to expose as a configuration option.  I could be missing something though
",no
"> Surely this: https://www.npmjs.com/~jdalton also solves that

An [individual author making one-off utils](https://www.npmjs.com/~sindresorhus) doesn't necessarily guarantee uniform support, behavior, and shared features across each of them where something like Lodash, which has roots as a monolithic library, does. You might dig I did [a screencast](http://allyoucanleet.com/post/18088044577/the-fud-challenge) on something similar to this back in 2011.

>  or another account, say https://www.npmjs.com/~lodash.

I control that one too in the hope that npm will make a migration path for [scoped packages](https://docs.npmjs.com/misc/scope) ;)
",no
"No opinion.  Doesn't hurt to parameterize it, I guess, and you could also hide that too with precedence=-1.  

The label should probably be the name of the object, not just the name of the class, except that you probably chose the class name because you didn't want to see the auto-generated unique names.  We already have a test in Param's script_repr to see whether the name was auto-generated or not; we should probably make that test public or provide some method or function for Parameterized to return a suitable name for this purpose, i.e. the name if set by the user and otherwise the class name.  We do set the names of Pattern objects in some places, and I think it would be surprising to people that the HoloViews object doesn't use that name.
",no
"It'd be useful to have a script to download files from a release tag in the hierarchy needed (x64 and ia32 folders fro windows) from the release page now, s that someone that didn't do the builds can still do the release.  If you want to take that it'd be appreciated.
",no
"@devlinzed GitHub is legally required to take down those repositories, or risk losing their safe harbor protection. The law doesn't leave them any room to interpret requests.

Qualcomm did something stupid (and likely perjurous), but they are _the first_ company who has issued GitHub a DMCA notice who has actually apologized, in writing, on public record, in this repo. That's what I approved of.
",no
"@janekptacijarabaci 
Have you tried this in release SM 2.39? There seems to be a tracking flag of `status-seamonkey2.39:     wontfix`

I understand this will break in 2.40 _(scheduled release week of December 14, 2015)_ and forward though. Haven't had enough time to backport test which is why the `minVersion` on GM Port is increasing... although 3.6beta2_(.0.1rc1pre)_ appears to be functioning correctly with this GM API.

Thanks for the ping btw. :)
",no
"(Random off-topic chat: While I accept that I need to conform to the specification and will do so, I still wonder whether the path Java chose with this sort of inconsistent, if you consider this:
equals() should be symmetric according to its JavaDoc, i.e. x.equals(y) should behave the same as y.equals(x). So to be consistent we should throw NullPointerException, as that will happen when switching x/y?  Maybe they did this to easily allow using equals() upon sparse data structures which contain lots of nulls, dunno.
I wonder what path I should chose when i invent my own different equals...() functions, i.e. ones which are not overriding the Object one... Will need to do this soon for special purposes.)
",no
"I'm not so concerned that the expression gets mangled a bit, since I'm just going to run it by the parser again, and if it doesn't parse, discard the fixits and just report the error.  There's the off chance that an incorrectly fixed expression will by ill fortune turn into correctly parsed code that does ""rm -rf"" on your home directory.  But this is unlikely.  And since I show what I fixed it too, if that wasn't what the user meant, they can fix it by hand.

What I mostly care about is that this not crash, killing your debug session for the sake of a minor convenience is not good.  So at this point, I am willing to err on the side of caution, and if I miss a few fixits I could have applied, that's worth not crashing...

Jim

P.S. The more you guys discuss this the more I wish Swift did this for me...

Jim

> On Jul 27, 2016, at 2:09 PM, Jordan Rose notifications@github.com wrote:
> 
> I'm honestly not interested in supporting this. I'd rather assert that we don't do it in the same diagnostic.
> 
> (Remember, this only applies within a single diagnostic. Multiple diagnostics may have conflicting fix-its, so there's no point in trying to harmonize them anyway.)
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.
",no
"It was a problem with the amount of shared memory we try to use (and
initially this wasn't obvious, because of how it failed in a -Asserts
build).
## I just tuned our limit down on Darwin:

commit a07fbf029a0172cb9f26c501127b8a91b07b0a6a
Author: Daniel Dunbar daniel@zuster.org
Date:   Sat Sep 13 18:28:59 2014 -0700

```
[Solver] Tune down the shared memory region size on Darwin.

 - See comment, this is a gross workaround for Darwin's very small
```

default limit
       on shared memory size. I'm not sure how big of a counterexample
users can
       actually expect STP to solve in practice -- if there is a practical
use for
       larger ones it would probably be good for us to write a fallback
## strategy.
- Daniel

On Sun, Sep 14, 2014 at 2:38 PM, Cristian Cadar notifications@github.com
wrote:

> Glad to hear we go parallel. Just curious, what changed for you on OS X?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/klee/klee/commit/e90e1ab38617253f67e7c6fa682e972b1c605b78#commitcomment-7778263
> .
",yes
Please do not add static helper methods to `Mavo.Collection`. `getFormattedProperties` is a very specific function that is only useful internally (unlike `sortDOM`). It does not need to be exposed outside the scope of this plugin. Just use a local function declaration. Not all methods need to hang off some object. Same goes for all the other helper methods this adds. The only public methods from this plugin should be `Mavo.Functions.sort()` and `Mavo.Collection.prototype.sortDOM()`.,no
"I think we should prep a way to disconnect/delete devices here as well.  Even if we're not going to expose it to users right away, the device's own state-management logic will need to take the possibility of being booted into account.
",no
"> Perhaps it would make sense to say that you can't delegate from a non-secure origin to a secure one; that an HTTPS frame will only adopt its parent's policy if that parent is also secure.

Interesting... @raymeskhoury @noncombatant curious to hear your thoughts on this.
",no
"Strictly speaking yes, but practically, we can assume a default role, i.e. `participant`.

I discussed with @joka yesterday how this could be implemented. Roughly speaking, the workflow definition would be exposed to the frontend, which allows the frontend to derive whether the `participant` role would have the relevant permission in the current phase. Unfortunately this is very different from `OPTIONS` http calls.
",no
"I'll merge it to release as soon as the refresh is out

On Tue, Mar 25, 2014 at 7:50 AM, Andreas Öhlund <
andreas.ohlund@particular.net> wrote:

> Not in the refresh no
> 
> On Mon, Mar 24, 2014 at 11:01 PM, John Simons notifications@github.comwrote:
> 
> > Is this suppose to go out? If yes then please merge to release branch
> > ## 
> > 
> > Reply to this email directly or view it on GitHubhttps://github.com/Particular/ServiceControl/commit/ba80ec13db7abb70b908663195c3e73e8a30e2c3#commitcomment-5783808
> > .
",yes
"Yep, let's release 0.9.1 before introducing 1.2-specific code.

On Thursday, January 9, 2014, Chris Chua wrote:

> [image: :+1:] , can't wait to clean up the animation logic hahah! Hey
> @pkozlowski-opensource https://github.com/pkozlowski-opensource , are
> you planning to release a 0.9.1 for the changes before Angular 1.2 tests?
> I'm thinking some people might not be able to switch over to Angular 1.2
> that soon. Not sure if we should perhaps do maintenance branches.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/angular-ui/bootstrap/commit/b87959ac295b0d68de6d4251a745d4228c7ff7a2#commitcomment-5017551
> .
## 

AngularJS book:
http://www.packtpub.com/angularjs-web-application-development/book
Looking for bootstrap-based widget library for AngularJS?
http://angular-ui.github.com/bootstrap/
",no
"I remember there being a conversation a while ago about automatically removing these script tags before calling `jsdom.env`'s `done` callback.  I believe we deferred for lack of a reason to do so -- maybe this is the reason we were looking for ;) 
",no
"We should use HUNTER_PACKAGE_BUILD_DIR here since using directory which is shared between all packages for manipulating temporaries may lead to very opaque and unpredictable bugs.

For example let's assume we have two packages A and B which build by ios-autotools scheme and user break A build by Ctrl+C leaving some temps in `<root>/multi-arch` directory. Now we try to build B package and script will find some unexpected libraries or headers in `<root>/multi-arch` and will crash.

Some notes about other scenarios:
- HUNTER_PACKAGE_BUILD_DIR will be cleaned before and after build (see hunter_download)
- A and B have no simultaneous access to the `<root>` directory, controlled by Hunter
- if we break A build while it installing libs to the `<root>` then next time we repeat install and it will overwrite all files so the final state will be correct

I will push commits with fix to the `ios-dev` branch.
",no
"Please do not exchange the key data over an intent: the message center can and should access the personal key. You can use this:

```
Kontalk.get(this).getPersonalKey();
```

There is currently no method in PersonalKey for exporting the private key data. I suggest doing a new method in PersonalKey that accepts a passphrase (that is, the encryption key) and returns a byte array, much like getEncodedPublicKeyRing.
",no
"@valib @SharkHunter @skeptical @Optimusprimeums @DeFlanko My activity on UMS will be sporadic over the next few weeks, as I have family from overseas visiting. I'll still try to do what I can.
Do you think we should release 3.4.0 now?
",yes
"@digitalextremist I hear you. The problem I have is people HOUNDING me for a RubyDNS release, which absolutely needs a functional celluloid release and right now this is a major issue. There are things that are completely broken in Celluloid that are causing major pain for upstream users and I can't do anything but try my best to triage these issues. I agree, perhaps I made changes that are going to piss off a lot of users, but on the whole I think those changes are technically good, and actually absolutely necessary. Whether we argue about what version they should come, yes, I agree - sometimes there is pain in this kind of change and absolutely I agree that I may not have communicated well, or at the time the intention of merging changes wasn't really given the weight it needed, given how you feel now.

However, that being said, at this point, I'd be reluctant to roll back these changes. I'd rather forge a way forward. If you feel that we need to support some existing use cases, let's open a specific issue with a specific use-case and discuss it, as was done when I originally made these changes.
",no
"@eregon this is what broke the cext tests. If you don't see it locally it may be because of your paths by coincidence don't expose the bug.

I run

```
$ GEM_HOME=../jruby-truffle-gem-test-pack/gems/ jt cextc test/truffle/cexts/oily_png
```

So after replacing env vars the path is

```
../jruby-truffle-gem-test-pack/gems//gems/oily_png-1.2.0/ext/oily_png/*.c
```

Then you do `File.expand_path(src, cext_dir)`, so we end up with

```
/Users/chrisseaton/Documents/ruby/jruby/test/truffle/cexts/jruby-truffle-gem-test-pack/gems/gems/oily_png-1.2.0/ext/oily_png/*.c
```

Which is wrong. Can you try to fix or revert please?
",no
"I'm confused why this is an issue.  Isn't everything OK if it can find bzip2 _somewhere_?  Our existing packages mostly explicitly call out zlib for compression.

In any case we can't upgrade to 3.x until they put out a patch release to fix the NFS performance problem.
",no
"@tiwaana I'm a bit surprised you need to *Add* PrivateUsers.  Can you confirm if for you it works with just taking out NoNewPrivleges?

What's your distro too?  I was running on a very recent release of Ubuntu (17.04) with a recent systemd when I got no crashes from the above commit. ",no
"When making the top level API in PreferencesManager, I kind of assumed that most extensions would just be using prefs and not view state. If that's actually true, we may just want to expose the view state preferences system directly rather than exposing wrapper functions.
",no
"I was thinking about informing the user that something bad happened. For example if the file exists, but the process does not have permissions to read it, it would be silently ignored. User may then wonder why the file is getting ignored, even though it exists.

I definitely agree with adding file.canRead(), but maybe we should at least log warning if the specified file does not exist/can not be read.
",no
"It's easier to ask ""why would I want to see `$metadata$`""? I don't know if `constructor.$metadata$` is just internally accessible to this lib, or if it is noticed on objects in the application. I assumed the latter case and that's why I hid `$metadata$`.
",no
"We should stop exposing buffer class and just use array if there is no perf difference. We can make a version bump.

The reason this module exists was because upstream was unresponsive in publishing to the uuid name which I tired to get them to do over many months so at this point we can do whatever and it is fair game.
",no
"Silently changing the meaning of an event would cause very-hard-to-find bugs for clients, I wouldn't consider it a solution. We can probably rename the `did-fail-provisional-load` event to match the new event, this event is not public so the rename would be safe.
",no
"> @oni-link Could you please report the patch you'd like to be applied here?

The following patch also adds the `!exiting` check (suggested by @tarruda) to prevent a recursive call to `event_teardown()`

``` diff
diff --git a/src/nvim/msgpack_rpc/channel.c b/src/nvim/msgpack_rpc/channel.c
index 806f95d..7ae45ee 100644
--- a/src/nvim/msgpack_rpc/channel.c
+++ b/src/nvim/msgpack_rpc/channel.c
@@ -657,7 +657,10 @@ static void close_channel(Channel *channel)
 static void on_stdio_close(Event e)
 {
   decref(e.data);
-  mch_exit(0);
+
+  if (!exiting) {
+    mch_exit(0);
+  }
 }

 static void free_channel(Channel *channel)
diff --git a/src/nvim/os/event.c b/src/nvim/os/event.c
index 3456061..45ea8f2 100644
--- a/src/nvim/os/event.c
+++ b/src/nvim/os/event.c
@@ -73,6 +73,9 @@ void event_teardown(void)
     return;
   }

+  process_events_from(immediate_events);
+  process_events_from(deferred_events);
+
   channel_teardown();
   job_teardown();
   server_teardown();
```
",no
"> And why didn't you use ARCH_LITTLE_ENDIAN this time?

```
/*
 * This file is part of John the Ripper password cracker.
 *
 * It comes from OpenVMS support 2.4(jtr_vms_2-4.zip) patch
 * posted by David Jones.
 *
 * Converted to OpenVMS format module by David Jones
 *
 * Copyright (c) 2011 by David L. Jones <jonesd/at/columbus.rr.com>,
 * Copyright (c) 2012 by Dhiru Kholia <dhiru/at/openwall.com> and
 * is hereby released to the general public under the following terms:
 *    Redistribution and use in source and binary forms, with or without
 *    modifications, are permitted. */

#if FMT_EXTERNS_H
#ifdef ENDIAN_LE
extern struct fmt_main fmt_VMS;
#endif
#elif FMT_REGISTERS_H
#ifdef ENDIAN_LE
john_register_one(&fmt_VMS);
#endif
#else
```

No where in this code can you put any include.   If you add ANYTHING, it will show up in the gcc -P output.
",no
"Review by @gzm0 for fast-forward on 0.6.x.

This new release is basically required to correctly support 2.13.0 final, because of:

* not relying on `JavaConverters` anymore (0.6.27 works for 2.13.0-RC2 with a deprecation, but the deprecated thing is going to be removed for 2.13.0 final)
* the fixes for https://github.com/scala-js/scala-js/issues/3612 and https://github.com/scala-js/scala-js/issues/3622.",no
"@catwell @avichalp I haven't forgot about redis-lua but unfortunately I didn't have much time for my open source projects in the last couple of years and the fact that it's been a while since the last time I actively used lua forced me to a shift in priorities resulting in a lack of updates. I wasn't looking for new a new maintaner (at least not for now) since the library doesn't have any outstanding bug as far as I know, but I wouldn't mind contributors or collaborators for the new stuff introduced in recent versions of Redis :wink:
",no
"In this case, the people doing the releases are @tinevez and @StephanPreibisch. Also @iarganda is active doing releases. For now, it would be faster to just educate them (hi guys!) on our desired release process, than to do the eventual tooling work we want to have.
",no
"I don't object.  However you choose to do this is fine,  but I'm curious as to why you choose

```
@return {Type} Returns description of return type
```

rather than simply

```
@return {Type} description of return type
```

The latter seems simpler to me and just as clear.
",no
"loadedTable is never set to anything. The strings table is our own, so there's no point in having options here anyway. It's such a specific table that a full replacement will never make sense, while it's already exposed to casual modding.

Also, I'm genuinely curious why the previous approach resulted in several initialisations and how this one doesn't.
",no
"Regarding the code choice though, what I don't understand is the decision to generate AdvancedSearchHelper into the local app. Other choices could have been:
1. Have the AdvancedSearchHelper live in the `blacklight_advanced_search` gem; a line to `include AdvancedSearchHelper` can still be generated into local ApplicationHelper
2. Don't have an AdvancedSearchHelper at all, just generate `include BlacklightAdvancedSearch::RenderConstraintsOverride` into the ApplicationHelper in the right place (or possibly even into a controller with `helper BlacklightAdvancedSearch::RenderConstraintsOverride`.

Either of those seem simpler, and easier to maintain/debug, then generating an AdvancedSearchHelper into the local app. With regard to maintenance issues, once you've generated into the local app, it can be very difficult to _change_ the way things are done if you later realize there's a better way to do it; it usually requires local app installers to go in and make manual changes/deletions if you change your mind.

But were there problems that required generating this file into local app  instead?
",no
"Thank you for fixing the issue!!! It's good that Mockito has always recent version of Bytebuddy.

BTW. it helps us if we push code via PRs - visibility is better and release notes have good documentation instead of ""[No notable improvements](https://github.com/mockito/mockito/blob/release/2.x/doc/release-notes/official.md#289-2017-04-26)"".

Thanks :)",no
"Looking at FEATURES is strongly discouraged, esp. that I'd like to kill the damn thing in favor of normal (separate) configuration variables.

Furthermore, network access in ebuild code is forbidden. The sandboxes are there to protect people against them when possible but if you aware of such a thing, you should disable it explicitly. People don't want ebuilds eating their expensive mobile data silently.
",no
"I was just thinking I should nick various bits from picraft for this (it uses external datafiles for the block database and what-not) ... but then I went and extended the gpio-map to include multiple headers on the old model B ... ahem. Yeah, definitely getting carried away with this ...
",no
"We can also think about to move all branches in one package, like you did it in your theme.
With different folders for every gtk+3 version which we support, starting with gtk+-3.14
Not sure about we can handle the release version in this case, because it is impossible to go back to lower MATE versions.
Maybe we start with 4.0.0 .......",no
"Agree that this isn't the best. Rack::File doesn't expose their ""default content type"" unfortunately. I agree that adding a test is good practice, i'm verifying content type with an unknown file extension generates the same content type when serving gzip file and when not. We could also make a PR to Rack to expose that value in a constant.
",no
"> OK, please forgive my ignorance... but how will it only appear for 10.9 users? I see no `QSRequirements` or anything.

`QSRequirements` was added in another commit. ceb27f557eff2a694bf8545347ef921fa8266063

> Also - what if we release this (10.9 only) update, then want to make a fix for 10.7/10.8 users?

Then it would be fairly difficult, but we’ve done it before. It’s a valid concern, but I think the chances of needing to do that are pretty low at this point.
",no
"I'm happy to look into this further with someone. This ties in with me some time ago trying to come up with a way to better hide BC implementation details (mainly persistence choice), which has not resulted in any viable approach so far.",no
"thinking about this a bit more it would be a mess to keep 2 separate branches, let's move this back to 0.9.1 but i'd say we still move all the milestoned issues to 0.10 (except critical or bite sized bugfixes) and aim to do a patch release before the end of the month.

patch releases should be really small we should do them really quickly to fix problems that are relatively critical, for example when the problem with xcode 7 openssl and 0.8.4 appeared we could have done a 0.8.5 with just that fix.
",no
"I'm confused by this method name. Shouldn't this be `receiveActivityResult`? This method gets some data from an intent and does something with it, right? Share makes sense only because its meaning is actually ambiguous. If X gives a thing and Y receives a thing, it can be said that X shares with Y, or that Y shares with X.
",no
"Aside from interpersonal nonsense, it's pretty clear from the technical content of this conversation that the design of encodings is not nailed down enough to go into Base. This is not a complete design – you are still actively in the process of exploring the design. There is something very fishy about all encodings being abstract types. Whether that's right or not, however, while it's even a question, it's too early to put them into Base. It will be time when there's been a working design that everyone's happy with for at least a month.
",no
"I agree that it would be great to get across the idea that it's already exposed to Obj-C. I am concerned about being too wordy though. I hoped that having a fix-it that deletes the attribute would express the idea that the attribute isn't needed.
",no
"I would like to make sure I understand, is the following comment correct:

```
On Windows and Linux, using the flag `Qt::Tool` ensure that a window can never hide a popup. On the other hand, on MacOSX, using this flag doesn't work and we need to use the heuristic reported above.
```
",no
"No, that's deliberate.  I updated the release scripts to add that _automatically_.  It's easiest to have just a one size fits all template though, hence the other sections (and API changes, etc. are _possible_ in a patch release, just unlikely).
",no
"localization! ... I promise its better to handle localization in the first past instead in subsequent passes. This way no code is committed without localization as a principal of code review. Make it much easier to track and ensure we don't have broken Localization in the future. 
",no
"_wince_ I'm assuming you needed modify access to the buffer when you had a `const basic_streambuf` in your hands?  If so, I'd rather see the `const_cast` at the caller site to make it obvious that the one place is playing dangerous games.  I'm fond of `const` correctness, but you knew that.
",no
"You should keep the `Setup.hs` files in the repository (because these files are part of your build system and must be shipped in the release tarball), but you must not list them as a module in the Cabal file, because they are a part of the build system -- not of your software! `cabal sdist` will always package those files; you don't have to declare that they exist.
",no
This breaks the release as the version (10.6-SNAPSHOT) is not updated. I'll remove these 2 lines as it seems we don't need them. We just need to be careful from now on when copy pasting the revapi report and remove these lines before committing.,no
"Brian, I don't like the fact that here we delegate a responsibility to obtain a widget code to widget bridge code itself.

Couldn't we come up with a generalization of this solution, e.g. expose `pluginName` property in the `bridge-base`,
that will allow `bridge-base` to store widget reference without explicit need to do that programatically in specific bridge code?
",yes
"To be honest, I just missed it when I was reviewing the release notes @kasper93 had created in the first place.

I don't mean to be political hence the removal since whether we like it or not that phrase brings certain things to mind.",yes
"You need this url only to download the jar. If you use existing distribution, there are (at least) two scenarios:
- as it's written here, you can check the distribution github release page and find the artifact there. for example: [statika-distribution v0.7.0](https://github.com/ohnosequences/statika-distributions/releases/v0.7.0). you just download it and give the file to statika-cli;
- if the author of that distribution ""forgot"" to upload this artifact to github (shame on him!), you can do the following:
  
  ``` bash
  git clone https://github.com/ohnosequences/statika-distributions.git
  cd statika-distributions
  sbt console
  ```
  
  it will open scala console, where you can interact with the code. so you can use fully qualified name (see my reply on that above) to get the information:
  
  ```
  > ohnosequences.statika.distributions.AmazonLinux.metadata.artifactUrl
  s3://releases.era7.com/ohnosequences/statika-distributions_2.10/0.7.0/statika-distributions_2.10-0.7.0-fat.jar
  ```
  
  Then use this url to download the jar with aws command line tools (as described here) or just through the web interface.

Alternatively, if _you_ create the distribution, it's just like in the second case, use  `sbt console` and ask you distribution, where it's going to publish itself "")
",no
"As each user logs on, their permissions data should be converted. I'm
guessing that player permission data isn't stored in the OfflinePlayer
object with Spigot+Bungee.

On Mon, Mar 31, 2014 at 4:12 PM, mibby notifications@github.com wrote:

> That is correct. I have that set. However, when converting the file to
> UUID, it outputs 'Unable to convert user (user) to UUID-based storage', I
> presume this is outputting because Spigot is set to offline mode while
> BungeeCord is in online mode. Do I have to set spigot to online mode until
> the entire permissions is converted, before setting it back to offline
> mode? Then hopefully since UUID is parsed to each server through
> BungeeCord, newly grouped users will already have the UUID conversion?
>
> —
> Reply to this email directly or view it on GitHubhttps://github.com/PEXPlugins/PermissionsEx/commit/2bc5a0eb1a295f8674c6dd111334142f56a13117#commitcomment-5860440
> .
",no
"It does make sense: x are statuses preventing user from logging in. 1x statuses are allowing user to log in. If I'd choose to use 1 and 2 from the very start in advanced template I'd either have to refactor or write a condition like `status IN (0, 2, 3)` because 1 was already reserved for `active`.
",no
"Yeah, (1)'s good with me. Did you specifically want shared adjudicators to confirm shifts for all tournaments on the same page? Maybe the confirm shifts page shouldn't even be a tournament page at all, since it's only used in WADL?

For the records pages I'd suggest that for shared adjudicators, everything on the page should filter for just that tournament (_e.g._ debates, _etc.). Are you using records pages in WADL? How about adj feedback?
",no
"I haven't tried out this code, and I certainly don't know the code base very well, but this comment came to mind:

Instead of detecting when attempts to create a duplicate network happen, and avoiding the error, why don't we just not try to create the network in the first place if it already exists?

I think this happens because create_networks.rb isn't thread safe. Maybe adding a lock between checking which networks exist, and creating one should be added instead?

Here's one example of this technique:

https://github.com/mitchellh/vagrant/commit/f89c4412b2ccc1716e0073d2a12572a5ce0ad402

HTH

James
",yes
"No! If this assert does not hold true that is a programmer error and due to this assertion we show this to the programmer because that is a flaw! We can't just do it right for the programmer _nondeterministically_.

> Errors should never pass silently.

From https://www.python.org/dev/peps/pep-0020/
",no
"It's a bit roundabout.  I needed the method to implement one of the ivar accesses.  Since there's no corresponding public method I couldn't delegate to one of those and since I needed access to an internal data structure, I couldn't write it in Ruby.  The hoops involved are a bit nuts.

Settling in on a convention would be good.  I made the method private, but also added the rubinius prefix so anyone inspecting private methods would know where it came from.  It seems like it'd be less likely to conflict with a user-defined method, as well.
",no
"Why on earth are you adding another template name? It just makes things confusing and there is zero need for this.

Also _please_ separate actions into individual commits, it's very hard to keep track of when a commit touches more than one logical unit. (this includes styling changes)
",no
"Not quite sure I follow. But there are two questions here: 
1. Logical model: a Resource lock has a one-to-one relationship with a FormClass, not a Resource/FormInstance. Think of the case of creating a new resource: the resource doesn't exist yet, but a lock still applies because of the resource's membership to a FormClass.
1. Implementation: how the ResourceLocks are stored, queried, transmitted across the wire, etc. I think it makes sense to include the ResourceLocks collection in the FormClass payload because its' really always required: when displaying data we need to show which instances are locked, and resource locks are required when validating new submissions.

What I would suggest as a first step is to not change much on the storage implementation to start: we don't yet need more flexible ResourceLocks. GetFormClassHandler can read the serialized FormClass from the database as normal and then query the LockedPeriods table to add the additional ResourceLocks property and send the whole thing over the wire.

If you think it would simplify the implementation to add a seperate queryLocks method, that's fine, but the argument should `formClassId` because you're querying for the `ResourceLock`s associated with a FormClass, not an individual resource.
",no
"Not for anything we've thought of implementing. Usually objects are abstracted and accessed via a class, or treated as raw data, but not both at once.

If we find we really need that in the future we can change the interface pretty easily, since there aren't a ton of callers.

From: fullerdj notifications@github.com
Sent: Apr 16, 2015 4:51 PM
To: fullerdj/ceph-client
Cc: Josh Durgin
Subject: Re: [ceph-client] Added interface to chain OSD op calls (58c8c95)

> Ok, and it's safe to assume we never will? If that's the case, I'll just make that the behavior for all op calls.
>
> > On Apr 16, 2015, at 7:43 PM, Josh Durgin notifications@github.com wrote:
> >
> > I like this approach in general. I'd suggest not tracking a range of chained requests, and just making that a property of the whole ceph_osd_request rather than each op.
> >
> > I can't think of any cases where we'd mix class reads and non-class ops right now.
> >
> > —
> > Reply to this email directly or view it on GitHub.
>
> —
> Reply to this email directly or view it on GitHub.
",no
"> Question: are we open to hosting airspace files ourselves, given that we get permission to do so?

I guess we could do that, yes. we mainly opted to not do it, because for some files we don't have the explicit permission to redistribute them.",no
"I'd rephrase like this:

> We have to wait for the stable release of Node before the new driver can become mainstream. In the meantime, you can build Nodejs 0.11.10 from source to get support for generators.
- You say ""some symbols are missing..."" I'm not sure which ones and what that means.

I'd also add a note about the future of rethinkdash. Say that after people use it for a bit and it's better tested it will become the official driver.
",no
"I know Hunter... :-( 
I only noticed the size of the files after accepting the PR, so the ""harm"" is already done and cannot be fixed because the commits are part of any repository clone, but as a mean to cut a bit the size of each release download (and .deb pkgs, etc.) the author @bergercookie  was already [notified](https://github.com/MRPT/GSoC2016-discussions/issues/2#issuecomment-240877292) about the need to replace those datasets with much smaller versions... 
",no
"why not just sign your release tags?
https://help.github.com/articles/signing-commits-using-gpg/

also seems the email you create commits with is not associated in github
https://help.github.com/articles/adding-an-email-address-to-your-github-account/
and thus your github actions done with gmail address:
https://github.com/pld-linux/checksec/commit/806d030eb24e57e4d4211efaa4d9c528c9caf0bd.patch
",no
"``` csh
==> 1 page written on `rawmask.pdf'.
!!   Cannot access idata6
!    Please give a new value for parameter IN
!
IN - NDF in which values are to be flagged bad /@tot/ > !
!! A null group of NDFs was given for parameter IN.
!  Application exit status PAR__NULL, Null parameter value
!  idata6 rawmask -1
PDFCROP 1.38, 2012/11/02 - Copyright (c) 2002-2012 by Heiko Oberdiek.
==> 1 page written on `cleaned.pdf'.
dhcp122:fellwalker timj$ ls *.sdf
diffwalk.sdf idata1.sdf   idata4.sdf   lutndf.sdf   noise.sdf    rawmask.sdf  sp25.sdf     tot.sdf      walk630.sdf
fred.sdf     idata2.sdf   idata5.sdf   mask.sdf     peak2.sdf    sp15.sdf     spikes.sdf   walk627.sdf
```
",no
"Do separate commits in the future - one that fixes a problem like escaping, one for fixing image bugs, and then one (as a temporary release branch) that handles bumping version numbers, updating readmes and changelogs etc.

If using SourceTree, then click the Git-Flow button. First time it will ask (and then set setup) the default branches, including checkout the develop branch. Then, when ready for release, you can select it again, choose Rrelease (to create the release branch), update version numbers and other fluff that only changes when a new release is about to be made, and then select that button again to finish the release. This will merge the release branch into develop, merge the release branch into master, create a tag from master, and push develop, master and the tag up to GH, and then delete the release branch.
",no
"this method prevents rails apps from booting without a database - including when the database is being created. `columns_hash` causes AR to query the DB, which doesn't exist, so everything fails. This is also the reason you had to make a subsequent commit to bootstrap the DB before creating classes in the tests. Please revert this, it's a serious regression.
",no
"embedtls doesn't support 0.3 so that's a somewhat good reason (I will have a poke and see if support is non-trivial).

I can't help but feel that it's somewhat ""reckless"" dropping support for 0.3 so immediately (or not even) after release of 0.4. .... several others have said they'd be doing the same for their packages.

Considering the care gone to in python packages to support python 2 and 3, and considering how good julia's Compat module is, I'm of the opinion that dropping support should be done only with great reluctance.
",no
"hi greenplastic,
here are the reasons i dont want to include this code in a general fullcalendar release quite yet
- i don't see how `startMonthDate` would be useful at all. can you give me a usecase?
- for `showMonthNumFirstDay`, i would prefer to have a more general/flexible way of doing this that would lend itself to other situations. instead of that option, i was thinking more along the lines of a `dayFormat` option (similar to `timeFormat`, `columnFormat`, etc) that would specify how the day # text would look. i know currently the [formatDate](http://arshaw.com/fullcalendar/docs/utilities/formatDate/) format wouldn't allow for only including the month # on the first day of the month, but imagine if we made `dayFormat` (and any of the other *Format options) accept a function that returned a string. such as...

  ```
  $('#calendar').fullCalendar({
      dayFormat: function(dayDate) {
          var d = dayDate.getDate();
          if (d == 1) {
              return (d.getMonth()+1) + '/' + d;
          }
          return d;
      }
  });
  ```

if you were to implement this `dayFormat` option, as well as letting the ""format"" options (`timeFormat`, `columnFormat`, `titleFormat`) accept functions that return text, that would be a welcome addition to fullcalendar.
",no
"1. I think we should trash it
2. I wanna add this later in another commit to prevent having too much `new` things introduced with this commit so it would be hard to track test failures etc. 
3. I need to put some thoughts into it here since this method can only return FSDirectory

what do you think?
",no
"@awead Once I grokked the intent of the code, I kinda stopped caring about the double iteration.  I deleted my comment about it, but maybe I should have communicated that more clearly.  That said, this makes sense to me as long as you can envision another impl passing in that second arg. Otherwise, adding the second arg as a performance improvement may not be worth having in the public API. I'm fine with this as it is, to be clear -- and thanks for working through this.
",no
"The release for today is on hold until Igor gets into the office as there
is a regression on master.  But we might miss it.

On 3 April 2014 20:32, Pete Bacon Darwin pete@bacondarwin.com wrote:

> No problem.  Keep going
> 
> On 3 April 2014 20:32, Luis Ramón López notifications@github.com wrote:
> 
> > I took away that default initialization from ngModelController some
> > hours ago. If you think is a good thing, I can keep it, include updateOnDefault:
> > true there and simplify the condition.
> > ## 
> > 
> > Reply to this email directly or view it on GitHubhttps://github.com/lrlopez/angular.js/commit/a6331440945fa38ea218e7b41e1d6af6d7818841#commitcomment-5900422
> > .
",yes
"I tried looking for you and it showed 2 different people with that same email address and when I went to start a conversation with them it said neither had Google Hangouts. :\

My email is csimmonswork@gmail.com <- always on Hangouts
",yes
"> I guess manipulating history is OK as long as you are the only one who use the puplic feature branch.

Yes, of course, but IMHO topic branches until they are ready for the pull request are just for your personal use and for others just to comment on them.

> OK this is a trick, to keep the branch at GitLab uniform while manipulate history only on github. I haven't seen such a trick before ;-)

No, I have plenty of branches on GitLab as well, which are not ready for merge.",no
"@camilonova This should have been a feature release (1.2.0 ) since the custom fields feature was added. Please make sure to follow the [release version guidelines](https://jazzband.co/about/releases#versions-and-code-names) the next time. Thanks!
",no
"I'm actually tempted to go a bit further. Perhaps the catch, handle, and try should be wrappers around catchAny, or maybe even catchAnyDeep. This requires a bit more thought, and I'd like to have the conversation about it (would you mind starting an issue? I'm on a tablet right now). I wanted to take this as a first step since that next change is more controversial and breaks backwards compatibility.
",no
"We could add it to the help info somewhere, I guess?

-Samuel E. Giddins

On Mar 7, 2015, at 8:16 AM, Orta notifications@github.com wrote:

Is there a way we can expose this into the documentation/help somewhere?

—
Reply to this email directly or view it on GitHub.
",yes
"Not sure if I get what you mean...

there are N crypters, thus modifying shared data is protected by the thread_lock (see 321). There is only 1 writer though, so all calls to misc borg code are just done from 1 thread.

if you find some specifically problematic parts of the code, just directly put a comment there, saying why they are problematic.

agreed that multithreaded code is more scary, I had quite some race conditions to solve until it did not blow up any more.
some are maybe even still there, see the RemoteArchiver tests.
",no
"Also the release notes for scipy 0.17 say:

```
Element-wise multiplication of sparse matrices now returns a sparse result in all cases. Previously, multiplying a sparse matrix with a dense matrix or array would return a dense matrix.
```

My tests have it return a dense matrix (of the numpy `matrix` class) under 0.11.
",no
"It's also possible that if the user is authenticated, groups that are private but `joinable === 'yes'` or `joinable === 'request'` are safe to show their profile picture. I don't see why `joinable === 'yes'` would really need its thumbnail concealed in this scenario.
",no
"These can all be done with Arel now to ensure we generate the Arel code, and then just leave a to_sql at the end for the hack.  That way we can easily move in the right direction, and you can also mark the .to_sql line as the HACK with a comment and not the whole thing.

For example:

``` ruby
clause = arel_table[:systemd_active].eq('failed').or(arel_table[:systemd_sub].eq('failed'))
clause.to_sql # HACK: UI get_view can't do arel relations, so I need to expose conditions
```
",no
"A quick google search shows this example used by other tutorials.  But you: 1. don't have licensing permission to use them; and 2. have not even cited them anywhere.  That makes this content illegal (from a licensing perspective) and plagiarism (from an academic perspective).

I will assume you made the mistake in good faith, however, and not forward this to the academic conduct committee.
",yes
"@Glowbal. I guess you want to track which ai units have devices to display them on the bft, right? Some quick comment about take/put eh for that: 
- Both of those trigger every time a unit reloads (by far the most common ocurrence), thus doubling the cost of the function.
- I think neither of those trigger if you add the item through scripting (e.g., postinit box of the editor). That could be problematic for editors. They may need to call fnc_validateInventory manually, or create an api function called ACE_XXX_addDevice
",no
"Ok, I've tracked down the issue, but I don't yet understand it. Poking at it now.

If a static libcrypto is used for the shared lib, all works fine. If a dynamic libcrypto is used for libbitcoinconsensus, I can reproduce your error. I also see it with my native c++ app. And it only applies to OSX.

For the time being, you can use the official deterministic osx dylib for your project. It works fine, was built with gitian, and can be trusted to be untampered-with: https://bitcoin.org/bin/bitcoin-core-0.11.0/bitcoin-0.11.0-osx64.tar.gz

The callbacks are not needed.
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 25](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=853&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: MSTest runner exits with not zero code. (new) Build time: 00:11:54
",no
"No (it's gced together with the parent DomTree) and the way how the cache is used currently is wrong and must be refactored (e.g. there should be just one cache shared across various UI components).

Do you see any specific and related issue?

Honza
",yes
"Oops, sorry for the late reply, I force pushed my branch and the comment doesn't show up. I made a [PR](https://github.com/twbs/bootstrap/pull/28014) so that we can track things.

Yes, you are right, about the structure. We basically just output the homepage to the root, and then the versioned docs along with a few redirects.

I will try your suggestion, thanks a lot!",no
"On Sun, Mar 23, 2014 at 6:28 PM, Xiangrui Meng notifications@github.comwrote:

> A released version of breeze. @dlwh, a minor release of breeze will help
> this PR get merged early. Do you mind sharing breeze's release plan? Thanks!

I just cut 0.8 that should have all improvements.
",yes
"Yet at 800 lines cWorld is a giant and already unreadable. At least with managers it would be easier to find functions.  If one superclass is enough why not stick everything in cRoot? As for the plugins I didn't see that this hasn't been exposed yet.
",no
"Also, you don't currently modify the flux of the non-chromatic parametric galaxies to match 2000s, so they still seem to have the flux set for 1s exposure time.  

I'm not completely sure about the zeropoint (since I've never in my life _really_ understood zeropoints), but I think what you did there was to get the correct zeropoint for the 1s exposure time (whereas before the zeropoint was incorrectly set to be appropriate to a 2000 second exposure).  So I think the only bit that I disagree with is this line.  I don't think we want any flux rescaling here.  Then all 3 return possibilities (real, parametric, chromatic parametric) will have accurate fluxes appropriate for a 1 second exposure time.
",no
Does this work with back-to-back transfers (100 percent data bus utilization)? minicon doesn't do them but a more sophisticated sdram controller might. In that case the preamble/postamble are shared for the consecutive transactions. See ddr sdram specs.,no
"A user who is configured in an external service like LDAP or Okta. In that case, Kill Bill doesn't control passwords nor roles, so we need to hide part of the form (we just need to add a record for that user in the Kaui database, the rest is passed-through on the Kill Bill side).",no
"I think elsewhere we've taken the approach of introducing a new `precalculate` block to ensure that a particular ""variable"" is available in the template. While the use of `defined?` seems ok, I think it is inconsistent with what we've done elsewhere. Also I think there might be some benefit to the `precalculate` blocks for an outcome being an explicit list of all the ""variables"" that the template needs.
",no
"While that is a very interesting way of doing it, I see a couple issues:
- you could just use code-folding to hide all the comments if you don't want to see them
- when I'm looking for docs on the function I'm looking at, I expect to be able to see them directly above the function, not in the middle of an essay at the end of the file.
- reading an essay is much harder than scanning a list of JS Doc tags
- if code is clear enough to not need inline comments, it _really_ shouldn't need an essay
",no
"I'd like to keep the test runner quiet by default, the expected behavior is for all tests to run, in which case we don't need to print out all that stuff. We can add an env var to tests/Makefile.am which is passed to these tests so there is more output on wrench.
",no
"Using the last release commit to ping you @manolo as you seem to have been the latest active maintainer.

Are you aware that the plugin has recently marked as _up for adoption_ on your wiki page? Do you confirm you won't be able to work on that plugin anymore? I'm pinging you since the history comment for that doesn't give much information and does not seem to have posted by you.

Thanks
",no
"Hello @vicentedealencar. This gif shows [this](https://github.com/medialab/sandcrawler-dashboard) dashboard. It's used to monitor spiders from [this](http://medialab.github.io/sandcrawler/) library I did not have time to release yet. You can find the react sources [here](https://github.com/medialab/sandcrawler-dashboard/tree/react) however I have not completely finished to port the dasboard from my old code so the top right section is currently absent.
",no
So queue up messages for an object that may or may not be started at some unknown time in the future? Seems a bit strange. If anything I'd make the publish block until the target existed. Even that seems like a change from what most people would fine reasonable. I would hope that the server could be called directly with a publish and it would act the same as Rack.publish would be the Rack call would use a default server.,no
"next() and iter() should generate explicit exception when applied to async function, not generator object.
Hmm. We need to add 'async object' to our glossary: generator function produces generator, async function produces async object (or choose another name, glad to your mind).
",no
"@rogeriopradoj https://github.com/php/web-php/blob/master/error.php#L142
If the file does not exist on the server, then a check of the release history can be done (https://github.com/php/web-php/blob/master/include/releases.inc) and if ""museum"" is true, then replace the mirror listing with the museum link (for /from/a/mirror urls), or redirected (for /from/museum.php.net/mirror url)
",no
"Personally I don't want those patches in for the reasons I explained before.

Either we postpone the stable for like one more week if you really think the patches are worth or they don’t get merged if I'm going to release the stable tomorrow.

Also everyone should be on irc even if they are not active. We need to be able to communicate directly.

Anyway cc me about what we are going to do.
",no
"I'm sorry I don't have access to the Windows box I used this morning anymore for the day.
The tests failling are those in sandbox-performance, you should be able to find more details on the Jenkins emails you've received (you were in CC as well as far as I could see, but I deleted the emails too).

I have no strong feelings on where this needs to be stored, do you really feel strongly about it?

I'm way more concerned about us now delaying a fix which I consider valid. Also I think we lost plenty of time on similar issues in the past.. are we going to keep banging our head against it to proof we're able to store temporary files where Maven doesn't want us to store things? What's the point, I am damn sure that you'll be able to do it if you put your focus on it, but I think your time is better spent on other issues.
",no
"I don't think this is related this is related to having no features, but it would look like if the table was non spatial. If you open a ticket, please provide a minimum mapfile to reproduce, a test database and the exact request sent.
",no
"Only concern that I have is that, the inAppBrowser webview should not have access to the cookies from the Main Cordova webView. This will brake the security separation that we want to keep with inAppBrowser.

So the use case here is that the webview in AppBrowser will do some type of login and the server will set a session id or token id valid to allow app to authenticate. and you want a way to retrieving this cookies from your main js in the Main Cordova App. So when you listen that inAppBrowser is done login the user, you can go an run getCookies and then Cookies are available for any http request that wants to send the cookies to the server.

What would be the use case for sharing the cookies from the main cordova webview to the inappbrowser webview?
Can we just cover the feature with one API ""getCookies""?
",no
"@Vultraz - how about a compromise? Remove the `erase` call and leave it around as a hidden preference. (I guess you can leavr it in for an RC or two if you want to ensure it gets reset, though most people's preferences will be reset anyway when they start 1.14.)",no
"One reported build issue is sufficient reason to drop a patch set that is used (without problem) by others? Blimey!

So what are your plans for future RPi support - grab the Pi backport patches just before each new release build and hope they work (then delete them afterwards)? You might as well drop the RPi linux patches too, and apply the same build logic - no reason to keep them up to date between releases.
",no
"Try the following:
- From within Word (File tab -> Open), open the Zotero.dotm template
- Press Alt-F11 to open the VBA editor
- In the Project pane (top left), double-click the Zotero module within the Zotero project
- Choose Compile Project from the Debug menu

Does this give you an error message?
",no
"before any data will be commited to database, or what is the sence to use it if not rollback data? or i missed something? Not sure also how `unload` should be done in active fixtures and other fixtures since we can not simply bypass it, but unneeded `DELETE` also is not good, but it will not take too much time since there is no data in table, because it was rollbacked.
",no
"It's not unrelated as it prevents duplicate code and just exposes it for
use. However I can see it makes sense to revisit this after the
stream_response PR has made it in - there may be a better way to deal with
this situation / mark the streaming/chunks as finished - so I will remove
chunked_end.

On 26 April 2013 17:05, Loïc Hoguin notifications@github.com wrote:

> That's unrelated to the PR at hand. I can't know whether that would be a
> good thing to have without thinking about it, which could take some time.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/fishcakez/cowboy/commit/423eec930653b8e024e5f455120366eb46c7cff1#commitcomment-3096249
> .
",yes
"Just another note: the amount can be passed in as a number without regard to the format. This library then formats it according to the currency before sending it off to SagePay. The idea is to put as few restrictions and rules on data coming into the library as is reasonable, when the library can handle the vagaries of the SagePay API. Ultimately I just want it to work as as wide a range of data as possible. The validation classes are great to detect problems with the data before it is posted to SagePay. I wonder also if a ""fixit"" class would be useful to make some simple transforms to get the data more into shape without having to bother the application with it. Data validation and data fixing are two separate things, both of use in different circumstances, so fixing should not impact the validation rules code in any way.
",no
"sorry, I've messed up the release (lost my release-todo file).
I've also yet to bump the version number in alot.

P

Quoting Lucas Hoffmann (2018-02-21 20:37:20)
> @pazz: this commit is not in master yet! Is that intentional?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.*
> 
",yes
"And one other thing. Exposing 'producerQueue' to the outside world, breaks encapsulation and exposes this component to a variety of loopholes. Even if its 'protected' it means that my extension can access it and do something with it (e.g., drain it while the parent component is in the middle of some logic that expects it to be not empty). I see that you did it to help with some testing, but that is not the correct motivation for breaking encapsulation. Reflection is perfectly fine to be applied here to access its value if necessary. 
",no
":-1: to version pinning.  This would unnecessarily make this thing not work/build outside of a venv on Fedora 20.

```
~❯ pkgwat releases python-markupsafe
+---------------+----------------+-----------------+
| release       | stable_version | testing_version |
+---------------+----------------+-----------------+
| Rawhide       | 0.23-6.fc22    | None            |
| Fedora 22     | 0.23-6.fc22    | None            |
| Fedora 21     | 0.23-6.fc21    | None            |
| Fedora 20     | 0.18-1.fc20    | None            |
| Fedora EPEL 7 | None           | None            |
| Fedora EPEL 6 | None           | None            |
| Fedora EPEL 5 | 0.9.2-3.el5    | None            |
+---------------+----------------+-----------------+
```

```
~❯ pkgwat releases python-mako   
+---------------+----------------+-----------------+
| release       | stable_version | testing_version |
+---------------+----------------+-----------------+
| Rawhide       | 1.0.1-1.fc22   | None            |
| Fedora 22     | 1.0.1-1.fc22   | None            |
| Fedora 21     | 1.0.0-1.fc21   | None            |
| Fedora 20     | 1.0.0-1.fc20   | None            |
| Fedora EPEL 7 | None           | None            |
| Fedora EPEL 6 | None           | None            |
| Fedora EPEL 5 | 0.3.4-1.el5    | None            |
+---------------+----------------+-----------------+
```

I'd be fine merging it if you just removed the unnecessary version constraints (just use the package names unless you **know** we **need** a certain version of this or that).
",no
"In this case the main goal is to emphasize what we really need and hide details that don't matter. We're testing `userId` here, so `seriesId` is just because we should supply some value to the method, we aren't testing `seriesId` here.
",no
"So in most circumstances when CouchPotato has snatched the release and sent this to the downloader with the .cp(ttxxxxx) imdb id, we can just get the imdb id direct from that. We use this to check the download id in CouchPotato's snatched list (Or for NZBget where we have the download id already) the script should be able to match the download ID with the CouchPotato snatched list to ensure this is correctly renamed.

There were occassions in the past where CP would snatch 1 movie, but when CP was asked to rename the downloaded movie, it incorrectly identified it as another.

So by doing this, we can determine if in-fact the movie is showing as snatched in CP, and verify that the correct movie is renamed. (and verify that the status has changed in CP)

The problem here was that when omdb api ceased (temporarily), this hung the script... but no more.

Worst case scenario now, if imdb look-up fails, and no download id, then we still just pass to CouchPotato to rename, but there is a slight chance of incorrect identification, or failing to verify if the renamer event is complete...

Short version... imdb look-up = redundancy = less chance of things getting messed up.",no
"I would explicitly comment that a primary use case is customization of different servers based on deployment tools like puppet/chef, so you can push server-specific configuration outside of a database (which may be replicated) and the code (which may be shared).
",no
"The notification objects passed to the notification methods should provide methods that provide for common formatting needs like this, so it sounds like we may need to expose some more methods there.  We're trying to get to a point where there's no advantage to subclassing one of our base classes and instead the notification objects provide all the functionality you need.  Sounds like Fivemat would be a good case study to verify we've accomplished that goal.
",no
"This package is no longer available at the PKG_URL - http://www.imagemagick.org/download/releases

6.9.6-7 is available. 

It looks like the PKG_URL only has the latest release versions, and is not a complete archive of all releases. Is there a site with _all_ releases available?",no
"@Underground78: unfortunately for some weird reason, MpaDecFilter compilation fails for Release x64 after switching to the non prefixed alloc functions in `mem.c`. Every other config seems to compile fine. I guess I'll revert that part.

```
Error   16  error LNK2019: unresolved external symbol __imp__aligned_malloc referenced in function av_malloc    H:\progs\Compiling\mpc-hc_dev\src\filters\transform\MpaDecFilter\ffmpeg.lib(mem.o)  MpaDecFilter
Error   17  error LNK2019: unresolved external symbol __imp__aligned_realloc referenced in function av_realloc  H:\progs\Compiling\mpc-hc_dev\src\filters\transform\MpaDecFilter\ffmpeg.lib(mem.o)  MpaDecFilter
Error   18  error LNK2019: unresolved external symbol __imp__aligned_free referenced in function av_realloc_f   H:\progs\Compiling\mpc-hc_dev\src\filters\transform\MpaDecFilter\ffmpeg.lib(mem.o)  MpaDecFilter
Error   19  error LNK1120: 3 unresolved externals   H:\progs\Compiling\mpc-hc_dev\bin\Filters_x64\MpaDecFilter.ax   MpaDecFilter
```
",no
"Fedor, I'm not sure I understand the point of this commit; node_internals.h is an internal header, it's not exposed to users.  The #include in node.h doesn't count because that's conditional on an #ifdef NODE_WANT_INTERNALS guard that's only set when building node.
",yes
"> But how do you _find_ these things?

Well, there was a bug report this morning where @hinerm figured out that having the TrackMate-dev and Bio-Formats update sites enabled at the same time didn't work. He isolated the issue to an `ome-xml.jar` present on the TrackMate-dev update site. And I thought to myself: ""That's weird, I thought I had covered all Fiji components that use Bio-Formats, updating them to BF5.1 already. And I didn't know that TrackMate used Bio-Formats!"" So then I started digging in the code.

I first checked the POM, and saw that there was an `ome:ome-xml` dependency. So then I did `git grep 'import ome'` and found the sole place it was actually being ""used""... and noticed that the usage was solely in the Javadoc! After that, the fix was easy: did the patch above, then ran a full build to make sure everything was still happy.

For good measure, I also did `git grep 'import loci'` but found no hits. And then I ran `mvn dependency:analyze`—a _very_ useful tool—to DOUBLE check that there were no other unused declared dependencies. (It found one false positive—`j3d-core-utils`—which when removed actually breaks the build. The `analyze` mojo is usually really spot-on—it was maybe just confused by the `provided` scope; I'm not sure.)

So anyway, I _think_ all references to Bio-Formats have been purged from TrackMate now. I see that the `TrackMate-dev-update-site` Jenkins job did run again, and Mark & I were hopeful that this would cause `ome-xml` to no longer be shadowed on the TrackMate-dev update site, but alas, it seems that TrackMate-dev still ships a complete overridden Bio-Formats. Strange, since `mvn dependency:tree | grep -C 5 'ome:'` returns nothing, meaning the Bio-Formats is not present _at all_ in TrackMate's dependency hierarchy.

I guess it's probably the case that the Jenkins job is not clearing out the old workspace, or not doing an `update-force-pristine` using the Updater, or... something similar. But we don't have time to investigate further. Right now, we have three ""dev""-style update sites which all work differently (`bin/upload-plugins-by-gav.sh` for SCIFIO-dev, `bin/upload-plugin-from-maven.sh` for TrackMate-dev, and `bin/upload-update-site.sh` for Bio-Formats). We really should unify them, to ease future maintenance and troubleshooting. But no time this month...
",yes
"Ok, super. 18.7.4 is a nice and quiet spot to land this.  Thanks for your work!\\> On 22. Sep 2018, at 16:51, Fabian Franz BSc <notifications@github.com> wrote:\> \> @fichtner looks like it is everything.\> \> -\> You are receiving this because yo",yes
"Sorry, just saw this comment (edits don't trigger a new email notification):

> How are we keeping track of that for release notes both for `0.18.4` and `0.20.0` ?

`kpm migrations` should pickup the migration file, regardless of the release version.",no
"Ah, I must have miscommunicated something: I don't think we want to expose any spark details on API level like this -- otherwise we end up with a gazillion of attributes, each only valid for a specific configuration or resource...  Instead, the URL could be _part of_ the `resource_detail`, which is a free-form string.

Thanks, Andre.
",yes
"Not sure if its wise to trust the PPA infrastructure.
IMO there are only two safe ways:
-> download git source from github, use `contrib/verify-commits/verify-commits.sh`, compile and use
-> download the ""official binaries"" and verify against the gitian sigs reporistory (https://bitcointalk.org/index.php?topic=1588906.0)
",no
"So, we can be sure it has been fixed in 119, right? If that is the case, we
can remove these bits from the validation file (just before 1.19 gets
released). Up to know it is still an issue with 1.17.2 and 1.18.
Our release cycle should become shorter...
Gratien

On Mon, Aug 22, 2016 at 10:39 AM, Johannes Meixner <notifications@github.com

> wrote:
>
> Regarding
>
> grub_prefix=/boot/grub2
> grub_prefix=/boot/$grub_name
>
> versus
>
> grub_prefix=/grub2
> grub_prefix=/$grub_name
>
> see
> # 946 https://github.com/rear/rear/issues/946
>
> If you have /boot as separate mountpoint ... uses / as prefix.
> If you don't have /boot separated (part of root (/)) ... prefixed with /boot.
>
> and the resulting
> # 948 https://github.com/rear/rear/pull/948
>
> I think same logic as in current GitHub master code in
> usr/share/rear/output/default/94_grub2_rescue.sh
> is probably also needed in
> usr/share/rear/finalize/Linux-i386/22_install_grub2.sh
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> https://github.com/rear/rear/commit/5c0de3be452ef6de7c11de60cd1a43da9226357d#commitcomment-18721019,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/AA2POQ4h89NswjwaNWZ_8jtLA2764tfKks5qiWBGgaJpZM4JpoO2
> .
",yes
"The 0.7 release notes mention [issues with `toTask`](https://github.com/scalaz/scalaz-stream/wiki/0.7#compatibility) and recommend using `step` instead. I didn't look into details yet but what was the reason why you didn't follow the recommendation?
",no
"Could you silence or fix these warnings when running the tests with `-Wall`?

```
/home/tim/code/django/tests/multiple_database/tests.py:1027: PendingDeprecationWarning: Router.allow_syncdb has been deprecated and will stop working in Django 1.9.Rename the method to allow_migrate.
  self.assertFalse(router.allow_migrate('default', User))
/home/tim/code/django/tests/multiple_database/tests.py:1028: PendingDeprecationWarning: Router.allow_syncdb has been deprecated and will stop working in Django 1.9.Rename the method to allow_migrate.
  self.assertTrue(router.allow_migrate('default', Book))
```
",no
"I have quite a few packages published and only got one complaint. When I asked for more details to be able to reproduce I didn't get them. Therefore I's say there were none.

I became aware of the advantage of comitting `pubspec.lock` because the Angular.dart (1) project also committed the `pubspec.lock` for the same reason, and I never heard of or experienced any related problems.

Therefore I just assume this doesn't cause any issues and is a good idea.
",no
"I'm +1 because this is a good cautious amendment to 2bfa57aed652dca77f63a670fe3ae4f016a2fd9b. But I'd be interested in adding some stronger database constraints in spree. Is there a known issue with this? I wouldn't think price should ever be null (only 0.0).
",no
"Did you comment these out with a plan to use conda fontconfig?  I made a patched version to fix those font family errors, but as we don't want custom conda packages I think it will need to get built here again (but I didn't see fontconfig in pkgs.conda either, so I don't know what the plan was).
",no
"I agree, this module should expect data already the right structure. Keeping validation in here still seems like a good defensive move to make sure we end up with valid data in the database.

Perhaps I'll stick a mention about `parse-coordinates` in the docs in case people want to use in related code as part of the translation to the expected format here.

Thanks for your contributions!
",no
"Overall, your content great!  You chose great examples to illustrate your points.  I also like that you added the pictures for the rebasing!  In addition to my comments above, there's one last content issue I have: please divide up this file into three separate files: one file for patches, one file for rebasing, and one file for stashing.  The three files should be completely independent of each other.  Do that and you will get full credit on the content portion of the assignment (50/50).

Your writing stills needs some improvements though.  There's just lots of spelling and grammar mistakes that need fixing.  I recommend asking another cs100 student to go through your writeup with you and correct the mistakes.  If you don't fix the mistakes, I unfortunately can't give you any points on the style section of the writeup, but if you do fix them you'll get full credit on the assignment.

Please let me know if you have any questions about my comments.
",yes
"for this usecase

2015-03-02 16:55 GMT+01:00 Lasse Schuirmann lasse.schuirmann@gmail.com:

> ah no, we have no thing. Interactors are accessed often. There is only one
> chance the user can set interactors and loggers and thats via coafiles or
> CLI args which happens at the beginning of the program. So a dynamic update
> isn't needed at all.
> 
> 2015-03-02 16:54 GMT+01:00 Makman2 notifications@github.com:
> 
> > Okay just wanted to ask, I thought maybe you have a lazy updating
> > mechanism like we have in CE3D, so when accessing interactor it get's
> > updated.
> > ## 
> > 
> > Reply to this email directly or view it on GitHub
> > https://github.com/coala-analyzer/coala/commit/8e44e5a3a3df04e788a5b426ede5984322acab70#commitcomment-9988090
> > .
",yes
"Ok, let me know. FWIW, the results I got above were with IE11/Win8.1.

Helpful tip for debugging this in IE: open spec/index.html and comment out or delete all but the first 4 or 5 imports. Just be sure to include a clause that has sub-clauses.
",no
"Also, one point, I do admire RubyGems versioning. If people can't afford to upgrade, nothing is stopping them from using whatever point in time release they were last using. I strongly believe in versioning and using it as a tool to empower breaking changes which ultimately lead to better software, which is the underlying principle of http://teapot.nz/welcome/index and has worked incredibly well in several commercial projects so far.
",no
"I'm not so sure about this change.  The plan has always been to replace our fake scrolling with OS-native behavior as soon as we migrate properly to SDL2 (SDL 1.2 doesn't expose the events we need).  This migration will hopefully be in the very near future.
",no
"I also tested it. I don't think we need to do anything further as this patch just expose an interface that was already used before. I got a report that it improved the throughput from 200 MB/s to 1.2 GB/s for an
encrypted zfs dataset.",no
"Actually, I meant it to be `zfs_arc_sys_free` and missed updating this.  I suppose we could use the same tunable for this but keeping them separate is probably best.

`zfs_arc_lotsfree_percent` controls when the throttle kicks in due to memory pressure.
`zfs_arc_sys_free` control is supposed to analogous to `lotsfree` which is the VM scan pageout threshold.
",no
"context:

```
let a = {
  @attr foo,
  @enumerable(false) bar: 1,
  @attr foo() {

   }
}
```

The top two have ""right hand side"" side affects, when a decorator is present it can choose to evaluate the side affect or not. For example, in the first scenario `@attr foo`, the `@attr` decorator will likely choose to just disregard the right hand side, but the second scenario `@enumerable(false) bar: 1` must likely will choose to evaluate it.

When it comes to the final scenario, no potential side-affect exists. So the initializer doesn't serve purpose.

Even with this context, it does seem somewhat strange to make this change, as by definition final scenarios initializer doesn't have any side affects.
",no
"The problem is there seem to be nasty header bugs and they happen to go away with `-DCL_SILENCE_DEPRECATION`. If we don't silence it, we don't get OpenCL at all.

Here's an example of output without it:
```
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h:1207:1: error: storage class specified for parameter 'clGetExtensionFunctionAddress'
 clGetExtensionFunctionAddress(const char * /* func_name */) CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED;
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
conftest.c:62:1: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
 {
 ^
In file included from conftest.c:56:
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h:571:1: error: old-style parameter declarations in prototyped function definition
 clGetPlatformIDs(cl_uint          /* num_entries */,
 ^~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h:571:18: error: parameter name omitted
 clGetPlatformIDs(cl_uint          /* num_entries */,
                  ^~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h:572:18: error: parameter name omitted
                  cl_platform_id * /* platforms */,
                  ^~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenCL.framework/Headers/cl.h:573:18: error: parameter name omitted
                  cl_uint *        /* num_platforms */) CL_API_SUFFIX__VERSION_1_0 CL_DEPRECATED(10.6, 10.14);
                  ^~~~~~~~~
conftest.c:66: error: expected '{' at end of input
```",no
"I see. I guess I have two general comments:
1. When we use lock-free data structures because we know they will only be accessed from a single thread, we need to comment this carefully and explain how the reader can tell that this is the case. (E.g., the only calls to this method all derive from `ShortMessageProcessor`, which is single-threaded and there is only one per process, to make something completely up.)
2. I think we are too heavily biased towards lock-free data structures. The overhead of synchronization in Java is just not that bad. Even better, Java can detect when only the same thread every synchronizes on an object and use a much more lightweight form of locking: http://stackoverflow.com/a/14386464/1715495
",no
"thanks, the log helped. you stopped playback in a way I haven't tried so far. The stop button generated a gui sound which couldn't be played after the stream was terminated and no silence buffers ware created at that time. The lingering gui sound prevented the state machine from going from play to idle and reconfigure.
",no
"If you guys think this can't break stuff, sure go ahead. Personally, I'm not sure this change is so safe to be merged at this point but it's your call. Regardless, with the new dev workflow we can release bug fixes easily so it's not a big deal.
",no
"See my comment about LDFLAGS

On Thursday, November 6, 2014, Ondřej Čertík notifications@github.com
wrote:

> The libflags addition breaks on OS X? Because the set-lapack-flags
> section below is already protected to only execute on linux.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/hashdist/hashstack/commit/e7a29a7906858f8bc7a50f69939ffe45ee4dd8c0#commitcomment-8461828
> .
",yes
"It depends.

If you have a Dict-like data structure and implement the Access protocol only for them, as documented, you will be able to have code running on both 1.0 and 1.1 with only deprecation warnings as long as you update the Dict API in your module.

However, if you are using it for scenarios that were not recommended, like providing fancy access to regular data structures, then the code will break because we can't deprecate it and use the fast dispatch at the same time. At some point this will need to happen, be it on 1.1 or 1.3. I mean, you can if you implement get and get_and_update in the struct module, but that is even less recommended.
",no
"moving this file actually breaks the API (which is not too much of a problem at the current point in time FMPOV). However, we follow the practice of documenting such API changes in the release notes so that people know what to expect and look out for (`/site/content/release-notes.md`)",no
"Hi @kamoljan, since this is not a critical issue IMO, I am not going to push an emergency release. I will cherry pick the change back into `master` for now. If after a week or so, no other issues have come up, I will most likely cut another release then.

Does that seem reasonable?
",no
"Dan, (I think) most of this has already been implemented. You need to work off of the release branch. Refer to 7d0e5d537283cd90e15744bc9959000b30abdaa6

I ended up using `split()` and `join()` because I think it's more efficient than regex, but there's a small bug with my version so it may be worth looking at merging the 2.
",yes
"I was thinking that some users might not want their calendar loaded with green bars, if they did not want to track the download status.   The hiding of the buttons was secondary to this.
However, I will revert the commit, not problems.

as for doubling the downloaded/watched buttons, this is what they look like on my test machine below.
_not downloaded not watched_
![image](https://cloud.githubusercontent.com/assets/6933240/7258905/9cb374f4-e8b3-11e4-9dc0-fdf0696093ae.png)

_downloaded not watched_
![image](https://cloud.githubusercontent.com/assets/6933240/7258952/f140d3c2-e8b3-11e4-96e6-1af4e51d1de8.png)

_downloaded watched_
![image](https://cloud.githubusercontent.com/assets/6933240/7258991/45d386dc-e8b4-11e4-8aec-154c9afbdcf6.png)

that last one looks a bit busy. I think its better leaving them on separate rows, what do you think?
",no
"No, we don't want to release a new version of mirage every time we have a breaking API change in a library. Metadata about package relations should live in the Opam file where they can be edited and fixed easily

> On 20 Sep 2015, at 00:43, Gabriel Radanne notifications@github.com wrote:
> 
> If we want that, we should add the constraints in the combinators.
> 
> —
> Reply to this email directly or view it on GitHub.
",yes
"You are forgetting about custom entries - no matter what our stance on that is, code shouldn't make any assumptions that database data (in this case id) is within sane limits (which is why we validate pretty much everything)

Also items, they are really goddamn sparse. So sparse that blizz even introduced a special db2 format (called... SPARSE) for items.

Another thing is that hashing function overhead is close to none so there is no value in using vectors as maps when the access pattern is 99% lookup by key and not iteration over everything (do not optimize for that case)",no
"The One*PerSuite have `lazy val components: T = createComponents(context)` but exposing the components in the One*PerTest means that they have to be in scope with the created application -- otherwise there's a new instance every time you call the method, possibly not tied to the application.
",no
"> I accidently hover over that column and surprises me

If a majority of users are annoyed by it, I am open to classify it as an actual tooltip, so subject to be hidden by the setting.

The parties can partially be seen in the logger, but the details about partyness uses the top-level party, which is not something you will find in the row, it has to be derived from the last seen main document separator row in the logger. Also, the details use the domains, which may not always be obvious to glance from the visible hostnames.",no
"read the config description. it's prevent that part of RAM to be used by the system, and when driver needs to use the CMA ram region it's dont wait for ram allocator to release that part of ram for it, it's always free and allocated for CMA operations.
so drivers get to RAM faster, but we loose the allocated to CMA ram. for other stuff that use RAM.

i prefer faster driver load to ram than more 16MB free for apps... it's drop in ocean.
",no
"Shouldn't this be a non functional patch? Perhaps it failed due to a bug. I can't see how this patch can cause such a slowdown (in fact there should be no slowdown).

The way I do it in DiscoCheck is to expose a kind of reverse iterator, so as to make the calling code pretty. But that's a cosmetic detail. The point is that this should be a non functional patch.

Could it be a side effect of using pseudo-legal moves instead of legal moves? (I a so glad I chose the legal move route, and did not listen to the pseudo legal sirenes).
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 75](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=1756&buildTypeId=XBIM_XbimGeometry_Release) outcome was **UNKNOWN**
Summary: Canceled (Compilation error: Xbim.Geometry.Engine\Xbim.Geometry.Engine.vcxproj (new); Updating D:\TeamCity\buildAgent\work\62169855e3f99413) Build time: 02:05:09
",no
"And the first time someone tried to make that change, it resulted in one of the release candidates being tagged with a broken `Pkg.generate`. I wouldn't want to backport that kind of change hastily, definitely not without giving it plenty of time for people to test before tagging a release.
",no
"BTW this is going to fail when we release `xwiki/2.2` syntax. Maybe you could check for the `entryDoc.syntax.type.id.equals('xwiki') && entryDoc.syntax.type.version.startsWith('2.')` for example.

Note: Would be great to have an API in XWiki Rendering to easily check that the Syntax is >= 2.0.",no
"looks good part from the minor.
btw, I had some ""fun"" today packaging crossguid for ubuntu. I ended up properly linking it to a shared lib and ar-ing it together with an extracted libuuid to a static lib. Not 100% sure the static works, but we could try the same. Nothing important though, maybe for later.
",no
"For the paper trail, a new version of the DNT specification has been published today. [Determining user preference](http://www.w3.org/TR/2012/WD-tracking-dnt-20121002/#determining)

> A user agent MUST have a default tracking preference of unset (not enabled) unless a specific tracking preference is implied by the decision to use that agent. For example, use of a general-purpose browser would not imply a tracking preference when invoked normally as ""SuperFred"", but might imply a preference if invoked as ""SuperDoNotTrack"" or ""UltraPrivacyFred"". Likewise, a user agent extension or add-on MUST NOT alter the tracking preference unless the act of installing and enabling that extension or add-on is an explicit choice by the user for that tracking preference.

You can check the [diff](http://www.w3.org/2007/10/htmldiff?doc1=http%3A%2F%2Fwww.w3.org%2FTR%2F2012%2FWD-tracking-dnt-20120313%2F&doc2=http%3A%2F%2Fwww.w3.org%2FTR%2F2012%2FWD-tracking-dnt-20121002%2F#determining)
",no
"@joeynovak I think `1.9.32.3` is in the process of being released, but not ready yet.
Please keep an eye on https://groups.google.com/forum/#!forum/ngx-pagespeed-announce for release announcements (or subscribe to it to get notified),
",no
"b544c31..be50103
file upoad handler: if file is already there, don't upload again

Notes:
1) We still need to read all the data from socket (copy_socket_to_null());
otherwise the client will block on the send, and never get the success reply.
The previous approach (read-only file) didn't do this.
All we're saving is disk I/O on server.

2) The client reports a result only after it know that
all its output files have successfully been uploaded.
It won't re-upload anything if that's the case.
",no
"> Is it really a surprise that passing null causes an NPE? To me, the reverse would actually be more surprising.

Yes, it can be a surprise since the consumer of the `null` may choose to implement _default_ behavior in such situations.

Thus, clear documentation stating explicitly that `null` is unsupported avoids any possible misinterpretations.",no
"Nit: I would move this line to the top of the block you added. That means you will have all three `order_by` caluses one after another, which will allow you to add a comment on top of it, e.g. `# Admins reason in terms of locale codes (see bug 1394194)`.",yes
"I think this should be calling `reg.authorizer.userid` on this value. The identity is an unknown data type. It may be an Object, etc. The authorization policy converts that to a principal for its use. Whatever we pass to `permits` should probably be in the form of the principals / userids it generates.
",no
":wave: @gr2m, they're global for the user. The docs aren't explicit about that, but I tested it by exposing `@app-id` to another app (`now -e APP_ID=@app-id`) and it was accessible fine. `now secrets ls` also  mentions `> 3 secrets found under <user>`.",no
"@jaycfields would it be possible for you to tag releases and update the CHANGELOG with changes between versions? At the moment it can be hard to work out what has changed and what the impact of upgrading is. The [leiningen release tasks](https://github.com/technomancy/leiningen/blob/master/doc/DEPLOY.md#releasing-simplified) can make this painless and simple for you.
",no
"In this case it's not the textedit that is disabled, but the done button. So there's nothing to check in the dispatch, since disabling the edit would prevent input. If you write a name and then delete it, enter would still circumvent this button-enabled check in the guiscript.",no
"I disagree with this API: a module shouldn't expose any exceptions to the outside (apart from those exceptional cases such as out of memory). please rather use either an `option` or the nice [rresult](http://erratique.ch/software/rresult) library for that. :)
",no
"Looks great, Mat. 

Please remember to add relevant changes to the bonfire/docs/changelog.md file so we can better keep track of what's changed. It always sucks going back before a release and verifying we have everything in there... :)
",yes
"ja kann man. unter /bin gehört normalerweise auch nur das commando und keine klassen.

bin am überlegen - da wir dieses release skript ja evtl. zwischen den demos sharen - ob man ggf. dies in ein separates repos legt und dann ein executable phar draus macht (wie composer oder phpunit,...)",yes
"Apologies - I suggested this change but as per our email conversation `python-mmtf` was an older defunct and now removed release of the MMTF library, and this should suggest `pip install mmtf-python` now, i.e. https://pypi.python.org/pypi/mmtf-python/
",no
"That looks great. I think 2% test error on mnist is the best reported results for traditional 1 hidden layer MLP. You have an error in the number of train and test samples: the classification task is 10-classes, not binary, hence there is not ""pos"" or ""neg"" class. Also, you know, you can copy and paste text from the windows console rather than taking screenshots :)
",no
"``` C
typedef struct
{
    uint32_t total[2];          /*!< number of bytes processed  */
    uint32_t state[4];          /*!< intermediate digest state  */
    unsigned char buffer[64];   /*!< data block being processed */

    unsigned char ipad[64];     /*!< HMAC: inner padding        */
    unsigned char opad[64];     /*!< HMAC: outer padding        */
}
md5_context;
```

Wow, including 128 bytes of HMAC context for ANY MD5 hash is really wasteful and bad for caches. I did not know of this code. Calls for a cleanup.
",no
"For comment 1, go into OpenEMR and check out:
Administration->Lists->Procedure Units
On that list you will note a bunch of id items and corresponding title items. Note the id is meant to be stored in the database (ie. not pretty) and the title is meant for the user to see. The above function will collect the title from the id(and even translate it). If you update your openemr to most recent codebase, note you can use the new getListItemTitle('proc_unit',$myrow['units']) function instead (note you would need to encircle this one by a text() call since this function does not html escape).
These function are in the library/options.inc.php script.
Let me know if still don't understand.
",no
"The reason is changed API. We don't want develop two separate versions of plugin for 139.\* builds (PhpStorm 8) and 141.\* builds (PhpStorm 9). So until the go-plugin 1.0.0 release we will target it on the latest stable platform version which is 141 for now.
",no
"Do we want to publish this in demo mode only? We probably don't want it to be possible to probe someone's personal server (where you don't have install rights) to discover what apps are installed. (It may be that some of our existing publishes are already revealing this info; if so we should fix it.)
",no
"About b), welcome to open source. You don't have to prove anything, but if you are reluctant to take patches for bad reasons, you'll end up forked and we'll go on without you ;)
(this is just a friendly message, not a threat in any way)
",yes
"As it stands now I think the documentation is correct that this method does test the validity of API and the credential to be able to make _some_ calls. If not, you get an error message, and in this particular case of anonymous access to GHE that doesn't allow anonymous access, we just do a better error diagnosis to help assist users.
",no
"I hope that we don't release the version with this constraint, as it will force majority of packages using QuickCheck in tests to re-install `containers` on `GHC<7.8`, i.e. use different version than when installed without tests enabled.

I'd rather have containers bound relaxed and use `MIN_VERSION_containers` check to use lazy `Map`.
Yes, it will re-introduce space leak with older `containers`, but OTOH it want make users of pre-GHC-7.8 miserable.

ping @hvr
",no
"AFAIK the size of the Array doesn't matter since it keeps track of the size in a separate variable whenever an element is added or removed. `Array#size` will be just as fast for an array with 1M elements as for an empty one. I haven't looked at the Array implementation in MRI but if this isn't the case I would consider Ruby seriously broken.

EDIT: I was curious enough to look at the implementation. Here's a C macro that gets called whenever an element is pushed etc.: https://github.com/ruby/ruby/blob/trunk/array.c#L76
",no
"@mbj no, if you break API in morpher I go and fix it in rom and we release both morpher and rom...I don't want rom to get stuck on old versions and I don't want to deal with dep hell like ""new mutant uses latest morpher but rom is still on old one so I can't do anything""-kind of scenarios. I want rom to be updated immediately whenever one of its deps changed its api.

All those things are being developed very closely to one another, that's how I see it. Now that I think about it...the biggest pain was because of Gemfile.devtools when one of dev dependencies was using, let's say, latest adamantium and rom was still on old one, result? I can't bundle. If I can't bundle, I can't run tests, I need to run tests to fix rom to work with latest adamantium, so, chicken egg problem.

Do you see what I mean? It's about being pragmatic here in order to reduce friction in the dev cycles versus ""doing things properly"" because proper approach simply doesn't work.
",no
"We're going to expose it so users can call it, but I don't think calling it
self_cleaning_oven() makes any sense either. Something like self_test() or
coherence_test() is closer to what is actually happening. Maybe it should
just be an option to ppcheck()?

On Mon, Oct 12, 2015 at 6:47 PM, Bob Carpenter notifications@github.com
wrote:

> Please, I beg you not to call it ""self cleaning oven"". It's
> an even worse analogy than ""burn in"", because ovens self clean
> by getting really hot --- not so much a cleaning as a trial by
> fire.
> 
> Call it XXX_test and make it part of your unit tests or regression
> (pun intended) tests.
> - Bob
> 
> > On Oct 12, 2015, at 6:02 PM, Jonah Gabry notifications@github.com
> > wrote:
> > 
> > I like self cleaning oven, but yeah self_cleaning_oven is probably not
> > the
> > best function name. Although I suppose it's the right function name
> > if we want to encourage the use of that terminology.
> > 
> > Andrew, do you have a recommendation for what to call an R function
> > implementing the self cleaning oven?
> > 
> > On Monday, October 12, 2015, bgoodri notifications@github.com wrote:
> > 
> > > Yes. Andrew refers to this as the self-cleaning oven, but that doesn't
> > > make
> > > any sense as a name either.
> > > 
> > > On Mon, Oct 12, 2015 at 5:19 PM, Jonah Gabry <notifications@github.com
> > > <javascript:_e(%7B%7D,'cvml','notifications@github.com');>>
> > > wrote:
> > > 
> > > > sanity_check function
> > > > 
> > > > @bgoodri I’m not sure what to call this function so it’s sanity_check
> > > > at the moment, but is this more or less what you had in mind?
> > > > ---
> > > > 
> > > > Reply to this email directly or view it on GitHub:
> > > 
> > > https://github.com/stan-dev/rstanarm/commit/03cefc9d959b3cfe7e2897b50e4d2828af25d032
> > > 
> > > —
> > > Reply to this email directly or view it on GitHub
> > > <
> > > https://github.com/stan-dev/rstanarm/commit/03cefc9d959b3cfe7e2897b50e4d2828af25d032#commitcomment-13726560
> > > 
> > > .
> > > 
> > > —
> > > Reply to this email directly or view it on GitHub.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/stan-dev/rstanarm/commit/03cefc9d959b3cfe7e2897b50e4d2828af25d032#commitcomment-13727772
> .
",yes
"This was added to fix https://github.com/linuxmint/Cinnamon/issues/3909 , and should have a separate comment to that effect -- it is not as far as I know related to the comment above it about `GNOME_DESKTOP_SESSION_ID`.

Also, for me this seems to not quite be an adequate fix for the above bug, because I get a warning about software rendering potentially causing high CPU usage (that I didn't get before the ""upgrade"" that caused https://github.com/linuxmint/Cinnamon/issues/3909 ).
",no
"I disagree since there's no **10.8.3.0** release. a simple warning should **not** dictate us how we do driver updates ... 
if you really wanted symmetry than a **.1** release should be made out of the previous release **10.8.2.2** e.g. in a _jdbc-derby-10.8.2.2_ ""maintenance"" branch (due driver update on master). otherwise it just gets confusing esp. with long versioning such as Derby where one is not sure on first sight about the difference between : **10.8.3.1** and **10.8.3.0.1** 
",no
"imho having such version info in php code is pointless. you plan to update it each time you make release of this code? imho `plugin.info.txt` is all where version should be kept in dokuwiki plugins (altho even that is superfluous as git tags exist)

and i would prefer if the versioning is dokuwiki-style: date based :)
",no
"Yes it was. Probably an oversight due to the fact that the create/update events shared the same action (I think we would want to prepend a new user but not update one?).

I'll just get rid of this function and handle the events specially.
",no
"@tisto I feel, you are bundling multiple separate issues here:

Yes, we do have quality issues with robot / acceptance tests, but we cannot force (hardly documented) bets practices, merely document them and show good example. We should not start just removing tests, unless they really are irrelevant.

""The entire robot setup"" is mostly taken care of zope.testrunner: it should not be much more extra time than the time to setup an teardown z2.ZSERVER-layer (configuring a custom policy does not take that much time).

What's the main issue in spreading robot tests across different packages? Figuring out the test filter to pick only all the robot tests? If that's the issue, I could and environ-configurable prefix for all robotsuite test suite. Usage would look like:

```
    ROBOTSUITE_PREFIX=PLONE_ROBOT bin/test --all -t PLONE_ROBOT
```

or

```
    ROBOTSUITE_PREFIX=PLONE_ROBOT bin/test --all -t \!PLONE_ROBOT
```

If that would help, I would add that feature ASAP.

The deadlock issues are the hardest ones. Whenever there's a PTC, I'd blame PTC (or z2.SERVER) instead anything really robot related.

Since you have managed to reproduce it on your own computer, what kind of stacktraces have you managed to extract from the deadlocks?
",no
"Well, having a mobile-widget option to be able to choose among multiple possible mobile widgets was always the plan (but no priority yet) - and this one seems particularly simple to replicate on the mobile side.

Of course, right now there's no capacity for this - but this is (hopefully) going to change soon, and then it could be a real low-hanging fruit to pick on the go.",no
"It could be worth adding a release.md file with instructions such as
- Update `_version.py` (set release version, remove 'dev')
- `git add` and `git commit`
- `python setup.py sdist upload`
- `python setup.py bdist_wheel upload`
- `git tag -a X.X.X -m 'comment'`
- Update `_version.py` (add 'dev' and increment minor)
- `git add` and `git commit`. `git push`. `git push --tags`.
",no
"> It looks like uMatrix is inserting CSP policy for web-workers unconditionally.

Not unconditionally. When web workers are not forbidden, it injects only a `Content-Security-Policy-Report-Only` (`[Report Only]`), which does not prevent web workers from being used. Be sure you reload with bypassing the cache after you allow web workers, it's sometimes needed to prevent the browser from using the old headers.",no
"The method under test (`User#favorited(post)`) queries the database. As a result we want to be sure the data the test relies on is available in the database. 

Here's the line in the method under test that queries the database. Its possible to tell it uses the database because it involves the active record query method `where(...)`:

https://github.com/zein1016/bloccit/blob/8b7347147d89d0639346a51350ca99af165df1e5/app/models/user.rb#L23
",no
"Should this choose the default selected item in the same way as `selectInput`?

Update: @yihui pointed out that, from this function, we don't know if it's a multiple select or not, so we can't correctly choose a default selected item. So we can just leave it to the user to set selected items, or not.
",no
"> I'm actually not sure different types are necessary. Since both ranges and arrays understand to_a, choices.to_a[value % choices.size] would work for an array or a range of any type thinking

That is true, but you will still to expose them in a JSON/YAML, and you need to be able to say `I want one of numbers 1 and 10` and also `I want numbers between 1 and 10`.   ",no
"Hmm ... in that case I'd be tempted to just add the `ValueError` raised by RPi.GPIO to the `KeyError` in the exception block there which would also ensure that, should RPi.GPIO grow the ability to set any of those values in future we automatically inherit that capability?
",no
"There's also Marmalade to consider (if you plan to release ""stable"" versions) - it will require a slime-pkg.el, since the package is multi-file (MELPA generates it automatically). The version should normally be in the pkg file (unless you generate it from slime.el with a tool such as https://github.com/cask/cask). I'd suggest having a look at cider's [Makefile](https://github.com/clojure-emacs/cider/blob/master/Makefile) for some ideas how to automate the Marmalade packaging. 
",no
"Definitely.

> On 29/6/2015, at 17:32, Max Barnash notifications@github.com wrote:
>
> BTW do you mind doing another 2.0.x release with an updated driver dependency? 2.0.1 uses driver v2.1.3, which has its issues. I can prepare everything for that today probably.
>
> —
> Reply to this email directly or view it on GitHub.
",yes
"Yes that's somewhat true.  But the problem is that it could silently ""succeed"" where you don't want it to.  And anyway, we can have the broadcast enabled by default for numpy-like array ops and not for user-defined elemwise kernels (which is what we are aguing here).

That would make a lot of sense for me.
",no
"I’m sorry for the inconvenience. However, I have no plans to unpublish release 1.6.27 and to re-release it as 2.0.0. As I have already stated, the default export was undocumented (and undesired) behavior that was caused by a bug in Rollup.
",no
"Thanks @ddrscott. Generally there is a bunch of thought — and possibly also investigation/experimentation — that goes into making any change in a codebase. I choose to document a lot of that in commit messages rather than in code comments or actual documentation because:

- I'm not going to remember it otherwise.
- I don't want to clutter up the codebase or docs with information that will eventually become old/stale/irrelevant.
- Even though I won't remember the details, sometimes a problem will come up and I'll sense that I've solved it before: I'll probably recall that there was ""something"" about ""something"" in some project, and all I have to do is find it.

So, my main tools here are:

- `git log --grep=foo -i`: to find commits with *messages* that match a pattern.
- `git log -Spattern` or `git log -Gpattern`: to find commits that added or removed `pattern` in the code.
- In conjunction with the above, `git config grep.patternType perl`, to use PCRE (for more powerful/nuanced searching).
- When the result set would otherwise be too big, either of the above, with path-based limitation (eg. `git log ... -- some/directory`) or date-based (eg. `--since 2.months.ago` etc).
- `git whatchanged` can also be useful to jog my memory.
- `git blame` can come in handy too, and my most common ways of looking at that are directly on GitHub (for simple cases), and within Vim using [vim-fugitive](https://github.com/tpope/vim-fugitive) (for cases where I want to make multiple hops).",no
"well, I am not sure what you mean - but we are not deleting the database
with that line

On Tue, May 20, 2014 at 4:54 PM, Hoyt Summers Pittman <
notifications@github.com> wrote:

> Somehow that doesn't make me feel any better ;)
>
> On Tue 20 May 2014 10:35:41 AM EDT, Matthias Wessendorf wrote:
>
> > they are coming from our own database
> >
> > —
> > Reply to this email directly or view it on GitHub
> > <
> > https://github.com/aerogear/aerogear-unifiedpush-server/commit/3f5211932a0679c5bcce1f095c418a28642902fe#commitcomment-6385253
> > .
>
> —
> Reply to this email directly or view it on GitHubhttps://github.com/aerogear/aerogear-unifiedpush-server/commit/3f5211932a0679c5bcce1f095c418a28642902fe#commitcomment-6385589
> .
##

Matthias Wessendorf

blog: http://matthiaswessendorf.wordpress.com/
sessions: http://www.slideshare.net/mwessendorf
twitter: http://twitter.com/mwessendorf
",yes
"Yes, please report these separately (except those I mention as fixed below). The 403 vs 404 is there since beginning, but you're right that it's probably safer to return 404 in such case...

* You're right, the filtering is wrong, I've fixed that in abf4983f2921a4be1b34cfa8a36f9191e88c8a73.
* The access project permission can be indeed missing in some cases, this is due to way how permissions migration work in Django, I've applied workaround for that in f65eaf084.",no
"I don't think this code belongs in handle_reflow_complete_msg; I suspect that if you open a page with a fragment id, scroll elsewhere, then resize the window, the viewport will snap back to the original view. Let's move this block into a method named `scroll_to_fragment_id` that takes a ~str, and call it at the end of `load` instead.
",no
"@gschlager a recent commit removed swallowed errors in test and exposed a bug here. It is attempting to contact S3 during the test run.

I wasn't sure how you wanted to fix this test properly so I have marked it as pending so you can look into it.",no
"> Here you have a problem already, as the method of publishing a ChatComponent (i.e. via passing to method Player#sendMessage(...)) is not a safe method of publishing the ChatComponent, and once the object goes to the async netty thread for encoding there aren't any guarantees what is going to happen.

Player.sendMessage is using a safe method of sending it off to netty. It gets sent by sendPacket which eventually calls Channel's writeAndFlush.

ChatComponent does not need any volatiles, atomics, or concurrent data structures and would be simpler and faster without them.
",no
"Base's method tables are global shared mutable state, so extending them on Base types means all other code will see this method only if this package is imported. Doubt anyone would be relying on this being a MethodError, but could go the other way around where packages that happen to depend indirectly on Memento could use this method without realizing it's coming from here.",no
"Ah, so is this on the idea too, of say, a roll back, where they'd be going back in commit history, but moving forward in a release?

I'd call this `version` then, but order works too. `version` of the release makes more sense to a user.
",no
"non backwards compatible. reconsider configuration options. Using the MessageHeaderAccessor directly prevents the creation and subsequent copying of Map instances, which impacts performance, however, the MHA has less fine grained controls over id/timestamp creation. 
",no
"This is the critical bit which wasn't clear from my initial reading of this patch (and should be in the commit message).

> KM_PUSHPAGE allocation is silently converted to a KM_SLEEP allocation

Yes, I can now see how that could potentially occur.  This wouldn't result in a deadlock since we're guaranteed to _eventually_ timeout and fallback to an emergency allocation.  But it certainly wouldn't be good and would be a drag on performance.  OK, let me take a second careful look at this.

I also agree we should be able to revert our KM_SLEEP -> KM_PUSHPAGE changes which should be a good thing.
",no
"The difference is between Capacitor plugins and custom JS plugins. Capacitor plugins are accessed at runtime on `Capacitor.Plugins.foo`, but custom JS plugins will be imported directly by the user and consumed with the API the developer created. A bit confusing so I'll try to better clarify",no
"One important question is if the new functions are or aren't meant to 
ultimately fully replace the existing hb_F*() APIs. If they do, we can 
more freely choose a prefix (f.e. hb_fsRead(), which is really good and 
similar to C API). If they are likely to stay in parallel in the long run, 
hb_XFRead() is better IMO. I don't have enough information to decide 
which is the more likely scenario. Ideally, it'd replace current API.
[ but please, no hb_FXRead(). 'FX' is anything but related to filesystems, 
and easy greppability is also lost. ]
",no
"@hbrandl: I've cut a new release of prawn-table to allow the use of the latest Prawn version.

Because I don't see us accidentally breaking compatibility between versions (at least without noticing it), I relaxed the version requirement to `~> 1.3`. This will prevent us from having to cut a new release of `prawn-table` each time a new Prawn 1.x release comes out.
",no
"For a null event, we will indeed never be able to do anything. If somehow the wrong class is deserialized however, it could indicate a (major) bug that could be fixed in a subsequent release.

What I remember from our conversation is that we wanted to allow for long-term retries, specifically to let a subsequent code push fix the state (this is especially useful in case of a custom plugin bug).",no
"Thanks. It was actually reviewed by Gavin, a Tor developer, and I got some comments via private email too, but more is always welcome.

The Core/XT code base is a bit hard to unit test because so much state is in global variables and there's no easy way to reset things. But yeah testing the init path would be a good improvement too.
",yes
">   But maybe we should do this manually once and put static lines for them

This is something that should be done at configure time, BUT if you want it this way, then it should be done properly at release time, by a developer, so that it is there statically the same as the release package.  That might be a good thing to do as one of the release steps. 

The only issue with that, is WHAT happens if you put this into makefile.in, and then someone runs this --enable-plug-depends (or whatever it is).  
",no
"Testing :)  Both the Yarn and the non-yarn parts.  You may want to ask Antons to include this branch into the Jenkins tests.  Also, once you do a pull request, ie. once we want to release it, Mark and I'll will do a round of reviews of the branch, and annoy you with our feedback, no worries... :)
",no
"Thank you.

As I wrote in comment this block including `goto` is for broken input. Therefore even if I set `is_terminated` to FALSE, the results of existing test cases may not be changed.

However, what I got is following.

```
yamato@x201]~/var/ctags-github% git diff                                     
diff --git a/parsers/jscript.c b/parsers/jscript.c
index ea304b0..cc46288 100644
--- a/parsers/jscript.c
+++ b/parsers/jscript.c
@@ -1405,8 +1405,11 @@ nextVar:
        if ( isType (token, TOKEN_IDENTIFIER) && isKeyword (token, KEYWORD_NONE) )
                copyToken(name, token, TRUE);
        else
+       {
+               is_terminated = FALSE;
                /* Broken input. Throw away the current token. */
                goto cleanUp;
+       }

        while (! isType (token, TOKEN_CLOSE_CURLY) &&
               ! isType (token, TOKEN_SEMICOLON)   &&
[yamato@x201]~/var/ctags-github% make units LANGUAGES=JavaScript | grep failed
Testing js-arraylist as JavaScript                          failed (unexpected output)
Testing js-comma-at-end-of-object as JavaScript             failed (unexpected output)
Testing js-complex-return as JavaScript                     failed (unexpected output)
Testing ui5.controller.js as JavaScript                     failed (unexpected output)
make: *** [units] Error 1
Makefile:435: recipe for target 'units' failed
```

The goto is for broken input. Therefore setting is_terminated to TRUE may be not bad idea; the value gives a chance to resetting the state to the upper layer.

Anyway existing ""proper input"" test cases should not get any impact from the value of `is_terminated`. More studies are needed.
",no
"I think this is the responsibility of Scandium users to choose if they want to benefit of connector abstraction or if they want to access to more specific method at price of strong dependencies to DTLSConnector class. (e.g. we could image somebody uses scandium to implement some tests and want to be able to close session, he  probably doesn't care to be strongly dependent of DTLSConnector)

For the deregister, this is probably a mistake, the session could be reused.
For the register, the device has successfully opened a DTLS session but the endpoint doesn't match with the secure identity expected by the server. In this case we close the  DTLS session. We force the device to cross back the DTLS Handshake before to retry a LwM2m register. I don't know if this is the best thing to do. Maybe we should just return a FORBIDDEN at lwm2m level and keep the session opened ?
",no
"Thanks for the thoughts. I appreciate you commenting with followups even though I already merged.

> I like this, makes the reasoning behind the flags more clear based on compiler, in the case that someone chose to use something else and how they could manage these flags.

Yes, I wish there was a way to do this in gyp - I've not found one. The only thing I've found is an indication (from the google v8 gyp file) that you can only manually supply flags rather than being able to have them automatically set based on compiler: https://github.com/nodejs/node/blob/73ae2d1895c2c0d1d4eeaddd284c58d776d2be87/deps/v8/gypfiles/set_clang_warning_flags.gypi#L8.

If I did know a good way with gyp I'd propose adding this same kind of logic to node-cpp-skel so that we could apply `-Wmost` (or potentially another flag only clang supports). But since I don't know a way I'm content with just applying flags that both compilers support for node-cpp-skel.

> @springmeyer I added a branch , not sure if this is what you had in mind.

Yes, exactly. Thanks for doing that. Can you PR that and I'll review over there?
",no
"Hm. Function pointer+type should be enough.

cc @nrc @alexcrichton think we can expose some utility ABI-inspection functions in rustc for stability? Though this might mean that gdb will need to dynamically link to something in rustc if available.
",no
"@snopoke moving the attachment conversation to this PR. i got rid of `get_attachments` but kept `get_attachment` for the time being (we could also remove that). are you thinking that `attachments` should only return the metadata for the attachments? that's what i understand form your original comment: https://github.com/dimagi/commcare-hq/pull/8780#discussion_r42968523. would you then consider `get_attachment` through the interface the way to get the actual stream?

also re: `get_xml_element` you're right we could just return `form.xml` attachment, but i'm somewhat wary of this since we then no longer test the `get_xml` function on the `XFormInstance` which i believe is what the test was originally setup to do: https://github.com/dimagi/commcare-hq/blob/refactor-unused-methods/corehq/ex-submodules/couchforms/models.py#L302
",no
"You've actually helped clarify my thinking enormously.

I think I'll provide a separate GeoJSON file that contains geodata on the boundaries of every municipality in Virginia, indexed by GNIS ID. The client can refer to that if it needs to. Then, within the actual files (like the above one), I'd included a single GeoJSON representation of the totality of the affected area.

Thank you!
",no
"I am creating a release right now.

On Oct 30, 2013, at 11:17 AM, murphyke notifications@github.com wrote:

> @bruth Thanks! Are you going to release this as 2.1.4, or should I just use a git hash in my requirements file.
> 
> —
> Reply to this email directly or view it on GitHub.
",no
"**Updated:**
Just a heads up: The Lodash v4.13.0+ update, which includes this patch, has been live for over a week now. This release reaches 5,700+ packages as a dependency and 660+ as a dev-dependency. So far, no relevant issues have been reported.

To my knowledge the only issues reported related to this in any way were from [Feb 2015](https://phabricator.babeljs.io/T489) and [May 2015](https://github.com/lodash/lodash/issues/1197). In both cases the root issue was `core-js` augmenting `Object.prototype` methods and in both cases Lodash promptly took action to avoid problems. It was only after the May ’15 issue that `core-js` opt-ed to [fake out](https://github.com/zloirock/core-js/commit/d0b39373d8768fb966f365b3678eddbf66eb8e30#diff-abae3953b822f2b7d9a9d521728592a3) Lodash.
",no
"@bcardarella My guess is that this was a stop gap measure to ensure that the Ember test suite isn't leaking templates. 

That being said, I think that we could move this into the Ember test suite directly, or hide it behind a `<% unless testing_ember %>` check (similar to how we load `ember.js` when testing `ember-validations` or `ember-data`).

I'll work up a PR later this morning for review.
",no
"@axtimwalde 

> trakem2/TrakEM2@5584415 and axtimwalde/mpicbg@9d434ac 

Sadly these did not actually release successfully. You should either [subscribe to imagej-builds](http://imagej.net/mailman/listinfo/imagej-builds) or we can add `trakem2@imagej.net` to the reporting list for the TrakEM2 builds so you can be immediately notified of these failures. Let me know your preference.

Both attempts([1](http://jenkins.imagej.net/job/TrakEM2/74/), [2](http://jenkins.imagej.net/job/TrakEM2/76/)) to re-release pom-trakem2 1.3.2 failed because of the sequence of events I described above. The changes in git `have not` been deployed to Maven, so nothing is able to consume your re-releases (e.g., [deployed mpicbg-1.0.1](http://maven.imagej.net/index.html#nexus-search;quick~mpicbg) is still from Mar 14)

```
Rolling up the PATCH number of mpicbg to correct the pom would have required me to make releases of ALL dependents which took me a day for the 1.0.1-release which I am really really hesitant to do. I understand that this is against the reproducible build rule which I regret, but the alternative is to not fix. 
```

It's not immediately clear to me what the state of each dependency is between release and re-release, but if you did the re-releases just to add bug fixes and updated dependencies, the simplest solution is likely to just bump the PATCH version on all affected components and do another release and remove all uses of pom-trakem2.

I'm also happy to chat (here, e-mail, skype, whatever you prefer) about how to make the release process easier for your software so that doing PATCH re-releases isn't so burdensome and time consuming.
",no
"> Say I need a variable to use in a assert, what is the simplest and cleanest way to have the variable only defined for debug builds so that we don't have a warning about a variable being unused for release builds?

Put it in a function. Call that function in assert(). Lambdas are optional. There's no better way, I think.
",no
"We are currently reorganizing a bunch a stuff and moving much (but not all
to release). As part of this we have also redone all of our internal CI
stuff and are ramping up our release cadence. You may have also seen things
like packaging etc coming in. There will be much more discussion about this
in September (as usual).

On Thu, Aug 20, 2015 at 3:33 PM, Pieter Germishuys <notifications@github.com

> wrote:
> 
> @haf https://github.com/haf
> https://github.com/EventStore/EventStore/tree/competing-etc/ is the old
> ""dev"" branch.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/EventStore/EventStore/commit/58ea28017fd412be8b4b7a07784e99fa30b754c6#commitcomment-12806061
> .
## 

Studying for the Turing test
",no
"I assume its better to have some more, than too less. Before release Garvin can merge or dismiss them.

BTW, overnight I dreamed about that we should discuss on how to document these tweaky things, like this for example, see https://github.com/s9y/Serendipity/commit/9ce0033c884cf567c988d445ae6e648792d0d5e5, to get this known to future devs or Plugin writers, wanting to hook into the PLAIN Editor toolbar. 
",no
"i think there may be an race condition cause your startStopLock's synchronized block is ended by line 248,when your thread release the lock,the other thread can get it,and your thread is starting to create an new wakeupTask ,if thee other thread is closing the selector and make it to null,just like
                        if (!success) {
                            // Release the Selector if the execution fails.
                            try {
                                selector.close();
                            } catch (Throwable t) {
                                if (logger.isWarnEnabled()) {
                                    logger.warn(""Failed to close a selector."", t);
                                }
                            }
                            this.selector = selector = null;
                            // The method will return to the caller at this point.
                        }
and your just scheduled wakeupTask is running now,then there may be an race condition,
",no
"No.  Because we always load the Servlet from the container class path, it can then refer to other container classes without the need to expose them.

However, this is only here for documentation and if we rename the WebSocketNegotiatorMap  to a creator Map, the documentation will best refer to that.",no
"Nicely put @aphyr on a lot of the points. It is good to clarify context.

By serialization points I'm talking about serializing access to shared resource such as IO and contended data structures. This is the context in which I believe blocking operations are limiting. Not that blocking calls are bad within an unshared context.

When talking about threads I like to think in terms of OS scheduled threads and thus the context switching issues that must be considered. User space threads are a totally different beast. I personally don't like the event-driven aspect to the manifesto as I believe we are really talking about messaging here. It is important to consider the communication boundaries where messages are used because they do have a cost even when highly optimised. I do not believe real OS threads should be the unit of scheduling against precious resources such as IO. The main issues result from the lack of options in applying algorithms to achieve batching that can reduce contention and service time. By having single threaded access to all limited resource we can control queueing effects and apply batching under burst scenarios. The batching also plays to cache utilisation, instruction pipelining, and JIT optimisation on top of better utilisation of the resource. Controlling utilisation and queue lengths are the keys to controlling response times.
",no
"@syclik Okay, I have managed to build CVODE as a shared object of StanHeaders and successfully get Travis to run to the same place
https://travis-ci.org/stan-dev/rstan/jobs/112285446
that it errors for me locally, which I think has to do with one of the refactors.
",no
"What happens now is, `""+p`, will error out loudly at `eval_call_provider` below if provider not present, but for `unnamed` the error is silently ignored, because of this check, and the internal unnamed register is just used. Perhaps we should print a warning on `p`/`y` (when `unnamed` is set and no provider) , at least the first time?
",no
"I think the whole concept of data partials as something separate from partial templates has pretty much gone away, apart from the fact that some partial templates are in the `data_partials` directory. I think that makes this test a bit redundant or at least its intention should change. I'm not suggesting you do any more in this commit or PR, but it would be good to capture somewhere that we need to tidy this aspect of the code up a bit...
",no
"> I'm not sure imclassname is the correct name as it is not a class, more a layer

Right. I named the option `mexname`, since it's the name of the MEX file (in MATLAB, a MEX function is a function defined by a special type of shared library).

> Presumably the special numbers are an index to a table of functions somewhere.

Correct. Since MEX has only a single entry-point, we use indices to indicate which function should be called. This index is used in a big swig-statement in the entry point function (called `mexFunction`). Here is the general structure:

``` c++
void SWIG_Matlab_LoadModule(const char* name) {
  /* Only call once */
  static int moduleIsLoaded = 0;
  if (moduleIsLoaded) return;
  moduleIsLoaded = 1;
 ...
  SWIG_InitializeModule(0);
}

...

extern ""C""
void mexFunction(int resc, mxArray *resv[], int argc, const mxArray *argv[]) {
  /* Initialize module if first call */
  SWIG_Matlab_LoadModule(SWIG_name_d);

  if (--argc < 0 || !mxIsDouble(*argv) || mxGetNumberOfElements(*argv)!=1)
    mexErrMsgTxt(""This mex file should only be called from inside the .m files generated by SWIG. First input should be the function ID ."");
  int fcn_id = (int)mxGetScalar(*argv++);
  int id_exists=1, flag=0;
  switch (fcn_id) {
  case 0: flag=swigConstant(resc,resv,argc,(mxArray**)(argv)); break;
  case 1: flag=swigFunctionName(resc,resv,argc,(mxArray**)(argv)); break;
  case 2: flag=swigConstantName(resc,resv,argc,(mxArray**)(argv)); break;
  case 3: flag=swigThis(resc,resv,argc,(mxArray**)(argv)); break;
  case 4: flag=swigTouch(resc,resv,argc,(mxArray**)(argv)); break;
  case 5: flag=_wrap_delete_MatlabSwigIterator(resc,resv,argc,(mxArray**)(argv)); break;
  case 6: flag=_wrap_MatlabSwigIterator_value(resc,resv,argc,(mxArray**)(argv)); break;
  case 7: flag=_wrap_MatlabSwigIterator_incr(resc,resv,argc,(mxArray**)(argv)); break;
  case 8: flag=_wrap_MatlabSwigIterator_decr(resc,resv,argc,(mxArray**)(argv)); break;
  case 9: flag=_wrap_MatlabSwigIterator_distance(resc,resv,argc,(mxArray**)(argv)); break;
...
```
",no
"I don't understand this.

If I read uncompressSpeech right, the _bigEndianSpeech flag controls how the data is read and not just the samples, so the effect of _bigEndianSpeech on the output isn't simply inverted on a big endian system.
",no
"Btw, what should happen here is that Tizen would choose the preferred orientation given the current sensor information. Something like

GetClosestAllowedRotation(). The display_.rotation() value inside the native view should always be up to date (even when the view is invisible and we thus do not actually rotate the view). I think I already added some comments there, but I might have left them out.

GetClosestAllowedRotation() should then look at display_.rotation() and find out which one of the allowed orientations is closest in distance.
",no
"Delete the three lines in question, and add the following, right above the `get_option()` call line:

`delete_option( 'sendimagesrss_image_size' );`

That will force the saved value to be removed on each request (the same as if nothing had been saved yet).

Now when you try and save something, and reload, it will:

a) Delete whatever value you saved
b) Try and get a value, fail, and fallback to 560

proving that the second arg on `get_option()` is working correctly in terms of populating the setting field.

![send-image-rss-image-width](https://cloud.githubusercontent.com/assets/88371/3827487/47402a0a-1d6e-11e4-8681-b6ab19d13684.gif)

Note, that this has no bearing on fixing the feed or doing anything like that. That should have it's own default if the value is not found (which it does now - see the first file on this screen).
",no
"😂  Sometimes I'm just too lazy to think about grammar in my commit messages.

All these examples have their HTTPS versions. It is just that they are not brave enough to force HTTPS. I have forced it on my personal website, so http: will be redirected to https: automatically.",no
"I've been working on a release script that gets the latest builds for the different platform from TeamCity and uses the Github release API for versioned releases. It's almost ready to go, I figure once I have the release process down to 1 click then I'll stop being lazy and actually make frequent releases. 
",no
"In the future, I think it's more helpful to add the failing test prior to your changes because it shows the previous and proposed emits. That way, you and your reviewers can verify the difference. It's also useful if you choose to rebase at any point.

The workflow I usually use is:
1. Create failing tests
2. Accept baselines
3. Make changes
4. Accept baselines
5. Go to 3 until you get appropriate :+1:s

Though, nobody else does this so feel free to not do anything described here.
",no
"No. The `/etc/issue` file comes from https://github.com/ev3dev/base-files/blob/ev3dev-jessie/etc/issue which is shared by all platforms.  We will use the same image for BrickPi and PiStorms anyway so the only way to detect the difference will be to see which is enabled in `config.txt`. It would be better to find something in `/sys` (or `/proc`) though.
",no
"this commit just needs a few more fixes and a bunch of tests and it will be ready to ship.

please update the commit message to follow our convention (this greatly simplifies composition of release notes). it should looks something like:

```
feat($resource,$xhr): make HTTP headers available to $xhr and $resource callbacks

- $browser.xhr exposes headers function for retrieving one or all headers
- $xhr service exposes the headers function to both success and error callbacks
- $resource service exposes the headers function in all of its callbacks
```
",no
"This is a pretty serious breakage of the `jQuery.event.special` hooks contract details but I'm not sure what to do about it. We leaked the implementation detail about the shared single handler to them and we can't easily maintain that mirage now. As long as the hook doesn't use `eventHandle` though it should work.
",no
"This seems like a fairly invasive change in order to get a slightly more relevant error message. Is the class of parent only used here? I like that all existing lints are very self-contained (not leaking details into one another).

I may have missed a usage location of this elsewhere though...
",no
"@hhamid: Unfortunately, your proposition can't work the way it should. Please, see `?match.arg`:

> ```
> In the one-argument form ‘match.arg(arg)’, the choices are
> obtained from a default setting for the formal argument ‘arg’ of
> the function from which ‘match.arg’ was called.  (Since default
> argument matching will set ‘arg’ to ‘choices’, this is allowed as
> an exception to the ‘length one unless ‘several.ok’ is ‘TRUE’’
> rule, and returns the first element.)
> ```

The best you can do is to point out in the documentation that character vectors are not accepted.
",no
"Hmm, I don't like how the dev-facing API is different on `QueryCreator` and `PaginatedQueryCreator`. But forcing users to merge `args` with their `parent::args()` isn't ideal either. And `resolve` is rightfully separate from `nodeResolve`. This is a good flexibility/brevity tradeoff. ",no
"Hi Stephan,

> I realized that, with that policy, using master for anything else than
> release versions becomes pointless.

The master branch is definitely for more than only releases [1]. It is totally OK to do active development on `master`. The rule that Jenkins enforces is merely that you have no `SNAPSHOT` dependency couplings.

I think of master as the latest official codebase [2]. It will always compile, producing the same result both now and in the future (i.e., a reproducible build). And ideally, the unit tests will also all pass at every commit [3]. Master is always ""release ready"" but never a ""release""—it may be in a less well-tested state, or have other transient brokenness.

Personally, I push changes directly to master a lot. However, I try to do this only for ""single-commit"" additions and changes, such as individual bug-fixes. If you have a set of related commits, a topic branch is better because: A) it provides documentation of the fact that the changes are all related—though you must merge it with `git merge --no-ff` to ensure git does not perform a fast-forward style merge; and B) unlike master, you can rewrite the commits on a topic branch to make the history cleaner.

All of that said, you are welcome to push directly to master whenever you want, as long as the build stays reproducible. If you need SNAPSHOT couplings, use a topic branch. You can either: A) start the branch with a WIP commit changing the desired dependency version(s) to `LATEST`; or B) use the dev profiles, creating an empty `~/.scijava/dev.imglib2` file to trigger SNAPSHOT couplings of _all_ ImgLib2 dependencies. Either way, once you release the upstream components, the downstream component's topic branch needs to be rewritten to begin with a commit that bumps the affected dependency versions to the new release versions.

Earlier this week, Johannes and I discussed how to make this easier via an Eclipse plugin, and we [filed an issue](https://github.com/scijava/scijava-maven-plugin/issues/3) so that we don't forget. It will have to wait till later though.

Lastly, we want to enhance the [Reproducible builds](http://imagej.net/Reproducible_builds) page to document this better. Once you have fully wrapped your head around all this, it would be awesome if you could take a crack at it. Otherwise, I'll get to it eventually, though I need to create the related Architecture page first.

Regards,
Curtis

[1] The OME project uses their `master` branch _only_ for releases, opting instead to have multiple integration branches for different lines of development. This approach solves many problems while creating many others.

[2] In contrast to OME, the SciJava software projects opt to always use `master` as the One True Integration Branch (TM), which means ""merge early, merge often""! As long as the build is reproducible! The downside is that we do not and cannot maintain multiple release lines (e.g., Python 2.x and Python 3.x; or OME 4.x and OME 5.x). The ramification is that when a new major version (in SemVer terms) is released, we must update _all_ downstream code on the respective master branches as soon as possible. The Melting Pot will be of paramount help here.

[3] One great advantage of this approach is that [git bisect debugging](http://git-scm.com/book/en/v2/Git-Tools-Debugging-with-Git#Binary-Search) works properly.
",no
"The Hackerone reports are private and I don't think there is any real vetting or review from a large group, at least when I looked through all the ones that were publicly disclosed.

I also found the PR to add this https://github.com/nodejs/security-wg/pull/395 and it looks like the issue was raised there but still merged and CVE issues anyway from what I can tell.

I agree this CVE is bogus, especially because if you go through the effort to upgrade the exceljs version, nothing will actually be different in regards to the ""XSS"" so how specifically the prior versions are actually vulnerable are beyond me.",no
"255 - we obfuscate by hashing seqnum times - so data packet 255 would be the highest data packet we support and thus hashed 255 times.
We no longer need to brute force this though, since the location of the packet is fixed in order of the multisigs/vouts we can now determine sequence (and thus number of times to hash to deobfuscate) easily
",no
"@evanweaver cool, well that is the bug to fix.  We need to prevent data from getting corrupt in the first place, putting bandaids that check for and avoid problems with bad data afterwards is not the best way to go.  I suggest adding a unit test for UtilityBill that shows this problem and then fixing that unit test.  Can you take a crack at that?
",no
"Prefer `mrr:` to be consistent with what we chose for elixir (`mix` is the equivalent of `rake` for elixir): https://github.com/syl20bnr/spacemacs/blob/develop/contrib/lang/erlang-elixir/packages.el#L29

I like `:` because it mirrors `SPC :` which displays a selection buffer to execute a elisp function, here it displays a selection buffer for a rake function.
",no
"I will comment on your pull request.  You ignored my comments and sneak in
a tricky test. You made your test in bad faith silently  tweaking the
conditions to make it pass, your  rationale ofcourse  is the usual bullshit
about ""I simulate a long tournament tcec like, etc.."". I won't make you the
favor to shut up.

You didn't act in a fair way you should have advertise you were going   to
test with non standard conditions (jus to force your patch to succeed btw).

On Wednesday, December 17, 2014, mstembera notifications@github.com wrote:

> Let's get something straight. You are welcome to criticize my patches on a
> technical bases all you want. However, in the future whenever you choose to
> include gratuitous insults with your comments I will simply ignore you. For
> this time since you stated you were not interested in my rationale I will
> not give it to you. If I make a pull request I will include an explanation
> for the other maintainers as always. Let's hope we can have more productive
> exchanges in the future.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/mstembera/Stockfish/commit/d6442060624f11cf7e05e783111a129415cdd0f2#commitcomment-9015888
> .
",no
"Same ELO but new version is about 15% faster.

It means that using a shared countermove (with 7 threads) is equivalent at
a loss in speed of about 15% (that is huge!).

Next test will try to keep teh value of a shared countermove, but with
better scalability:

http://tests.stockfishchess.org/tests/view/57c496a30ebc59030fbe4ac5

For this test we need a machine with at least 22 threads to have a sensible
test. If this version proves stronger than we can go to TCEC with this one,
otherwise we will probably fallback on per-thread countermoves that  should
scale better than a fully shared one and not to loose too much (with 7
threads we are more or less equal).

On Mon, Aug 29, 2016 at 9:53 PM, Burak notifications@github.com wrote:

> @mcostalba https://github.com/mcostalba this looks ELO neutral so far.
> What's the next step?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> https://github.com/mcostalba/Stockfish/commit/340b8e447e859d2d9f39230393a55745c045d848#commitcomment-18818519,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/ABDGAW33CyqrAsIhKD3wUEV3DhOcOyi0ks5qkzilgaJpZM4JvOUN
> .
",no
"The same could probly be done for the cookie module then express doesn't need to explicitly have it listed in dependencies.

This is potentially a dangerous road tho cause now anyone using connect.mine will be affected by whatever version you choose to bump it to. Probly ""safe"" for such low level things that are not changing much.
",no
"Cool thanks.

On Tue, Nov 24, 2015 at 02:18:41AM -0800, Cory Benfield wrote:

> We're expecting a new release soon, once #112 is merged.
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/sigmavirus24/requests-toolbelt/commit/d4eba75097c0f65448afb6dfab2029d3fefb02b9#commitcomment-14584419
",yes
"I'd recommend removing this all together and use `@property` instead.
Then the compiler can decide about stuff like atomic/nonatomic for us, there's less code, and... this just spooks me out: I know ARC is meant to be putting in a retain and release but it looks scary!

(same for `setTagDictionaries` below)
",no
"@kbenne i still can't get a build with shared os and shared qt, I get linker errors on openstudio.exe:

```
Error   1   error LNK2005: ""public: __cdecl openstudio::LogSink::~LogSink(void)"" (??1LogSink@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   2   error LNK2005: ""public: static class openstudio::LoggerSingleton & __cdecl openstudio::Singleton<class openstudio::LoggerSingleton>::instance(void)"" (?instance@?$Singleton@VLoggerSingleton@openstudio@@@openstudio@@SAAEAVLoggerSingleton@2@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   3   error LNK2005: ""public: virtual __cdecl openstudio::IdfObject::~IdfObject(void)"" (??1IdfObject@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   4   error LNK2005: ""public: virtual __cdecl openstudio::WorkspaceObject::~WorkspaceObject(void)"" (??1WorkspaceObject@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   5   error LNK2005: ""public: __cdecl openstudio::IddObjectType::IddObjectType(void)"" (??0IddObjectType@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   6   error LNK2005: ""public: __cdecl openstudio::Attribute::~Attribute(void)"" (??1Attribute@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   7   error LNK2005: ""public: class openstudio::Attribute & __cdecl openstudio::Attribute::operator=(class openstudio::Attribute const &)"" (??4Attribute@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   8   error LNK2005: ""public: __cdecl openstudio::WorkflowJSON::~WorkflowJSON(void)"" (??1WorkflowJSON@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   9   error LNK2005: ""public: __cdecl openstudio::WorkflowJSON::WorkflowJSON(class openstudio::WorkflowJSON const &)"" (??0WorkflowJSON@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   10  error LNK2005: ""public: class openstudio::WorkflowJSON & __cdecl openstudio::WorkflowJSON::operator=(class openstudio::WorkflowJSON const &)"" (??4WorkflowJSON@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   11  error LNK2005: ""public: __cdecl openstudio::Date::~Date(void)"" (??1Date@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   12  error LNK2005: ""public: virtual __cdecl openstudio::Unit::~Unit(void)"" (??1Unit@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   13  error LNK2005: ""public: __cdecl openstudio::Unit::Unit(class openstudio::Unit const &)"" (??0Unit@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   14  error LNK2005: ""public: class openstudio::Unit & __cdecl openstudio::Unit::operator=(class openstudio::Unit const &)"" (??4Unit@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   15  error LNK2005: ""public: virtual __cdecl openstudio::Quantity::~Quantity(void)"" (??1Quantity@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   16  error LNK2005: ""public: __cdecl openstudio::OSOptionalQuantity::~OSOptionalQuantity(void)"" (??1OSOptionalQuantity@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesUnits.lib(ruby_OpenStudioUtilitiesUnits_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   17  error LNK2005: ""public: __cdecl openstudio::OSQuantityVector::~OSQuantityVector(void)"" (??1OSQuantityVector@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesUnits.lib(ruby_OpenStudioUtilitiesUnits_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   18  error LNK2005: ""public: __cdecl openstudio::TimeSeries::~TimeSeries(void)"" (??1TimeSeries@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   19  error LNK2005: ""public: __cdecl openstudio::TimeSeries::TimeSeries(class openstudio::TimeSeries const &)"" (??0TimeSeries@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   20  error LNK2005: ""public: class openstudio::TimeSeries & __cdecl openstudio::TimeSeries::operator=(class openstudio::TimeSeries const &)"" (??4TimeSeries@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   21  error LNK2005: ""public: __cdecl openstudio::SqlFile::SqlFile(class openstudio::SqlFile const &)"" (??0SqlFile@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesSql.lib(ruby_OpenStudioUtilitiesSql_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   22  error LNK2005: ""public: class openstudio::SqlFile & __cdecl openstudio::SqlFile::operator=(class openstudio::SqlFile const &)"" (??4SqlFile@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesSql.lib(ruby_OpenStudioUtilitiesSql_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   23  error LNK2005: ""public: __cdecl openstudio::DateTime::~DateTime(void)"" (??1DateTime@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   24  error LNK2005: ""public: __cdecl openstudio::EpwFile::~EpwFile(void)"" (??1EpwFile@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   25  error LNK2005: ""public: __cdecl openstudio::EpwFile::EpwFile(class openstudio::EpwFile const &)"" (??0EpwFile@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   26  error LNK2005: ""public: class openstudio::EpwFile & __cdecl openstudio::EpwFile::operator=(class openstudio::EpwFile const &)"" (??4EpwFile@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   27  error LNK2005: ""public: __cdecl openstudio::LogMessage::~LogMessage(void)"" (??1LogMessage@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   28  error LNK2005: ""public: __cdecl openstudio::LogMessage::LogMessage(class openstudio::LogMessage const &)"" (??0LogMessage@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   29  error LNK2005: ""public: virtual __cdecl openstudio::Workspace::~Workspace(void)"" (??1Workspace@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   30  error LNK2005: ""public: class openstudio::Workspace & __cdecl openstudio::Workspace::operator=(class openstudio::Workspace const &)"" (??4Workspace@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   31  error LNK2005: ""public: __cdecl openstudio::StringStreamLogSink::~StringStreamLogSink(void)"" (??1StringStreamLogSink@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   32  error LNK2005: ""public: __cdecl openstudio::VersionString::~VersionString(void)"" (??1VersionString@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   33  error LNK2005: ""public: __cdecl openstudio::VersionString::VersionString(class openstudio::VersionString const &)"" (??0VersionString@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   34  error LNK2005: ""public: __cdecl openstudio::IdfFile::~IdfFile(void)"" (??1IdfFile@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   35  error LNK2005: ""public: __cdecl openstudio::Point3d::~Point3d(void)"" (??1Point3d@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   36  error LNK2005: ""public: class openstudio::Point3d & __cdecl openstudio::Point3d::operator=(class openstudio::Point3d const &)"" (??4Point3d@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   37  error LNK2005: ""public: __cdecl openstudio::Vector3d::~Vector3d(void)"" (??1Vector3d@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   38  error LNK2005: ""public: class openstudio::Vector3d & __cdecl openstudio::Vector3d::operator=(class openstudio::Vector3d const &)"" (??4Vector3d@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   39  error LNK2005: ""public: __cdecl openstudio::CalibrationResult::~CalibrationResult(void)"" (??1CalibrationResult@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   40  error LNK2005: ""public: __cdecl openstudio::CalibrationResult::CalibrationResult(class openstudio::CalibrationResult const &)"" (??0CalibrationResult@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   41  error LNK2005: ""public: class openstudio::CalibrationResult & __cdecl openstudio::CalibrationResult::operator=(class openstudio::CalibrationResult const &)"" (??4CalibrationResult@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   42  error LNK2005: ""public: __cdecl openstudio::EndUses::~EndUses(void)"" (??1EndUses@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   43  error LNK2005: ""public: __cdecl openstudio::EndUses::EndUses(class openstudio::EndUses const &)"" (??0EndUses@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   44  error LNK2005: ""public: class openstudio::EndUses & __cdecl openstudio::EndUses::operator=(class openstudio::EndUses const &)"" (??4EndUses@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   45  error LNK2005: ""public: __cdecl openstudio::Transformation::~Transformation(void)"" (??1Transformation@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   46  error LNK2005: ""public: class openstudio::Transformation & __cdecl openstudio::Transformation::operator=(class openstudio::Transformation const &)"" (??4Transformation@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   47  error LNK2005: ""public: __cdecl openstudio::BoundingBox::~BoundingBox(void)"" (??1BoundingBox@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   48  error LNK2005: ""public: __cdecl openstudio::BoundingBox::BoundingBox(class openstudio::BoundingBox const &)"" (??0BoundingBox@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   49  error LNK2005: ""public: class openstudio::BoundingBox & __cdecl openstudio::BoundingBox::operator=(class openstudio::BoundingBox const &)"" (??4BoundingBox@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesGeometry.lib(ruby_OpenStudioUtilitiesGeometry_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   50  error LNK2005: ""public: __cdecl openstudio::IddObjectType::IddObjectType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"" (??0IddObjectType@openstudio@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   51  error LNK2005: ""public: class openstudio::IdfObject & __cdecl openstudio::IdfObject::operator=(class openstudio::IdfObject const &)"" (??4IdfObject@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   52  error LNK2005: ""public: __cdecl openstudio::WorkspaceObject::WorkspaceObject(class openstudio::WorkspaceObject const &)"" (??0WorkspaceObject@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   53  error LNK2005: ""public: class openstudio::WorkspaceObject & __cdecl openstudio::WorkspaceObject::operator=(class openstudio::WorkspaceObject const &)"" (??4WorkspaceObject@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   54  error LNK2005: ""public: __cdecl openstudio::WorkflowStepResult::~WorkflowStepResult(void)"" (??1WorkflowStepResult@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   55  error LNK2005: ""public: class openstudio::WorkflowStepResult & __cdecl openstudio::WorkflowStepResult::operator=(class openstudio::WorkflowStepResult const &)"" (??4WorkflowStepResult@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   56  error LNK2005: ""bool __cdecl openstudio::istringEqual(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"" (?istringEqual@openstudio@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   57  error LNK2005: ""bool __cdecl openstudio::istringLess(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"" (?istringLess@openstudio@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   58  error LNK2005: ""public: __cdecl openstudio::IddObject::~IddObject(void)"" (??1IddObject@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   59  error LNK2005: ""public: __cdecl openstudio::IddFileType::IddFileType(int)"" (??0IddFileType@openstudio@@QEAA@H@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   60  error LNK2005: ""public: bool __cdecl EnumBase<struct openstudio::IddObjectType>::operator==(struct openstudio::IddObjectType const &)const "" (??8?$EnumBase@UIddObjectType@openstudio@@@@QEBA_NAEBUIddObjectType@openstudio@@@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   61  error LNK2005: ""public: __cdecl openstudio::IddObjectType::IddObjectType(int)"" (??0IddObjectType@openstudio@@QEAA@H@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   62  error LNK2005: ""public: virtual __cdecl openstudio::IdfExtensibleGroup::~IdfExtensibleGroup(void)"" (??1IdfExtensibleGroup@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   63  error LNK2005: ""public: class openstudio::IdfExtensibleGroup & __cdecl openstudio::IdfExtensibleGroup::operator=(class openstudio::IdfExtensibleGroup const &)"" (??4IdfExtensibleGroup@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   64  error LNK2005: ""public: __cdecl openstudio::IdfFile::IdfFile(class openstudio::IdfFile const &)"" (??0IdfFile@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   65  error LNK2005: ""public: class openstudio::IdfFile & __cdecl openstudio::IdfFile::operator=(class openstudio::IdfFile const &)"" (??4IdfFile@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   66  error LNK2005: ""public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl EnumBase<struct openstudio::IddFileType>::valueName(void)const "" (?valueName@?$EnumBase@UIddFileType@openstudio@@@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   67  error LNK2005: ""public: __cdecl openstudio::ValidityReport::~ValidityReport(void)"" (??1ValidityReport@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   68  error LNK2005: ""public: enum openstudio::IddObjectType::domain __cdecl openstudio::IddObjectType::value(void)const "" (?value@IddObjectType@openstudio@@QEBA?AW4domain@12@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   69  error LNK2005: ""public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl EnumBase<struct openstudio::IddObjectType>::valueName(void)const "" (?valueName@?$EnumBase@UIddObjectType@openstudio@@@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   70  error LNK2005: ""public: virtual __cdecl openstudio::WorkspaceExtensibleGroup::~WorkspaceExtensibleGroup(void)"" (??1WorkspaceExtensibleGroup@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   71  error LNK2005: ""public: __cdecl openstudio::WorkspaceExtensibleGroup::WorkspaceExtensibleGroup(class openstudio::WorkspaceExtensibleGroup const &)"" (??0WorkspaceExtensibleGroup@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   72  error LNK2005: ""public: __cdecl openstudio::Exception::Exception(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"" (??0Exception@openstudio@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   73  error LNK2005: ""public: __cdecl openstudio::WorkflowStepValue::~WorkflowStepValue(void)"" (??1WorkflowStepValue@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   74  error LNK2005: ""public: __cdecl openstudio::WorkflowStepValue::WorkflowStepValue(class openstudio::WorkflowStepValue const &)"" (??0WorkflowStepValue@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesFileTypes.lib(ruby_OpenStudioUtilitiesFileTypes_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   75  error LNK2005: ""public: __cdecl openstudio::BCLMeasureArgument::~BCLMeasureArgument(void)"" (??1BCLMeasureArgument@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   76  error LNK2005: ""public: __cdecl openstudio::BCLMeasureArgument::BCLMeasureArgument(class openstudio::BCLMeasureArgument const &)"" (??0BCLMeasureArgument@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   77  error LNK2005: ""public: class openstudio::VersionString & __cdecl openstudio::VersionString::operator=(class openstudio::VersionString const &)"" (??4VersionString@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   78  error LNK2005: ""public: __cdecl openstudio::IddField::~IddField(void)"" (??1IddField@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   79  error LNK2005: ""public: bool __cdecl openstudio::UUID::isNull(void)const "" (?isNull@UUID@openstudio@@QEBA_NXZ) already defined in ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   80  error LNK2005: ""public: __cdecl openstudio::IddFileType::IddFileType(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)"" (??0IddFileType@openstudio@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   81  error LNK2005: ""public: bool __cdecl EnumBase<struct openstudio::IddObjectType>::operator!=(struct openstudio::IddObjectType const &)const "" (??9?$EnumBase@UIddObjectType@openstudio@@@@QEBA_NAEBUIddObjectType@openstudio@@@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   82  error LNK2005: ""public: __cdecl openstudio::IddFile::~IddFile(void)"" (??1IddFile@openstudio@@QEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   83  error LNK2005: ""public: virtual __cdecl openstudio::IddFileAndFactoryWrapper::~IddFileAndFactoryWrapper(void)"" (??1IddFileAndFactoryWrapper@openstudio@@UEAA@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   84  error LNK2005: ""public: __cdecl openstudio::IddFileAndFactoryWrapper::IddFileAndFactoryWrapper(class openstudio::IddFileAndFactoryWrapper const &)"" (??0IddFileAndFactoryWrapper@openstudio@@QEAA@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   85  error LNK2005: ""public: class openstudio::IddFileAndFactoryWrapper & __cdecl openstudio::IddFileAndFactoryWrapper::operator=(class openstudio::IddFileAndFactoryWrapper const &)"" (??4IddFileAndFactoryWrapper@openstudio@@QEAAAEAV01@AEBV01@@Z) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)   E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   86  error LNK2005: ""public: static class openstudio::IddFactorySingleton & __cdecl openstudio::Singleton<class openstudio::IddFactorySingleton>::instance(void)"" (?instance@?$Singleton@VIddFactorySingleton@openstudio@@@openstudio@@SAAEAVIddFactorySingleton@2@XZ) already defined in ruby_OpenStudioUtilitiesIdd.lib(ruby_OpenStudioUtilitiesIdd_wrap.obj)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\openstudio_utilities.lib(openstudio_utilities.dll)
Error   87  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::PathWatcher::staticMetaObject"" (?staticMetaObject@PathWatcher@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)
Error   88  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::PathWatcher::staticMetaObject"" (?staticMetaObject@PathWatcher@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesPlot.lib(ruby_OpenStudioUtilitiesPlot_wrap.obj)
Error   89  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::PathWatcher::staticMetaObject"" (?staticMetaObject@PathWatcher@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj)
Error   90  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::UpdateManager::staticMetaObject"" (?staticMetaObject@UpdateManager@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesCore.lib(ruby_OpenStudioUtilitiesCore_wrap.obj)
Error   91  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::UpdateManager::staticMetaObject"" (?staticMetaObject@UpdateManager@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesPlot.lib(ruby_OpenStudioUtilitiesPlot_wrap.obj)
Error   92  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::UpdateManager::staticMetaObject"" (?staticMetaObject@UpdateManager@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj)
Error   93  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::ProgressBar::staticMetaObject"" (?staticMetaObject@ProgressBar@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesPlot.lib(ruby_OpenStudioUtilitiesPlot_wrap.obj)
Error   94  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::ProgressBar::staticMetaObject"" (?staticMetaObject@ProgressBar@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj)
Error   95  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::detail::Attribute_Impl::staticMetaObject"" (?staticMetaObject@Attribute_Impl@detail@openstudio@@2UQMetaObject@@B) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesData.lib(ruby_OpenStudioUtilitiesData_wrap.obj)
Error   96  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::BCL::staticMetaObject"" (?staticMetaObject@BCL@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj)
Error   97  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::LocalBCL::staticMetaObject"" (?staticMetaObject@LocalBCL@openstudio@@2UQMetaObject@@B)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj)
Error   98  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::RemoteBCL::staticMetaObject"" (?staticMetaObject@RemoteBCL@openstudio@@2UQMetaObject@@B)  E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesBCL.lib(ruby_OpenStudioUtilitiesBCL_wrap.obj)
Error   99  error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::detail::CloudProvider_Impl::staticMetaObject"" (?staticMetaObject@CloudProvider_Impl@detail@openstudio@@2UQMetaObject@@B) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesCloud.lib(ruby_OpenStudioUtilitiesCloud_wrap.obj)
Error   100 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::detail::VagrantProvider_Impl::staticMetaObject"" (?staticMetaObject@VagrantProvider_Impl@detail@openstudio@@2UQMetaObject@@B) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesCloud.lib(ruby_OpenStudioUtilitiesCloud_wrap.obj)
Error   101 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::detail::AWSProvider_Impl::staticMetaObject"" (?staticMetaObject@AWSProvider_Impl@detail@openstudio@@2UQMetaObject@@B) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesCloud.lib(ruby_OpenStudioUtilitiesCloud_wrap.obj)
Error   102 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::IdfObjectWatcher::staticMetaObject"" (?staticMetaObject@IdfObjectWatcher@openstudio@@2UQMetaObject@@B)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)
Error   103 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::detail::IdfObject_Impl::staticMetaObject"" (?staticMetaObject@IdfObject_Impl@detail@openstudio@@2UQMetaObject@@B) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)
Error   104 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::detail::WorkspaceObject_Impl::staticMetaObject"" (?staticMetaObject@WorkspaceObject_Impl@detail@openstudio@@2UQMetaObject@@B) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)
Error   105 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::detail::Workspace_Impl::staticMetaObject"" (?staticMetaObject@Workspace_Impl@detail@openstudio@@2UQMetaObject@@B) E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)
Error   106 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::WorkspaceWatcher::staticMetaObject"" (?staticMetaObject@WorkspaceWatcher@openstudio@@2UQMetaObject@@B)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)
Error   107 error LNK2001: unresolved external symbol ""public: static struct QMetaObject const openstudio::WorkspaceObjectWatcher::staticMetaObject"" (?staticMetaObject@WorkspaceObjectWatcher@openstudio@@2UQMetaObject@@B)    E:\openstudio-2-0b\build\OSCore-prefix\src\OSCore-build\src\cli\ruby_OpenStudioUtilitiesIdf.lib(ruby_OpenStudioUtilitiesIdf_wrap.obj)
```
",no
"I remember we said we wouldn't have prices because it becomes maintenance help keeping track of prices.
Then they can say we advertise one thing and then there's another price when they open the third party website, which sucks and makes us look shady.

I'd say leave price out of it, some people might be deterred from clicking when they see prices.",no
"So the migration is making notes_note.user FK to auth.user, but there is already data in the database which violates the FK:

```
karmaworld=# SELECT distinct(user_id) FROM notes_note ORDER by user_id;
 user_id 
---------
       1
       2
       3
       4
       5
       6
       7

(8 rows)
karmaworld=# SELECT id FROM auth_user;
 id 
----
  1
  2
(2 rows)
karmaworld=# SELECT * FROM users_karmauser;
 id |         email         
----+-----------------------
  1 | opt-in@site.tld
  2 | ema@il.tld
  3 | test@test.com
  4 | em@il.tld
  5 | andrew@karmanotes.org
  6 | test@53w5.com
  7 | wows@yay.blag
(7 rows)
```

Welp, I think it's safe to say we can delete the contents of the karmauser table, or even the table itself. There's probably a migration that does that (yup: `apps/users/migrations/0002_auto__del_karmauser__add_userprofile.py`). I'll modify that one to remove the FK from users prior to deleting the table and make the Note.user change depend on it.
",no
"It ensures that declared elements occur first in the list after the point of declaration, rather than possibly occurring anywhere within the list of the element had existed there previously.  Presumably to be safest we should delete any duplicated elements, although in the case of the lists being modified, this should not really matter.
",no
"I would just put them in this module above the `extern` block since those
functions aren't accessed anywhere else.

On Sun, Feb 14, 2016 at 4:46 AM, Corey Farwell notifications@github.com
wrote:

> Sounds good, thought about that earlier. Should those wrappers live in
> this file or should their be chacha20 and poly1305 modules?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/frewsxcv/ring/commit/50c78adf014c687b64d13f7999e0bf95b7c30148#commitcomment-16083602
> .
## 

https://briansmith.org/
",yes
"No, like a shared object that someone creates, and passes along to your the objects using the signal slot system.
Global state must be avoided at all costs, it's a killer.

The whole idea is that you don't care about where that 'state' object is located, in your tests you just create one and pass it along as you see fit.

Those who want to use the library will have to deal with it their way - I would certainly attach it to an Application of some sort and defer it's initialisation until the first one uses it.
",no
"pinging @goya 

@rocco what is your example scenario and plugin for this? The intent for this change is that a plugin cannot alter or read anything outside of the project. This change is for shared server environments where you don't want the plugin to access (r or w) system files (like /etc/passwd or any config files) for example

@sgrebnov let's patch that
",no
"The preprocessor flags could be shared by multiple compilers (which we currently don't do AFAIK). Anyway, a real general solution is LD_PRELOADing libfaketime or similar, which also seems to be among the patches in #2281 (31e433be28).
",no
"That's what I was wondering about in our slack conversation yesterday: if we `joined(separator: ""."")` here that makes me assume there's more than one part in that keyStructure array at that time. The code here really let us think that this indeed is the key tail, with all the remaining parts after the current level, and not simply the last part…",no
"I don't think there's utility in providing any detected features in the first release that contains `sass-supports`. The way it's set up now, there will never be any release of Sass for which `sass-supports(sourcemaps)` returns `false`, which means that users have no reason to call `sass-supports(sourcemaps)`. I think for 3.3 we should just have `sass-supports` and `has_feature?` return `false` for every feature name, then add additional features in future versions.
",no
"As i said in my first comment this is not correct in term of stand alone condition check. First is it's an initial save => this validation return true. Then if it's not a save, is the same document ID in the database has the same database name?
",no
"If we're using an authenticated client here, this should be marked with `[IntegrationTest]` to ensure the environment has setup the right credentials.

But given you're looking at details from another account, these should be public events so perhaps it doesn't need it.
",no
"No, it isn't needed. m-u-s use only master branch at transifex, see https://www.transifex.com/mate/MATE/content/
Reason is to avoid double work for translators, because we added m-u-s after the 1.20 release to transifex.
So, translations are just the same for master and 1.20 branch.
We can simply cherry-pick translations from master branch.
",no
"Oops!
I didn't understand you correctly from your comment about prevent duplication. Do you mean to detect it just inside current chain's  handlerList? Right? 
Regarding  dangling child beans: I think we can live with it as we do it now with dangling 'side effect' beans like `MessageHandlerChain#0`.
I agree about separate JIRA to do something with dangling bean after replacement.
Comes to mind some big idea to introduce SI-Java-DSL via `Builder` pattern and register all support beans (and chain sub-components, of course)  in the `build()` method on some `BeanFactoryPostProcessor`...
",no
"Aye, that is the reasoning spine-libgdx uses. For generic runtimes we don't know what format they want the world vertices, UVs, colors so we jam them in separate arrays. Most toolkit renderers want to put the data through their own API and can't make use of it as an array anyway, so the copy is inevitable. Since we have our own renderer, avoiding the copy is nice. The only downside is that people who use a different renderer will have to dig it out of the array, but I'm OK with that.
",no
"It's happening because the DB (or the ORM) is populating the translations table/cache but not returning the value that it populates it with on the first hit. By forcing a lookup, the cache and the table both get populated and the next access doesn't fire a blank.
",no
"@krischer, I'm having problems with this change, because I'm ending up in an infinite loop in a more complex retrieve permission that can not be handled with a simple json restriction like `queryset.filter(json__public=True)` and I need access to the `where` portion that internally gets made up from  `**kwargs`, see https://github.com/krischer/jane/pull/22/files#diff-06c1c605463b1e837a01ed9ad6d17d29R139",no
"Why is RARCH_INTERNAL stuff (and even PERF_TEST macro!) exposed in libretro.h? If anything, it should go in libretro_private.h, or not at all. Isn't this what libretro-common was supposed to be? This is kitchen-sinking libretro.

I don't understand the the other else branch either. Some functions are defined, but where is retro_get_perf_counter_func and retro_perf_register_func?
",no
"Do you think we'd be better off constructing a new instance for each test case, so we know that other tests aren't going to leave the shared instance in a funny state? This might become increasingly important if we add new plugs in the future - we don't want to keep having to reset the shared dispatcher to its default state at the beginning of each test.
",no
"Rather than comment this why not just remove it.  It will still be in the git history and if this change were broken in to an isolated commit with a nice comment it would be trivial to understand why it was removed (and revert it if needed).
",no
"Yes, possibly. I removed it on intent to trigger this discussion. I don't see how the local variable p could ever be accessed in modification by multiple threads. And tuples are immutable once created. In my understanding streams lead multi-threading issues per relation, not per tuple.
",no
"Interesting... What problem are you experiencing exactly? as I'd like to prevent these types of issues with unit tests - hopefully in the next 1.x release :-)

The sorting is handled by another project of mine called [Query-Engine](https://github.com/balupton/query-engine.npm), so if we can fix the bug there then that would be preferable. Query-Engine already has unit tests setup, so we can test to make sure we are always getting the desired result too.

Cheers mate, I definitely appreciate it :-)
",no
"Thanks for weighting in, @oehme.
 
> This is ... just a collection of constants.

Which is exactly what I intended to expose to the `kotlin-dsl` module.

> Instead I’d add a single method on the AutoAppliedPluginRegistry which gives you the list of all plugins that could be auto-applied. You can then offer everything from that list for auto completion instead of hardcoding build scans.

There is merit to that idea and it's definitely something we should consider in the future but it would be a lot more code on the `kotlin-dsl` side just to make sure the `build-scan` id and version are in sync between Gradle and `kotlin-dsl` (the goal of this change).

> I don’t think we should model it this way, we’re increasing the API surface between Gradle and Kotlin DSL unnecessarily.

 1. Either way there will be an increase as this information is not currently available and `kotlin-dsl` only knows about `AutoAppliedPluginHandler`. 

 2. Moving the constants to an entity whose sole purpose is to hold them makes the dependency surface very small and doesn't expose any other details.",no
"Not really, we don't want to expose why an eauth error occurs, I put this in because I was helping with a deployment and it took us a while to figure out it was a disk issue, maybe we should change the wording to suggest that it may be a disk issue but it is unlikely?
",no
"It is about reusage, the sphere request objects in the SDK can be used for multiple projects at same time, the QueryAll can also be used for different sphere projects if the client is not in the constructor.
Also it is practical to separate data and services.
",no
"> on the lazyCall() thing -- just change it to lazy() and it should work.

It is already done ;) https://github.com/auraphp/Aura.Filter/pull/37/files#diff-a377a580d7b1abbe14f408de4ac7ef3fR21

And thank you for the release note with the mentioning what changed in v1 and v2. That will really help people to understand the changes and fix things.
",no
"@Nadahar very cool! I ended up going away for the weekend so didn't have time, but maybe I can tag them now and do the release tomorrow if @Optimusprimeums can upload the OS X builds. So I'm thinking this release can be our last official Java 6 one.
",yes
"Do these parameters need to be `protected`? ImageJ style prefers `private` for [reasons of safety and encapsulation](http://imagej.net/Coding_style#Private_over_protected_fields_and_methods). Access them in subclasses using public (or protected if really necessary) accessor methods.
",no
"Thanks Isis!

This code doesn't actually block anything, just marks it as being lower priority than non-Tor traffic. It should never do anything unless there's an active DoS attack via Tor. So perfect accuracy isn't really needed here: Tor access still works fine and will do even if you run a Bitcoin node and Tor node on the same machine.

That said, I'll make a mental note to switch to the second URL when I work on this code again (might be soon, given the ongoing DoS attacks via Tor we're seeing).
",yes
"> This doesn't really hide z-worker.js, but forces inflate/deflate to use a
> same entry file, so that prevents such concatenation:
> 
> deflater: ['z-worker.js-deflate.js'],
> inflater: ['z-worker.js-inflate.js']

Concat everything and use main and [] for inflater/deflater.
",no
"I think the linker does a good job on this. Especially MSVC with LTCG.
When you separate the stuff, tag me. I will refrain from commenting until then.
You are free to name the files whatever you want. My previous suggestion isn't good, so don't use it. I propose instead `maxmindDBparser.h`.
(No need to ask me if you want a different name. Go ahead and use it)
",no
"Good extension! But maybe use `OutputStream` as _dataPath_ parameter. So you can
- render it into a ByteArrayStream to hold it in memory
- render it some placed accessed not via the filesystem, but via another protocol like jdbc, ftp, etc

Should also throw an IOException
",no
"Rebuilding the binaries aren't necessary I believ.  

I noticed that the tag wasn't right, so I fixed it and found that you had another small commit and added it in. 

Was there a release on fedora and gentoo already? If so, shit, sorry! I'll keep that in mind for in the future.
",no
"The thing is, I'm not terribly sure the version format *not* matching is a huge deal; as long as we can convert the integer to a semver then it's all we need really. Perhaps this test should remain, but make the release something like 0x400000 that we convert to something?",no
"Oh I definitely wouldn't keep generated files in git.

Just have them included when building the tarball.  An easy way to do this is to ensure that the generated files are picked up by MANIFEST.in.  Then when building a source release _always_ run `./setup.py build sdist`.  The `build` command run before `sdist` ensures that the Cythonized files get generated.  Then they'll be bundled in the tarball.

The other piece of the puzzle though is teaching your setup.py to recognize when the generated sources are already available and Cython isn't needed.  Cython itself really ought to include an easier way to do this per my post on the mailing list :/

That said, as you write, if you're shipping a binary distribution it may not matter as much.  It depends largely on your user base.  I've found in my experience with Astropy that a lot of Astronomers are _just_ sophisticated enough to be dangerous :)

> I have no idea what best practice in Cython really is, and I really want to either do that, or have a good reason why I am not doing that.

I think at the moment there is no such thing.  That's part of the problem.
",no
"This is not the best choice for versioning :) In order to make solution stable we should always use strict versions. Otherwise:
- New release of a lib may cause unexpected errors that didn't happen yesterday (and this _does_ happen)
- You, your colleagues and your CI may download different version of a package. This may result in differences depending on the environment. 
",no
"> Do you have a PR open for this so we can discuss details?

No, I still have to sort out all the messy details (somewhen after the release). Things are pretty clear right now, so we can spare the discussion until it's finished. I'd be glad for an early review of Unique (https://github.com/MartinNowak/phobos/commit/1bac938f28110f1ab2ba797adae7ab4611245cc2) though.
",no
"this might be a little dangerous, since the only safe operation that the consumer can do is to ack the message with their own offset and topic (but access to the consumer allows them to do a lot of other unsafe stuff). I am thinking that we should keep the Acknowledgment interface with twofold goals: a) to restrict acks to the current message, and b) to ensure thread-safety of access to the consumer. Also, we could further pass the Acknowledgment object as a SI message header.
",no
"Ok, here is a new one, with proper comments :p

``` cpp
    for(;;)
    {
        // read some data from the file
        file.read(buffer, sizeof(buffer));
        count = file.gcount();

        if (count > 0)
        {
            // we could read more data from the file: send them
            if (m_dataSocket.send(buffer, count) != Socket::Done)
                break;
        }
        else
        {
            // no more data: exit the loop
            break;
        }
    }
```

Except the `for(;;)` that I never use, this version is definitely the one I'd write.
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 21](http://ncl-xbim:8080/viewLog.html?buildId=761&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: MSTest runner exits with not zero code. (new) Build time: 00:09:49
",no
"coyhile wrote:

> Is there any timeframe when this is likely to get pulled into a
> hypothetical 2.2.6 release?

  Not really... I suppose we should do a release soon.  Maybe by Sept. 1?

> pkgsrc is still shipping 2.2.0 with some
> local patches, and I'm looking to update that, maintaining as few
> local-to-pkgsrc patches as possible.

  That makes sense.
",no
"Vermutlich ja.
Der Ablauf ist übrigens wie folgt:
* Neues Release mit frischem, leeren Cache-Ordner wird erstellt.
* Durch Nutzung der Redaxo-Console (Migration) wird der Cache teilweise erstellt.
* Bei der Migration wird die Package-Konfig eventuell geändert, also welche Addons installiert sind etc.

Daher muss vor allem die `config.cache` wieder gelöscht werden.
Addons-Cache habe ich aktuell kein konkretes Problem, erschien mir aber trotzdem sinnvoll/sicherer, den auch nochmal zu leeren an dieser Stelle.",yes
"At the moment the UnitProduced event is not exposed to Lua, so this isn't possible yet. As a workaround, you can set the factory's rallypoint using Production.SetRallyPoint and collect the built units using Map.FindIdleActorsInCircle into a team. But it's not pretty yet.
",no
"@Seldaek regarding 3.0 fixing the conflict, you can always do a new release allowing more versions of the dependency. Your old release will not be broken. It will just be stricter than necessary. The broken case is the opposite one. This is why I was not validating it originally.
",no
"I'm not positive that the old way is faster for a release build, but I'm sure that the speed penalty is insignificant. And I'm _very_ sure that caching this information is a minefield of bugs waiting to happen. So yeah, change it back.
",no
"All buffer data is accessible via public members like `size()`, `capacity()` and `operator[]`. I suggest using these and ditching friend relationship between `Buffer` and `basic_formatbuf`, something like:

``` c++
Elem* start = &buffer_[0];
setp(start, start + buffer_.size(), start + buffer_.capacity());
```
",no
"mpi4py convention is that lowercase functions are for sending arbitrary python objects (they are pickled), whereas uppercase functions are for objects that implement the buffer interface (effectively, numpy arrays).  We have a little freedom to choose here, since we're only ever sending one type of object (`Function`s).  Arguably, lowercase is more PEP8-compatible.",no
"If it is the main image, then I suspect what's going on is that we're not applying the orientation data to the image like we do with thumbs. When exif is present the browser silently does this, if we strip we need to do this manually
",no
"`rescue nil` is usually a very bad idea in all but the simplest throwaway code, because it silently rescues from ALL errors. If something goes wrong, you have no way of finding out what happened.

A better way to do this would be to check in the Rake task if the model instance was found, and then perform the operation. These kinds of checks don't belong in the slug model because if a slug's associated sluggable instance is gone, then that's an error condition we WANT to know about.
",no
"- Wow - we went from 18.9MB  to 64.5MB.  Is that because of the two versions of Dojo (which is only temporary) or did we add any large data?  CC @mramato
- Is there a wiki page explaining the release process?  Perhaps under the Contributors section on the [wiki](https://github.com/AnalyticalGraphicsInc/cesium/wiki)?
- Can you email the dev and announce list to let them know about the release; point them to CHANGES.md; and briefly highlight major features?
",no
":+1 - although we should have the next release be at least a minor bump so that I remember to adapt at https://github.com/mapbox/mapnik-vector-tile/blob/f254c4a02a55add203d50f5bd1e721d272019e64/test/vector_tile_pbf.cpp#L5 (where we're overriding the assert to silence it so that even in DEBUG mode we can ensure that exceptions are thrown in the right places).
",no
"As a best practice, always provide a unit for numerical values—say, prefer `5px` over `5`.

I believe leaving the unit out is only recognized by older browsers (which would fallback to using pixels), but newer browsers may silently fail and fallback to a value of 0, for `0` is the only numerical value you shouldn't provide a unit to:

``` cs
padding: 5px 0; // Means 5px for top and bottom padding, and no padding on the horizontal axis.
```

Some specific properties may accept (and sometimes only accept) unitless values: `z-index`, `line-height`, etc. But for spacings, it's not a good practice.
",no
"This whole block should be encapsulated within the `Lecture` class. Hiding all these attribute changes behind a `cancel()` method will help to understand what happens.

Please feel free to rebase your changes into this commit and force push the branch afterwards.
",no
"I would recommend:
- put DB models under a common package because these models are usually shared by the whole project
- group handlers according to their functionality (e.g. user-related handlers are put under `users` package). Helper functions and specific payload structs may also be put in these packages if they are not used by other packages.

My general principle is to make each package self-contained so that it is easier to divide the work among different developers.
",no
"Usually we release our open source projects under an Apache 2 license. Don't know if we should use the same license for this project (@xfernandez?), but at least we should change this one. Every single licensed file now points to this ""unexisting"" location for users of this client.
",no
"I think it's good to keep add them here, even if they're not used presently. If they're not added as part of this upgrade, it'll be much harder to track these details down in future. It will also make resolving the diffs harder for future upgrades.
",no
"@javan What support policy would you like to follow for Ruby versions? I typically follow an approach of dropping support for EOL'd Ruby versions in the following major release of my projects. This would mean that a potential Whenever 0.10.0 would drop support for Ruby 1.9 and 2.0.
",no
"This is probably wrong, and even if not, we're talking about vanishingly small probabilities, but AFAIK Chrome implements JS contexts as separate threads, and I don't know what the guarantees are around shared mutable state, so I think an ugly pop/while implementation will be safer here.",no
"I see. That is an interesting use case.

It is possible, but there is now other data that is written to this folder (like I said, global status). I think what Vagrant _really_ needs is write permission to `VAGRANT_HOME/data` though, and not all of `VAGRANT_HOME`. Boxes live in a separate directory.

Would this work?
",no
"Perhaps... I'm always a little hesitant to add preemptive upper bound pins, especially when a small (sometimes inconsequential) yet backward-incompatible change is released. That one release leads to every project that's pinned the upper bound to account for and adapt for the change, which leads many developers to be reluctant to release backward-incompatible changes or to batch them, behaviors I wish to discourage.

On the other hand, if a truly consequential and relevant backward-incompatible change were to be released, you'd have liked to have pinned against that version such that old releases of the software aren't suddenly exposed to the incompatibility.

Overall, in my experience, it's generally preferable to follow the less rigorous approach and only pin against an upper bound if the bound in question is _likely to produce an incompatibility for the depending project_. For the dependencies of cherrypy and cheroot, I don't foresee any breaking changes, so my preference would be to keep the dependencies unpinned.",no
"Yes, I copied data from one database to another, using postgresql tools.
Again, the main issue there was that we were conflating database migration scripts and data fixtures. Those are now separated in `/db/migration` and `/db/fixtures` and the latter is only considered when running the application locally.",no
"Throwing a `NotEvaluatableException` gives me no measurable speed loss as compare to not throwing anything. So I suppose the next step is to have a silent flag that throws `NotEvaluatableException` when true, otherwise throws a `RunTimeException`.",no
"Something in your environment must be referencing an older version of Starling. Please remember that the SWC in the Starling repository is only updated for release candidates and final releases. You'll need to reference the latest source code.
",no
"Not sure where this is mixing? I'm just configuring our router should be exposed there with a name.
That's pretty much not logic, but config.

Why would we use() anything on that Host? We'd just use() anything needed on our Router instance in src/router.php. `use()` on `Host` is just as powerful as `use()` on `Router`.
",no
"About `toDateTimeAtStartOfDay()`, isn't there an issue with our API (https://github.com/killbill/killbill/issues/56#issuecomment-291654870)?

`Entitlement` and `Subscription` only expose `LocalDate` objects, but the catalog API needs the `DateTime` from the subscription event.",no
"> I'd say another variable to choose the light mapping instead would be the easiest path.

Hmm, would be good to not require a new setting though.

But at least with `s:rgb` the mapping should be enforced.

I'm not yet sure if the light (base16) variant of solarized should re-map the colors itself, or if it should only set `foreground` and `background` properties (that could be used by templates like base16-shell).
Ref: https://github.com/aramisgithub/base16-solarized-scheme/issues/1
The main issue there is likely that black (color0) in the light variant currently is the same as the bg, i.e. it is not visible and not something like ""black"" at all.
But that could be fixed in base16-shell instead to use another color for color0 in general.  Not sure about compatibility etc though, since e.g. this colorscheme already makes assumptions where colors are mapped.

> Personally, I've switched to RGB termguicolors these days instead.

Yes, way to go.  Tried that also but noticed https://github.com/neovim/neovim/issues/8583, i.e. I would have to adjust my statusline etc to also set `gui` attributes then without this.",no
"- I don't want the depth get/setter, it's complex. (NOT `c`)
- I want the Resolver to expose the functions. (not _just_ `a`).

This means: 
- `b` 
- `b + a`
- `d` (almost `b`) 
- `e` (includes `b`)

Of these, i think the simplest, _fastest_ change is `b + a`. 

Dev time is valuable.
",no
"It applies atop what was on staging :-) I originally developed it in parallel, oblivious to your change. Then I saw after your change it tried to find libudev first by non-absolute path, so I chose my patch that always tries only absolute path (I believe).
",no
"I think you raised the issue a short time ago - about how it was a bit silly to report ""ownCloud is not installed"" when running the install command. Somebody did the code to suppress the silly message and I think I merged the backport.",no
"Hah!  I just realized why this here.  It is here solely to silence Travis.  I'll see about coming up with a cleaner way, and remove the jinja2 import if necessary.  This really shouldn't be here any more anyway, we make jinja2 an explicit runtime requirement.  I don't know exactly when this was added, but it is true of conda-build 1.18.1 and later.
",no
"I'm fine w/merging what you have now (see my one inline comment though).
 But I still want to add a hook for Pageable to override the code that
calls forEach() on every single data store item.

On Mon, May 12, 2014 at 8:12 PM, Christophe Jolif
notifications@github.comwrote:

> Ok. Done in 7ea469bhttps://github.com/cjolif/delite/commit/7ea469be8a1ae8b9d6dcbbe538d3a9a96c648ba9.
> Shall we merge it and take it from here if further improvements are needed?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/cjolif/delite/commit/beb741b37ddd567f5641bd125e6be9938b27224a#commitcomment-6288073
> .
",yes
"@Optimusprimeums Oh okay, that's weird it would be inconsistent between releases. Thanks for the builds :) When you build do you checkout the tags? There's a report on the forum about one of the OS X builds not being a release and I'm not sure if that's a mistake I made or what
",no
"Right, I forgot to write SP.

No, I haven't tried any other options.  For simplicity, I chose STC for all targets.  It seemed like the safest choice because some architectures make it hard to access flash memory, or don't allow execution from RAM, or software access to the hardware stack, or are register starved, etc.

There's one syntax quirk in my assemblers: I wanted an absolute address to be a plain integer.  So e.g. `42 jmp,` (or whatever the jump instruction is) works for all targets.  But this makes operand parsing a lot more complicated than it needed to be.  Still, I like it this way.

I'd like to suggest adding a `.gitattributes` file with the contents `*.ans linguist-language=Forth`.  This way, GitHub will understand about the file type.
  ",no
"Ah, got it!

On Wed, Nov 18, 2015 at 1:29 PM, Kevin Ushey notifications@github.com
wrote:

> If we're in a project, we explicitly choose to re-cache the old value of
> getAppDir() (rather than what the user might have entered) -- this way
> the value chosen when one is within a project is not 'sticky'.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/rstudio/rstudio/commit/f7595f8495d545f4e75f0f041ee00617c8b477ad#commitcomment-14479513
> .
",no
"I realize the comment (and logic associated) is the same as before where we only send if this is not for `ENTITLEMENT_SERVICE_NAME` and in particular don't send a `DefaultEffectiveEntitlementEvent`. I can't remember why we need two separate events, and also where the event for `DefaultEffectiveEntitlementEvent` is sent since it is not sent here.
",no
"Your reviewer here, Been looking at your tests, it might help to document how to run your tests locally especially with seeding data. For now, just had to figure out how to get some functions to produce or store data in a database (i.e. words and your `createArrayOfQuestions` function needs some work.",no
"May be, may be not. With more properties there are more things to be exposed that may or may not be relevant to the normal usage of JMS within NIFI. So less is more for the initial support and the rest will come as enhancement request in due time.
",no
"Note: There was no Redmine bug logged for this at the time of the commit, just the forum report https://forum.pfsense.org/index.php?topic=100353.0
I entered a bug report to Redmine to keep track of all this stuff: https://redmine.pfsense.org/issues/5262
And this code works.
",no
This may mean you are leaking threads because the pool is never shutdown. You could use a removal listener to shut it down when the entry is discarded. Or you might prefer using the shared `ForkJoinPool.commonPool()` instead of this cache of executors.,no
"I've forgotten to say that I'm perfectly fine with current placeholder
implementation, but I want to make sure that the following knowledge is shared :)

Rust has modules and crates. Modules map roughly to packages in Java, while
crates are unique to Rust. A crate is a reification of the library concept at
the language level.
- Crate is a tree of modules.
- Only top level module of a crate is anonymous.
- Crate **transparently** spans multiple files. There are no differences between
  an inline `mod` and a `mod` in a separate file. That is, every crate could be
  represented by a single file.
- (Crucial point) Crate is a unit of compilation. All files and `mod`s
  constituting the crate are compiled **simultaneously**, both at the
  conceptual level and, as currently implemented, in practice.
- Leading `::` in path means the anonymous root module of the current crate.
- Paths in `use` declarations have an implicit `::` at the start.
- Leading `self` and `super` in a path refers to current or parent module.
- If path does not start with `self`, `super`, `::` and it is not a `use` path,
  then it refers relatively to the current `mod`.

Most of the above is implicitly contained in the following wonderful koan from
The Reference:

> Unlike in many languages, use declarations in Rust do not declare
>   linkage dependency with external crates. Rather, extern crate declarations
>   declare linkage dependencies.
",no
"Please read the release notes for the whole 0.3.x release series as well as the discussions on the Clojure mailing list. The overwhelming consensus was that a DSL does not belong in java.jdbc - and all of that moved to another project. Either use that or SQLingvo or HoneySQL, per the readme and other documentation for java.jdbc. 
",no
"I was thinking there was value in having the most-guessable API since it would match what is already here and what we use in the devtools event-emitter, but I don't care too much.  Throwing an error is better than silently ignoring the argument.
",no
"@jef-n I don't think the original issue in that ticket is directly related - it refers to an issue in 2.8, and as far as I'm aware the offending commit wasn't backported to 2.8. But dash WAS reporting failures to us. It's just unfortunate that they got drowned in the noise of other failing OSX tests. I'm working on resolving that now...
",no
"http://en.cppreference.com/w/cpp/thread/condition_variable paragraph 3 says 

> Even if the shared variable is atomic, it must be modified under the mutex in order to correctly publish the modification to the waiting thread.

I took them at their word.  However I looked through the standard to see if it said the same thing.  It didn't.

This stack overflow answer suggests that using the lock closes a small window if the condition changes during a spurious wakeup: http://stackoverflow.com/questions/36126286/using-stdcondition-variable-with-atomicbool.  So I'm inclined to keep the lock, but I'll improve the comment.",no
"You haven't said exactly how  a Security Context is connected to a bound Pod.  Is it part of the pod Spec?  I'll assume so.

And you haven't said how private UID ranges are allocated, with respect to a global user registry such as LDAP.  I'll assume that there is a global range of shared uids and a of temporary uids.  For example, the ldap server and kubernetes could agree that uids 0 to 999999 represent actual long-term accounts, and uids 1000000 to 1999999 are ""temp uids"" that the master is free to allocate.  And then the master will allocate little ranges within this big range as needed.  Similar for gids.

Allocation has to be centralized to avoid unintended overlap via NFS.

Since allocation needs to be centralized, it won't happen on kubelets.  So, there are two perspectives for a range.  The kubelet, and the allocator.  

The allocator may want to store ContainerID, HostId, Start, and Length for each of its allocations.  But this info might be internal to the allocator. 

The kubelet knows its hostID so it doesn't need to be told.

You haven't said whether all containers in a Pod must have the same uid/gid mappings or different.  IF they are all the same, then ContainerId becomes PodId, and that is already implicit in the Pod so you don't need it in this struct.   If the mapping is per container, then there must be a SecurityContext struct inside each Container struct, so again the ContainerID is implicit.
",no
"To ensure we don't forget what this function is supposed to do, would place the following in comments above the function:
This function will return false for both below scenarios:
1. The tracker item does not exist
2. If the tracker item does exist, but the encounter has not been set
",no
"I mean that creating a separate commit would be a FIX: for the main PR commit, which would have overlooked the 3D case. 
This would not be a overall fix, as the `if (gui != display)` block was previously dead code. So it would have fixed nothing before the 4K commit itself.
",no
"You are right, this is silly, since all it does is delegate down to disk. However, we cannot expose the store layer itself here with the current architecture. If we did we'd end up with the same kind of tangles we were trying to get away from. Things outside the kernel should not be aware of how the kernel works.

That said, we are increasingly seeing pointless delegation, and I think it'll be time to go over the kernel stack soon and see if we can come up with a better way to arrange it that minimizes the amount of layered delegation like this. Maybe @rickardoberg has some input on alternatives for efficiently organizing the kernel internals? 

TL;DR: You are right, but I don't want to hack around it, and I don't think changing the architecture is within scope for this commit.
",no
"On Tue, Dec 9, 2014 at 8:38 AM, Cody Permann notifications@github.com
wrote:

> I have more work to do here. The warehouse base now stores shared pointers
> to all objects. I took this capability away from some of the warehouses
> including this one so we wouldn't store two complete vectors to the same
> objects. Sorry if it caused you trouble, clearly all the tests and all the
> applications were working without it.

David needed all() to work for BCWarehouse, as it wasn't doing what he
expected.

I just fixed it for the other classes to be consistent, but if you are
saying that we are not supposed to use _all_objects any more, then we need
to change the implementation of ::all()
## 

John
",yes
"Nice work!
Could you please add a remark about this to the NEWS file? This is a rather deep change, and having it in the NEWS file will help us remember to put this on the list of games to be completely re-tested for the next release cycle.
",no
"Force unwrapping optionals should be avoided whenever possible. In Objective-C, this code would fail gracefully if `show` is ever `nil` since messaging `nil` objects is just a no-op. In Swift, this would lead to a runtime crash.

You should re-write this as `show?.title = title` and if you do infact expect `show` to be non-nil at this point in the code, add an assertion that will make it easier to find issues in Debug builds:

`assert(show != nil)`
",no
"Is this the commit responsible for making the newest textmate release render spaces when 'Show Invisible Characters' is enabled, like this?

![screen shot 2014-08-19 at 10 35 30 am](https://cloud.githubusercontent.com/assets/39759/3970131/515fbf1a-27c7-11e4-94d6-c46bd8f777d2.png)
",no
"@barryvdh Laravel first LTS can't be upgraded to Symfony 3 because this will make some BC, the minimum requirements of Symfony 2.x is 5.3.3.

To have the new features from Symfony 3 the core team have to push a new major release of Laravel (or break semver).
",no
"Ow!  I didn't know that git doesn't preserve tarballs.  Makes sense thinking about it.

We added those files to git to help Chromium roll to newer versions much faster.

Umm.  So, you can switch to using our release tarballs, which shouldn't have this problem.  No?",no
"@kblees I am really growing tired of all those workarounds. I will not look into that, instead focusing on getting a release out and then working on https://github.com/git-for-windows/git/issues/49 (as I should have done instead of enabling nedmalloc). The environment problems will only get better when we stop the meddling with it.
",no
"@mbernat Yeah, this is not handling pushing or anything. Just in case the branch exists in the remote, we want to make sure it's up to date. But true, in reality the branch always exists in the remote because I use if for checking trunk, release and other core branches...
",no
"Jose, this doesn't extend to the software required to run the app. We have standardized on rbenv so we can rely on things like .rbenv-version working. We also require that everyone run the same point release of Ruby.

On Dec 26, 2012, at 20:41, José Valim notifications@github.com wrote:

> It's imo an anti-pattern to have developers working on the same app use different tool chains like that.
> 
> Isn't it a bit contradictory with this post from 37S blog? My argument being: as the 37S blog post mentioned, companies are more likely to allow people to have different setups (and allow their developers to try different tools like rbenv, chruby, rvm, etc).
> 
> I would argue that the organisational failure would be the opposite: to ""forbid"" people from using their preferred ruby manager since all it does after all is to manage ruby versions and installation.
> 
> —
> Reply to this email directly or view it on GitHub.
",no
"@ElbertoOne there is a trade-off between TC and number of threads.

1) With many number of threads countermoves tables is filled more and more slowly compared to shared table case.

2) With longer TC countermoves tables is filled more than with small TC.

```
Fill rate of shared table = num_threads * nps1 * TC
Fill rate of per-thread table = 1 * nps2 * TC

Where nps2 > nps1
```

So 44 cores at TCEC time control could be simulated with shorter TC but correspondingly also less cores.
",no
"Yup, nope. I'm not sure why the initial build don't fail.

On Sat., 26 Nov. 2016 at 11:20 pm, Tim Lucas <notifications@github.com>
wrote:

> Dang, I saw this odd path but assumed you chose it for a reason?
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/buildkite/elastic-ci-stack-for-aws/commit/b668f9219a0812427759c254c22ae5885c039e5f#commitcomment-19969521>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAA9jnKW6hwgF-PMIuXlFOqfA216mIBRks5rCCP4gaJpZM4K8ujg>
> .
>
",yes
":+1: thanks! i might even vote for putting the comment details (everything except the first line) in the commit message instead of the body; i generally don't put too much history in comments, just current state. i don't feel strongly though.
",no
"According to this PIC is necessary in all 64-bit shared libraries, so it makes sense that it's required also for the static libraries being used in them. I was testing on a 32bit linux so I didn't catch that. http://stackoverflow.com/questions/8808691/can-i-build-a-shared-library-by-linking-static-libraries
",no
"As soon as you see 0x260 it basically gaurantees you are dealing with a rct_ride structure. Access of rct_ride fields can be a bit odd I use the technique of looking at the last 3 characters of the address being accessed and remove 0x8f8 to get the field address. 0x1362A56 = 0xA56 = 0xA56 - 0x8F8 = 0x15E = ride->maze_tiles.
",no
"This is a false positive.  That spinlock protects the shared table of handles, not the handles themselves.  Inside the spinlock, we increment a reference count on the handle, which is what makes it safe to keep looking at the handle after dropping the spinlock.
",no
"Just thought of one workaround -- pandoc has a --data-dir argument that can be used to add another directory to resolve relative file references from. The _only_ problem is that we expose --data-dir to the user so if we use it for shiny it makes it unavailable to the user. We could probably even remove data_dir from the signature of ioslides since it's so heavily customized already (the use case for data_dir is really for custom formats derived from html_document or pdf_document, and even then it's not likely to be needed).
",no
"I like that there is a default file to encourage use and so that requests for it (by e.g. browser extensions) don't 404.

But I agree that exposing the username is a bad thing, if the user isn't fully aware that this is happening. It reminds me of [when](http://henrik.nyh.se/2006/08/colloquy-privacy-issue) the IRC client Colloquy included the full user name in your public info, but only had that info in the folded-up advanced settings.

Not sure app name or date are things to expose without making it clear, either.

To play the devil's advocate, I suppose seeing this file in the **public** directory should alert you that it will be exposed, but I would prefer a higher level of privacy as the default.
",yes
"Will this show the checkpatch results for all failed commits, or just the first?

Also, could we have a command line option to make it not silent if there are no errors? I'd actually like to see a list of passing commits (then I can make sure I checkpatched the right set of patches). But definitely a verbose option.
",no
"yes, indeed; this seems like a brown bag release to me:

https://pypi.org/project/plone.recipe.codeanalysis/3.0.0a0/

it should be a good idea to make a new one.

also, it should be nice to add a check in zest.releaser to enforce PEP 440 checking on version numbers to avoid typos like this one.",no
"> If you guys would develop OF with an IDE where ifdef blocks are commented when condition is not met, the 0.8.3 release would not have happened [if only it was not tested on Linux only] :) Just sayin'...

What tells you we aren't doing that already? Eclipse, for example, does that, shading non-met ifdefs gray (and it works in OF). Afaik, @arturoc uses it, and I do too.

Of course, such an IDE feature, while generally pretty useful, wouldn't have helped here, as the relevant commits were done on Linux, so would only have been discovered if a dev on an OS where that ifdef was not met, would have stumbled over that code, shortly after its introduction.
Just sayin'... ;-) (sorry for the snark here)
",no
"OK, well I wish you had discussed it with me, so we could have avoiding writing lines 62-119 in the first place.

I added a ticket #35 listing the details of this ""second step"".   Note that it's a pretty big architectural change and requires deleting a lot of the current code (but luckily, the amount of new code that needs to be written is small)
",no
"Looks like I made this change immediately after pushing the capnp-rpc-v0.8.3 release to crates.io and immediately before tagging the release. (Oops -- I ought to have tagged it first.)
The fix should show up on crates.io when there's a new release. Maybe I should push a new release just to fix this, but that feels kind of silly to me.",no
"@saily: p.a.contenttypes needs to support Plone 4.3.x as well. Therefore I think we shouldn't make p.a.testing 5.0a1 a hard requirement yet. I would like to wait for the first Plone 5 only release (or backport the ROBOT_TEST_LEVEL to p.a.testing 4.x). Otherwise it might become hard to run the tests on Plone 4.3.
",no
"Yes, but a release upgrade overwrites this file in any case, doesn't it? Which is in /deployments and root /. Since these define and editor files aren't used any more in 2.0+, I do not see the reason why they should be kept? Please describe.
",no
"@gnome-mpv Ok that solves all immediate issues but actually using this on Wayland is behaving strange (with opengl disabled), it looks like mpv is still using some wayland backend, I don't know who is to blame for that or if you should be forcing some X output?
",no
"yea i was conflicted on this. this doesn't make sense to do in a new release because it won't help anything, but i'm also kind of against modifying the current release unless we have to (i.e. hotfix deploy). in theory, if a deploy succeeds this should have been done and running it again won't make a difference because the code in the current release should never have been touched. let me know what you think
",no
"It's not clear to me we actually need the acquire barrier here.  Above it seems that the release barrier is attempting to ensure that the store to uwl_getcfa is visible before the store to uwl_forceunwind.   However, in the places where uwl_forceunwind is used it seems that uwl_getcfa is not.  The acquire would only serve to ensure that attempts to read owl_getcfa are postponed until after reading uwl_forceunwind.  In fact, the use of atomics at all here is very dubious as they aren't really guaranteeing anything.  They should just be removed.  inited should probably be a 'pthread_once_t' instead, though in theory it doesn't hurt for the body of thread_uw_init() to run multiple times.",no
"@fghaas sorry this is a bit of a mess. I was hoping to share it with you as a work on it so that we could ensure that things are headed in a direction where it supports both of our use cases. I will be working on this all week, so things should start getting more tests and cleanup soon.
",no
"That sounds logical, but I suspect that there is a mistake in the implementation somewhere. In the code posted in #5069, the tuple `(1,(2,3))` is accessed via a tupleref to try to pull out the `(2,3)`, except the `(2,3)` had gotten garbage collected.
",no
"To be fair, 0.x.x _can_ break APIs since it's reserved for early
development. Though it's probably used enough we should release a 1.0 and
use semver.

On Tue, May 6, 2014 at 5:49 PM, Chris Schneider notifications@github.comwrote:

> Well, API change is 1.0.0 I think? (don't be afraid of 1.0+ numbering).
>
> Yeah, semver says to bump the major version for breaking API change.
>
> http://semver.org/
>
> (honestly, it was just surprising, it didn't cause me more than a few
> minutes of confusion).
>
> As for moving forward, probably pulling the 0.1.12 gem, and updating to
> 1.0.0 would be good.
>
> —
> Reply to this email directly or view it on GitHubhttps://github.com/progrium/ruby-jwt/commit/2fc9361b595e0d111bf6a5d86660168b8447e9cd#commitcomment-6232932
> .
##

Jeff Lindsay
http://progrium.com
",no
"I think it would be good – to bring clarity to the situation on GFM features and Redcarpet goals. Wiki could do the trick.

On a personal note - I am bit disappointed (not your or Redcarpet's fault) that GitHub does not completely open source its GFM parser... 
",no
So you are wrapping the inventory contents in a inner field now? Will that mean this is going to be a change to the database structure? I'm just afraid of data loss and such a change would have to be properly handled so that there is not data loss.,no
"this should make no difference, just simplify stuff. in older releases there were always new features added in the release branch, so we could have already used the develop branch directly there, too. i've made 98.0 directly from the develop branch, so it seems to work but forgot to update this file.

i've deleted the release branch (but merged it before into develop).

FYI: @jk3064

side effect: it reduces compile time / disk space used on buildslaves.
",no
"I agree that storage and computation are often linked more closely than is convenient for clean separation of concerns.  Navigating this separation is difficult.

I'm not saying that we should only access data by selecting and inserting chunks.  We should absolutely use the lower layer as much as possible.  What I'm saying is that there is way too much logic here to put into data descriptors.  

The PyTables `.where` solution makes sense.  I think that this breaks down when you move to SQL.  I don't think that we're going to want a `SQL_DDesc.where` method, we're actually going to be much _more_ complex than this, processing full expression graphs into full queries.  Having lots of `.where`, `.groupby`, `.select` methods on `SQL_DDesc` isn't likely to be a clean solution here.  I think that we should think of `HDF5/PyTables` in the same way.  
",no
"If we ever use a sorting that doesn't put all the H atoms at the end, then this may not crash (as before) but will silently return the incorrect mapping. Actually, it might still crash. 
Options: 
1) put an Assert here to check 
2) put a note in Molecule.sortAtoms() that this is a requirement, for the benefit of future developers
3) do nothing because it's not currently broken
",no
"The rule of silence is about logging to stdout and stderr.  nn.Recv is an internal function, it would only affect this line: https://github.com/nickdesaulniers/node-nanomsg/blob/1620d3b60df1f9635169308405f2d1e4cf13464f/lib/index.js#L144

Though there might be an ambiguity if it's possible to receive empty buffers.  @tcr might know more.
",no
"the README on Github is always updated https://github.com/keystone-engine/keypatch/blob/master/README.md

the website (http://keystone-engine.org/keypatch) is not updated yet because that is for v1.0.
we will update it when we release the next version (based on latest Github code).
",no
"The currently release of HaxeDevelop does not seem to include the -D
display-stdin usage

On Tue, Jul 11, 2017 at 2:49 PM, Jens Fischer <notifications@github.com>
wrote:

> I think it even uses it by default: fdorg/flashdevelop#1318
> <https://github.com/fdorg/flashdevelop/pull/1318>
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/HaxeFoundation/haxe/commit/3a3c8151ede945de613df47d1e37a596e70b0d2e#commitcomment-23031638>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AA-bwNkmDtYfWvIkHjKgag_DG2R-aRXeks5sM29jgaJpZM4OULkc>
> .
>
",yes
"> Silence from:	x11@

yeah… same with my patches for [libinput](https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=222905), [libepoll-shim](https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=223530), [EGL](https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=223030)…",no
"I think we would better install a root trust anchor set into /nix/store and make it the shared default for (lib)unbound, knot-resolver, and perhaps others (BIND?).  Debian has it [in a package](https://packages.debian.org/stretch/all/dns-root-data/filelist) as well, for example.

The default should be OK as a read-only path, as the first key has been in use for years &ndash; never changed until this year's upcoming rollover.  We can simply dump the two records in there like (some) other distros (the old and the new key/digest).",no
"I agree that debugging is less straightforward, but constructor is the single place shared by all potential callers. Delegating safeguards to callers is not safe.
Anyway we're talking about building a pojo. The error is trivial to understand (""sonarRuntime is null"" for instance.). Not critical IMO.",no
"Console output from FIRST RUN on Windows 8.1 x64 Release build on my Windows 10 Professional system:
```
revertTitleBarColor
exitFullScreen
```

Console output from Windows Phone 8.1 build (ARM Release build) on my Windows 10 mobile test device:
```
enterFullScreen
colorizeTitleBar
Received Event: deviceready
revertTitleBarColor
exitFullScreen
```

Console output from Windows 8.1 x86 Release build on my Windows 10 Professional system:
```
The method Windows.UI.ApplicationSettings.ISettingsPaneStatics.getForCurrentView has been deprecated. SettingsPane is deprecated and might not work on all platforms. For more info, see MSDN.
The event Windows.UI.ApplicationSettings.ISettingsPane.add_CommandsRequested has been deprecated. SettingsPane is deprecated and might not work on all platforms. For more info, see MSDN.
enterFullScreen
colorizeTitleBar
Received Event: deviceready
revertTitleBarColor
exitFullScreen
```

Console output from repeated Windows 8.1 x64 Release build repeated on my Windows 10 Professional system:
```
The method Windows.UI.ApplicationSettings.ISettingsPaneStatics.getForCurrentView has been deprecated. SettingsPane is deprecated and might not work on all platforms. For more info, see MSDN.
The event Windows.UI.ApplicationSettings.ISettingsPane.add_CommandsRequested has been deprecated. SettingsPane is deprecated and might not work on all platforms. For more info, see MSDN.
enterFullScreen
colorizeTitleBar
Received Event: deviceready
revertTitleBarColor
exitFullScreen
```

Console output from first run of Windows 10 (UWP) x64 Release build on my Windows 10 Professional system:
```
revertTitleBarColor
cordova.js (2074,13)
revertTitleBarColor get view
cordova.js (2076,17)
exitFullScreen
cordova.js (2048,13)
exitFullScreen get view
cordova.js (2050,17)
```

Console output from first run of Windows 10 (UWP) x86 Release build on my Windows 10 Professional system (*may* include log from the x64 build):
```
revertTitleBarColor
cordova.js (2074,13)
revertTitleBarColor get view
cordova.js (2076,17)
exitFullScreen
cordova.js (2048,13)
exitFullScreen get view
cordova.js (2050,17)
revertTitleBarColor
cordova.js (2074,13)
revertTitleBarColor get view
cordova.js (2076,17)
exitFullScreen
cordova.js (2048,13)
exitFullScreen get view
cordova.js (2050,17)
```

Console output from first run of Windows 10 ARM Release build on my Windows 10 mobile test device:
```
enterFullScreen
cordova.js (2037,13)
enterFullScreen get view
cordova.js (2039,17)
The method Windows.UI.ViewManagement.ApplicationView.put_SuppressSystemOverlays has been deprecated. Use the TryEnterFullScreen method and IsFullScreenMode property instead of SuppressSystemOverlays. For more info, see MSDN.
eval code (2) (1,7)
colorizeTitleBar
cordova.js (2059,13)
colorizeTitleBar get view
cordova.js (2061,17)
CSP14312: Resource violated directive 'default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'' in <meta http-equiv=""Content-Security-Policy"">: inline script. Resource will be blocked.
Received Event: deviceready
index.js (42,9)
revertTitleBarColor
cordova.js (2074,13)
revertTitleBarColor get view
cordova.js (2076,17)
exitFullScreen
cordova.js (2048,13)
exitFullScreen get view
cordova.js (2050,17)
```

Console log output from repeated run of Windows 10 x64 Release build on my Windows 10 Professional system:
```
revertTitleBarColor
cordova.js (2074,13)
revertTitleBarColor get view
cordova.js (2076,17)
exitFullScreen
cordova.js (2048,13)
exitFullScreen get view
cordova.js (2050,17)
```",no
"> Is it possible that your concern is actually that you just want Sente's gc to occur by default before Heroku's own gc (i.e. <30s) to help suppress any potential Heroku warnings?

Yep absolutely.

> Would be open to that if you like?

Yeah, although the defaults can probably be bumped to 45 seconds client side ping, 50 seconds gc as Heroku gives open connections 55 second timeout.

>  I kind of got the random impression that Heroku's becoming increasingly rare for production deployments these days.

No idea really, we're really happy with it, they handle a lot of messy details for the small price we pay.
",no
"Myeh, I see the problem. Configobj was [badly structured](https://github.com/DiffSK/configobj/issues/72). That's fixed in master, but it needs a new release (DiffSK/configobj#105).

In the meantime, you should be able to work around it by adding `_version` to the list of packages to include.",yes
"- should be case insensitive 
- also are you sure starting the thing with `\/` or `/\` would be acceptable? In path.resolve we chose to limit to `\\` and `//`. https://github.com/joyent/node/blob/13de0f1d278a49b2bafac6471bec6c14c3c9376b/lib/path.js#L62
",no
"Capturing from chat: these are probably a great addition, too. I see the following issues here:
- please open a pull request, once you force push to this branch these comments will be lost
- you copy `lane_description`, could take a `const &` instead
- why manually reverse-iterating over lanes below?

It still makes sense to provide functions for the number of lanes to the right / left. You _could_ implement them as calling your function and simply returning the vector's `.size()` but then you're doing vector constructions/destructions just for getting number arithmetic going. Maybe add:

```
size_t numberOfLanesToTheLeft/RightOfLanesInTurn(const RouteStep& step);
```

(or LaneID instead of size_t) and then `step.intersections.front().lane_description.size()` gives you all lanes, `current.intersection.front().lanes` gives you the lanes in turn object with number of lanes in turn and first from the right

---

To clarify, the original ticket was about bringing in a bit of abstraction and re-using such helper functions. They hide for example having to know about the intersections array and why the first entry is the one we want / is always valid. Or more generally, how lanes are represented in the `RouteStep` object at all. The same could be done to hide more impl. details, such as

```
size_t lanesInTurnManeuver(const RouteStep& step);`
```

or similar.
",no
"Exposing the properties above is the one I really don't like from a mutability perspective -- would be nice if we could return an immutable version or a copy. I believe it's still used to actually mutate parameters, though, so that's probably a no-go.
",no
"woah, that's a good point. How did that not occur to me?! Any ideas on how I can lock it down? Presumably anyone could fork the repo, insert some malicious code and deploy it. I've revoked the access token until there's a solution of some kind.

Thanks for flagging it!
",no
"I'd prefer the notes to be accurate and up to date for the version of the docs they're in. I see two options:

 1. Review the appropriate upgrade chapter on any new release (add a card for it) and make any necessary changes
 2. Create a card that tracks these items that are likely to need updating when a new major version comes out

Looking at those two together, I see that they could just be made one: create a card to remind us to update the chapter when the new major version comes around, and use that card to track individual changes that are likely needed.",no
"This has potentially a lot of repeated code. The repeated bits of code should be divided into two core extendables (base hidden and hidden focusable) with a second argument `extend` that will choose whether or not to use the extends. Both should have a default global namespaced variable.
",no
"The point of the `detail` namespace is that its supposed to be private to the module in which it appears (jtx framework in this case). This prevents someone from writing a unit test that directly instantiates a `prop_type`.

One could imagine a unit test that defines its own funclets and conditions which attach properties by creating their own prop type. What if someone wants to write a function that returns properties that may be attached later? Can't call into `Env` for that
",no
"There's one case where I would still favor code snippets in release notes:
breaking changes. Documentation will not help you in finding where the
breaking change happened, whereas a code snippet in the release notes will.

2016-01-19 6:33 GMT+01:00 Mark Vieira notifications@github.com:

> Out of context some of these snippets can be a bit confusing as well. It's
> not obvious here that an additional plugin needs to be applied to get this
> capability.
> 
> https://discuss.gradle.org/t/tests-w-jvm-component-plugins/13160/6
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/gradle/gradle/commit/b999190abc8ff5bdbf0456f1f2ccfc837e9e2e4a#commitcomment-15521943
> .
## 

Cédric Champeau
Principal Engineer
Gradle, Inc.
<%2B1%20415%20425%202493>

www.gradle.org
",yes
"Ah, I see - from the people registered...this is great where we have the data (as in your usecase) but not so good if we don't have the data & just have a simple reporting tool...again I think that a deployment_setting to flick between these 2 mods is ideal...I don't mind which is default - am happy for this to be the 'we have the data & want this calculated automatically' version
",no
"He meant force pushing to `plone.app.layout` master. This was indeed not yet protected. I have protected the main branches there now.

In the past I have protected branches of several plone packages, but certainly not all of them. It's a lot of work.",no
"I think I'm just going to recommend that everyone either use a final release to generate gems or manually enter the minor version of the last major release.

On Fri, Jan 17, 2014 at 4:41 AM, Murahashi Sanemat Kenichi
notifications@github.com wrote:

> @Who828 Yes. That is right. `Gem::Dependency` is below:
>
> ```
> [2] pry(main)> Gem::Dependency.new('foo', '~> 1.6').match?('foo', '1.6')
> => true
> [3] pry(main)> Gem::Dependency.new('foo', '~> 1.6').match?('foo', '1.6.0')
> => true
> [4] pry(main)> Gem::Dependency.new('foo', '~> 1.6').match?('foo', '1.6.0.pre.1')
> => false
> [5] pry(main)> Gem::Dependency.new('foo', '~> 1.6.0.pre').match?('foo', '1.6.0.pre.1')
> => true
> ```
> ---
>
> Reply to this email directly or view it on GitHub:
> https://github.com/bundler/bundler/commit/717470ad67b5f85e95dbc01a8e3f8a07791842bf#commitcomment-5099825
",no
"Thought I had left a comment but it ain't here so I obviously didn't save it...

If you deleted `Swagger20Parser` on purpose then maybe the README examples should be updated. One could for example use `new SwaggerParser().readWithInfo(springfoxSwaggerJson).getSwagger()` instead.",no
"Implication of exposing SagaMessage is that I now temporarely exposed `SagaMessageHandledBy`. Do you see value in that? Or should we hide it again and for testability reasons only expose isAllowedToStart as bool and make the other property internal get and set?
",no
"@ushkinaz, before a brawl gets started, I shall state that this was a poorly written `sed` search and replace on my part. Robby ought to remain in the copyright, even though there is little if any OMZ left, since when I forked OMZ, I chose to retain history.

@cordarei, That's good. Is 2012 when I forked it?
",no
Commenting this line out might be controversial. I thought it was more important in the abstract to give context for why we are interested in the curvature rather than details about the order of the computations (especially now that we've surpassed those algorithms).,no
"No.. I think the comment is outdated. It used to say application/json but since this transport is effectively independent of the message, we cannot force this. Besides, everything is stringified and de-stringified so just text should be fine :)
",no
"> Yep, I always check your implementations when I work on my prs. Gonna have to figure out your wizardry in reduce.

Currently the pattern is, have the exposed methods handle the function binding, argument juggling, & `arguments` object conversion then pass it off to a base-function. This way the base function is more targeted, easier to inline, and less likely to be disqualified from optimizations. Internally other methods share these base functions too.

Also the abstraction allows me to handle all-the-things support wise (like consistently iterating over objects, strings, `arguments` objects).
",no
"> just waiting till you start to slow down on updates so I don't have to hack in my core tweaks too often.

:-) 

I'm already happy with what it looks like, so I released 2.6.0 release candidate. 

And yes, minimal required version is 7.1 because I want to move forward and do not supported unsupported PHP branches. It shouldn't be BC break, because Composer will not install 2.6 with PHP 5.x.

That's an interesting idea to change maxDepth. I'll try to experiment with it.",no
"I'm fine with dropping pre-3.4 for now, but I don't want to force people to SVN. I think having branches for LLVM releases would be work well; trunk can point at the most recent release, with a separate branch tracking SVN. I'll maintain the most recent release, and interested third parties can send pull requests to fix older release branches.
",no
"I think that a better thing to do here would be to navigate to the modified element in the editor, so that the user could see how exactly it was modified - this would make the notification unnecessary. Also note that we fail silently if we are unable to locate build.gradle.
",no
"Superenv is run in a separate process, so Max uses this ENV var to pass configuration settings. 
The config is a string and single letters are used as flags (Please have a look at the `cccfg?` function in the Library/ENV/4.3/cc file. 
I am open to suggestions. ""3"" stands for 32bit. 
",no
"Some comments on my test on Win 7:
- It doesn't look like a combo button at all in Windows. It looks like two buttons separated be a line. Only when you try to move them, they react as a combo button.
- The separating line between the two buttons is longer than the one for bookmarks.
- IMO just from the visual appearance it is hard to guess that e.g. the book symbol belongs to zotero.
- The order zotero button and save button is IMO wrong. On the left there should be the picker button and on the right there should be zotero button (as it was before and which would also conform with the bookmark combo button).
- <blockquote>Probably needs a third button option with just the Z icon so that the main button and the save button can be placed separately (e.g., save button in toolbar, Z in panel)</blockquote> Yes, I think I would like to customize my view as follows: save button between url and search input, and the Z icon somewhere on the right. Something like this (but without the second save button):
  ![new-buttons](https://cloud.githubusercontent.com/assets/5199995/6318387/76473078-ba8f-11e4-9e96-da946f322bdb.jpg)
- What is actually the advantage of the combo button?
- The other menu entries ""Library Lookup"", ""CrossRef Lookup"", ""Google Scholar Search"" are not working properly (what exactly should they do?). E.g. on http://dblp.uni-trier.de/pers/hd/k/Knuth:Donald_E= and select one of these options, will trigger the doWeb of the translator twice.
",no
"@gchoqueux Would you mind configuring your `/nbproject/` in either a global ignore or project-specific ignore (`.git/info/exclude` file, same syntax as `.gitignore`) ?

Also, as long as your branch isn't shared ""with the world"" (and possibly even if it is, when only pushed to GitHub to make a pull-request), prefer rebasing your work rather than merging to keep a ""clean"" history.
See https://github.com/iTowns/itowns2/blob/e34a94c06d6af691e074575f15b7c7e1d427c090/CONTRIBUTING.md#advices-for-commiters and https://github.com/iTowns/itowns2/blob/e34a94c06d6af691e074575f15b7c7e1d427c090/BUILDING.md#git
",no
"I know this is not directly relevant to the commit, but could `count_in_trees` be an integer? Would this expose a Python 2 vs 3 difference due to the division? If so, how about using `confidence = count_in_trees * 100.0 / tree_count` or `confidence = (100.0 * count_in_trees) / tree_count` or an explicit `float(...)` to avoid any potential problem?
",no
"@Jiri-Kremser this `javax.inject.Singleton` will be instantiated just once per JVM and will be shared among multiple threads. I suppose that you deliberately ignore that `this.md5` can be assigned more than once, because it should have no harmful effects. Anyway I vote for noting that in a short comment. 
",no
"The idea of this change is that we can remove `parsePending` from the shared interface of TileData, since this only happens for GeometryTileData objects. I think it's safe because `targetConfig` is what we desire the placement options to be, and the check just moved to the variant without parameters.
",no
"@crevillo Ideally yes maybe. But to be specific PageService is not responsible for this right now, cause it only cares about the Page domain at the moment. If it exposed a method called for instance `getValidLocationsFromValidBlockItems` that would be something else, but a valid Block is valid independently of the Location it is connected to. So I was saying for now it is the view that needs to handle this until we potentially improve on this service as part of aiming to create Page API.
",no
"Well, I have doubts on the original query too, because in that one the hidden groups were excluded without checking anything (see https://github.com/emanuele45/Dialogo/commit/a6c55ebfe4708537febb700130e216213e30d2f1#L0L1820).
I was not 100% sure and so I changed it the way that looked more conservative.

I can make it even more generic and $show_hidden only in the loop.
",no
"@bcclaywell it's kind of ugly to have this internal-only method be exposed as part of the public interface, but I didn't see an obvious way avoid it, other than diving into the mess that is `friend`. I'm trying not to be nitpicky about my interfaces, but if you have a tidy alternative I'd be glad to hear it.",no
"I think my reasoning was users cloning the repo could quickly build an installable package via `make`. I've now changed the default task to be a no-op for users installing the release tar balls. 4f2296fc97caede365e230ed1fa75364afcfee46
",no
"My feeling is that it is and should be scary — it is not reasonable to expect ordinary users to discern when `hash` is pointer-based, so precompiling a `Dict` for an arbitrary key type is a dangerous prospect.  It is safer to explicitly whitelist key types that are okay.

~~`String` keys are pretty common, and they seem to use `object_id`.~~   `jl_object_id` seems to indicate that hashing of immutable types still uses a pointer address via `inthash((uptrint_t)tv) == inthash((uptrint_t) jl_typeof(v))`.

`ObjectIdDict` (and `object_id` in general) is one of those barely documented low-level things in Julia, and comes at a steep price because the keys and values are untyped; do we really want to encourage its wide use?
",no
"can you update your release scripts to set `BRANCH_ALIAS_VERSION` to empty string instead leaving placeholder not replaced.

it will look composer version ugly if build from source:
https://github.com/pld-linux/composer/blob/auto/th/composer-1.0.0-17.beta1.1/version.patch
",no
"@DzyubSpirit @aqrln 
- `gs` - Global Storage API (implements StorageProvider)
- `gs.storage` - instance of gs.StorageProvider to store data locally
- `gs.connections` - collection of gs.StorageProvider instances to access remote shards
- `gs.StorageProvider` - is an abstract interface for Global Storage API
- `gs.MongodbProvider` - binding to Mongodb API (implements StorageProvider)
- `gs.Connection` - remote server (implements StorageProvider)
- `gs.Category` - not implemented as of now
",no
"@cvium Just wanted to double check you saw the unit tests are failing now. Not a big deal, but the release process will be held up until we sort it out.

You can always double check on the branches page the status of the tests, it'll link to both travis and our jenkins when you hover over the :x: or :heavy_check_mark: on the develop branch.
https://github.com/Flexget/Flexget/branches
",no
"In my view, this binds together two unrelated things:
- A data type to hold data about EC2 Provider
- locators specific to the CFME UI

This means this type is now less useful for API testing or direct database manipulation.  I think the data container and the UI information should not be combined in this way.
",no
"for context, I've been regenerating all 4 repositories based on gcc8 and I was planning to release ravenports after the final one was built (all all uploaded).  A major change like this threw a spanner in the works.
I probably should have declared the reposititory ""frozen"".  I'll probably going to revert this in any case in order to release ravenports without too much change.  (I was hoping that the packages would match the source release but that's not possible now, so better to just to limit the changes)",no
"I'd like that conversation to be from the ground up though. I don't like starting with procedures built around the interests of an entity.. I'm all for starting off with this having procedures that we expect the 'community advocates' (the term I used in here) to follow, but I think those are going to look significantly different if they're done right.

In comparison:

1) we could handle incidents individually like the conferences, where someone emails a community advocate and they take whatever steps they feel are necessary with that information. it ultimately dies in their inbox with their decision.

2) we have some kind of expectation of documentation when there is a punitive action taken against a community member. For instance...

```
Alice is a potential user asking questions about Chef on IRC.
Mallory is a community member who is answering some of those questions.
Wendy is a Community Advocate, who handles community incidents.
Bob is another existing community member.

Alice makes a comment that appears defamatory of Chef to Mallory.
Mallory sends Alice a private message threatening her for what she said.
Alice reports the incident to Wendy, who investigates.
Wendy determines that Mallory should be banned from the IRC channel for her behavior.
Bob thinks Mallory has always been helpful, and wants to know why she was banned.
```

Where are the facts documented? Are they public? If not, who can access them and when?
",yes
"Hey..There is a bug in PyCharm related to the method it uses to perform git commits. The bug makes the pre-commit hook not work properly. The issue had already been reported by another user when I went to their site to report it. I added more details to the report so hopefully it will be fixed soon. Until then, use the terminal (within pycharm) to perform your git add, commit, and pushes.  Cheers!
",no
"The reason for this extra guard as well as `got_input` is to prevent a race or posting a UART task request before uart_init has been called.  But you are correct below that there is a small time window where the UART posts a task request before the Lua initialisation task has been scheduled (and this race cond is also in the current implementation..
",no
"@UniversalMediaServer/developers I am able to do a release today (within the next 8 hours). There are a couple of small bugfixes I'd like to include in the release if anyone has time to merge them:
https://github.com/UniversalMediaServer/UniversalMediaServer/pull/1504
https://github.com/UniversalMediaServer/UniversalMediaServer/pull/1503",no
"I kind of want to rip it out since it doesn't seem like it's a good solution for what it's intended to do, either...

This sort of thing should really be done in pull requests and conversations with me, so we can work out an architecture that doesn't have flaws like ""sometimes users can't choose moves"".",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 83](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=1778&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 1, passed: 74 Build time: 03:26:30
### Failed tests

```
VSTest: GeometryTests.XbimModelExtensionsTests.CanGetRawGeometry: <no details avaliable>

```
",no
"I just checked a few distributions:

Arch: 3.3
Ubuntu 17.04: 3.2.4
Fedora 25: third party provided 3.1.5

I didn't bother to check Debian because that automatically loses points for having a stable release mired several years in the past.",no
"You would, indeed, get a new instance for each JRuby.  But each instance would be a thin proxy wrapping around the shared `puppet_server_terminus_shared_context` object, which would be injected by Puppet Server...

The atomic operations would be part of that shared object, and thus it should not be a problem to have multiple instances of the wrapper, and no dubious locking mechanisms should be necessary.
",no
"VoyagerOne's patch starts with the assumption that ttCapture-moves are in average so superior to all other quiet moves, that we can further LMR-reduce them safely. This patch assures this by checking if the ttCapture bestMove passed singular extension criteria and thus is verified to be superior to all other moves at least by a given margin. ",no
"I follow the same recommendation as for closing streams to throw any errors if setting auto commit fails instead of always ignoring them silently, see https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/IOUtils.html#closeQuietly(java.io.Closeable...)
",no
"My initial thought regarding requestHandler configuration was to keep it very simple, just by holding a list inside the WroFilter and exposing addRequestHandler or setRequestHandlers method. Encapsulating requestHandler configuration inside a factory does also make sense. 
Another approach would be the RequestHandlersFactory as interface which would be a very extensible approach and leaves enough room for future changes. Example:

```
public interface RequestHandlersFactory implements ObjectFactory<List<RequestHandler>> {
}
```

and inside WroFilter:

```
public class WroFilter extends Filter {
     private RequestHandlerFactory requestHandlerFactory = new DefaultRequestHandlerFactory();
     //add setter for this factory
}
```
",no
"I was modeling this after DiskBlockObjectWriter's TimeTrackingOutputStream, which doesn't track time there:

``` scala
  /** Intercepts write calls and tracks total time spent writing. Not thread safe. */
  private class TimeTrackingOutputStream(out: OutputStream) extends OutputStream {
    override def write(i: Int): Unit = callWithTiming(out.write(i))
    override def write(b: Array[Byte]): Unit = callWithTiming(out.write(b))
    override def write(b: Array[Byte], off: Int, len: Int): Unit = {
      callWithTiming(out.write(b, off, len))
    }
    override def close(): Unit = out.close()
    override def flush(): Unit = out.flush()
  }
```
",no
"It seems that this strategy hinges on packages consistently specifying versions in their package json files, which I'm pretty sure is not very consistent across the ecosystem. As part of this tool (and perhaps the v4 release notes and other documentation), it might be a good idea to provide strong guidance to loaders and plugins about how to specify this dependency. Possibly even proactively reaching out via issues or PRs. I bet there are a lot of packages that just use * or specify no formal dependency at all.",no
"Unless the verdict on 67ed8d1 is that the fix is extremely critical, I think the plan of continuing to release cb9bcae93a32b42cec02585c387396ff11836aed as 0.3.7 is best.  We can either recommend users that encounter 67ed8d1 to use a nightly/custom build of 0.3 (which seems the most likely since we've been living with this leak on both 0.3 and 0.4 for quite a while now) or we can immediately release 0.3.8.

I've got binaries up for 0.3.7 now, so we should be ready for formal release announcement when you wake up.  I'm going to let you do the honors of announcing on the mailing list since you all but single-handedly did the backporting and pushing out of binaries for this one.  The binaries are in place, a [pull request](https://github.com/JuliaLang/julialang.github.com/pull/220) is ready for the website, and you know the formula for the announcement email.  :)
",no
"Imho yes

> On 09 May 2015, at 11:07, Quentin Santos notifications@github.com wrote:
> 
> I had missed the notification for this conversation. I will get back to it. So, is Visual a special case that should catch the warning so that it is displayed properly?
> 
> —
> Reply to this email directly or view it on GitHub.
",yes
"@irrationalfab Can you explain why you made this change? Setting top level absolute font sizes is a bad idea (for our shared styles) since all relative font-sizes are getting larger as well, which made the search engine look quite funky. Let's come up with a more specific solution! :)
",no
"Plan was to have it in 1.17.3 -- you may be right, though, that it would be better to release as 1.18 (even though that isn't strictly warranted by the Haskell version policy).  Note that the dependent library pandoc-types did have a bump in the second version number; that's the bit that produces the JSON.

In either case you should make your filter handle both formats.  If you're writing it in Haskell this should be more or less automatic (assuming your filter and pandoc are compiled against the same version of pandoc-types); otherwise, it may take some work.  The changes needed to pandocfilters (my Python library) were minimal. Note that your filter can still produce things like `{""t"":""Space"",""c"":[]}`; this will still be understood even though the `""c"":[]` is no longer needed.
",no
"It's just about correctness, which is more important than anything.  

Most source files are 50-200 lines long.  I don't think it's going to affect performance in any meaningful way.  Furthermore, we have no profiling data or users reporting performance issues, so this discussion is premature.
",no
"This is kind of a hard problem (:tm:) because you may be seeking to release a previous version and also how is rever to know that you want / don't want to bump the minor number.  I am open to suggestions here, for sure. 

A warning would be nice, but should it error? Should there be a `--safe` flag?",no
"@tbosch in the future can you please make the commit message more helpful for app developers/doc writers? during the release review we couldn't easily tell what this was doing and that makes it even harder for doc writers and developers to understand what now works or what's the new thing they can now do.

I think what you are trying to say is that ""the Renderer is now available for injection in the component. You can use it to do custom dom manipulation in advanced use-cases like from within a web worker"".",no
"So, I'd say explain in the commit msg the reasons and change `/Zc:inline` for release builds only, and if everything compiles we should be good to go. Though some preliminary testing would be nice to have before merging, just in case.
",no
"remove static from EventAction and the actions. Static means only one copy is shared among all instances of MagicCoinFlipEvent. Say each card has its own MagicCoinFlipEvent object, but they will all use the action from the last copy created since it overwrote the shared MagicActions.
",no
"If you mean in Microsoft's CRT, it can be `EINVAL` or `ERANGE`. And which seems to invoke Dr Watson in both Release and Debug-mode. (I had to look in MS's sources for this. Thanks MSDN).

*Edit*: Seems strange to me how this function is used after `install_bpf_program(p, fp)` fails in some places.
Seems this function could put an unrelated `Error N` in `p->errbuf` (?!).
E.g. in `pcap_setfilter_win32_dag()`.
",no
"I don't quite understand this. Don't we trust all the anchor certificates? If I understand this  correctly, some anchor certificates are not marked as trusted, and therefore Secure Transport can return ""Unspecified"". But we actually trust even those certificates. In that case, why don't we mark them all as trusted in the first place? Or does it not matter?",no
"I'm not quite sure, yet. I am still looking at how this is being used, and trying to figure out a good strategy. Maybe the Cache class isn't even necessary. I'll open a pull request to discuss things further once I've collected some more information and made up my mind.
",no
"i want the Key and Block objects for the added type safety and the methods:
- https://github.com/ipfs/go-blocks/blob/master/key/key.go
- https://github.com/ipfs/go-blocks/blob/master/blocks.go

casting is not a huge deal because they are the same underlying type, so it's not expensive to go. only annoying to humans (but maybe also helpful with type safety)
",no
"@isometriks not sure if thats the best api. This allows me not to be forced to save the class attributes nor the options anywhere, i define where i want to see this menu as a navbar.

this is especially useful with a menu referenceing block in cmf where you  then can define freely which subtree to use and show
",no
"@michaelcahill, this is the merge code that's scanning configuration strings, creating new names for the nested structures that are later sorted and merged; the problem is applications can put any character they like in the shared library name associated with the `extensions` configuration string, and so any character I use as a separator is potentially a problem, it might appear in a key.

I'm switching from dot to left-brace as a separator character, since left-brace is a JSON quoting character and so really unlikely to appear in JSON keys.

Please let me know if you have a better solution!
",no
"Why this change? I have the impression that the old code is the right one. We want the container of the data to be shared, not the data. The data is currently just none, so this won't force the sharing of the data.

If my analysis is right, why the tests passed? This would have disabled all sharing and I taught you add a test for it. So I probably miss something.
",no
"@b4n ok[0], but in this case it shouldn't matter right? since it would never need to access the private fields at the end of the struct, it shouldn't matter what is the size of `GeanyAutoIndent` or what the layout of the type that the `GeanyBuildInfo` pointer in `GeanyData` points to?

[0]: How could that possibly work since the layout of structures is compiler/implementation defined and can vary depending on a number of things, including compile-time `#pragma`/`__attribute__()` which can be used to customize the layout of the struct? Even as you eluded to earlier, the size of enums is implementation defined and can vary program by program (AFAIK they can be one of a number of different types as long as the type can hold the values in the enum).
",no
"It was intentional in this commit, yes - only because I was previously doing ""2&>1"" to try to prevent that from happening and forgot that messed up the boolean logic. I figured it was more important to quickly release something that worked and had a weird side effect than keep something out that was pretty broken!

Nice, I'll check out `Open3`, thanks for the link!
",no
"@jneem unless you are talking about https://en.wikipedia.org/wiki/Quilt_(software), maybe this was not the best name to choose ;-) Quilt is already used to manage patches (it is kind of a hacky lookalike to Darcs/pijul)... so it is a project that is very similar in spirit to yours, but totally different, so that's extra confusing.",no
"Note that the reason why we didn't expose VirtualBox host support is because our VirtualBox package is not secure (due to the `--disable-hardening` configure flag). So this is not really a good idea until the security situation is improved.
",no
"It turns out that this problem is not caused by the snap to boundary component, but rather by the weight matrix component. I have pushed a commit that adds more unit tests for horizontal and vertical lines to ensure that this works as expected. The vertical line case is also fine as I confirmed this by manual calculations: even though the value here will be large, the division makes the adjacent side very small and Python will interpret this as 0 in the next line, so there should be no problem here.
",no
"Will you please explain why you keep undoing my changes?
I'm trying to keep the builders as separate as possible from the Tree and the Model, that way you could always generate the code without having access to the one or the other. The original code allows you to create type parameters for classes and methods having only a String and a list of ProducedTypes, both easy to come by, you can't easily make your own TypeParameter if you wanted to.
",no
"Context: Is it worth inlining this function https://github.com/joewalker/gecko-dev/blob/pr9-tip/toolkit/devtools/gcli/source/lib/gcli/index.js

> Yes, if that's the only thing on that object I think it'd make sense to move it to another shared location just to limit the surface area of the APIs the tools have to deal with. Would it make sense to move it onto system?

I'm not fond of system as a destination because hiddenByChromePref is very Firefox specific and system.js is used on the web.

I'd like to move the files in `/toolkit/devtools/gcli/source/lib/gcli/mozui` and `DeveloperToolbar.jsm` to `/browser/devtools/commandline` and maybe this file should be move with them (and get merged in somewhere).
",no
"Ok, regarding mp_emergency_exception_buf_size comment below - I guess, this comment is somewhat ambiguous - ""stack_top after end"". stack_top indeed points after end for stack scanning ;-). If you don't want to add sub-structure to separate out root pointers from the rest of structure, then at least visible comments ""root pointers start here"", ""root pointers end here"" would really help.

And then mp_emergency_exception_buf[](array case) clearly shouldn't be in root set.
",no
"The relationship is that a post has_one summary, so two things to consider are:
- the summary is a singular resource (has_one, not has_many)
- a summary should probably be accessed at url /topics/:topic_id/posts/:post_id/summary

Therefore, you could do this instead:

``` ruby
resources :topics do
  resources :posts, except: [:index] do
     resource :summary
  end
end
```
",no
"> I don't think it's good to use technical restrictions to force users in one direction.

You're right. I accept your very well put together argument. I've conflated the ""I want to be able to do this in my own area"" with the ""I want to be able to do this with multiple recipes"" and that was a mistake. Thank you for putting me right on that :+1: 
",no
"I know you've changed like for like here, so my comment doesn't necessarily block this PR, but we should really not be doing this inside a test. Perhaps we can make it a dependency of the test/default rake task. Publisher lets mongoid handle it with [mongoid.yml](https://github.com/alphagov/publisher/blob/master/config/mongoid.yml#L14)
",no
"Installing via gem is not recommended way for using Fluentd and its plugins. gem does not have enough functionality to lock dependent gems. Ruby community often recommends to use [bundler](http://bundler.io).
If you still want to use this plugin with Fluentd 0.12.x and using gem directly to solve its dependencies, please use `gem install fluent-plugin-grok-parser -v '1.0.0'` instead of without `-v` flag.
",no
"Changing the deprecation warning without removing the deprecated code is less than desirable.

However, I'm completely okay with you changing it to simply add a comment that it's deprecated for the moment. I'm not concerned about preserving these properties for 2.0 and I will try to remove them ASAP from the remaining core plugins that refer to them.

@atrigent any ideas you might have for how to more loosely couple this would be nice. I've not decided on a good way to pull them apart. I'm leaning toward breaking the Permissions and Tags plugins (and all the others, too) in half wherever there's both behavior and UI. Perhaps the best path right now is to preserve the functions to add the fields to the Editor and Viewer in these plugins, but _not_ invoke them automatically when the plugin is added. For 2.0 I'm trying to move away from the `addPlugin` API entirely and toward an everything-standalone, everything-has-an-API, everything-explicit approach. Instantiate Editor. Instatiate Viewer. Instantiate Tags plugin. Pass Viewer and Editor instances to Tags instance or perhaps pass the field from the Tags instance to the Viewer and Editor inside application code.
",no
"The changes in headers-structure.html should be reverted, since those tests are shared with other browsers in the w3c/web-platform-tests repository (and our local changes get upstreamed automatically).

Additionally, we should delete the ini lines for tests that now pass, since that's the default.
",no
"This should use World.SharedRandom.

Stuff which affects the world state (like particle amount or movement) should use the shared random seed, while stuff which would only affect the local player (voice randomization) can use Game.CosmeticRandom.
",no
"This is item 13 in Bloch's ""Effective Java""; he's definitely against _lightly_ raising accessibility from private to protected, exposing internals and committing to extra API for subclasses. (Though he'd also want me to make the class final, cf. his item 17.) He's not against it altogether, of course, but only as part of rather careful design for inheritance: reflex choice should be to maximally limit visibility (which, in different ways, both private and static do).

The private, static modifiers give the reader two easy guarantees: no subclass depends on this, and changes in instance state won't change the behaviour here. These are useful to know when wanting to understand how the class hangs together and, especially, how we have to be careful about changes: if we want to change things around, they mean we don't have to clutter our mind with two concerns to which we'd otherwise have had to attend. They also allow the compiler to check for us some of our assumptions about the properties of the method: it's good to have the compiler yell when something's not as we thought.

Surely if a subclass wants to use it one can easily expand the visibility at that juncture: subclasses are probably also going to be part of the OMERO repository.

If you're unpersuaded -- if in-house this is a bit of advice we've decided against -- then I'm not sure how to judge but of course I can start writing ""protected"" where I'd normally write ""private"" for methods -- I just thought I should protest slightly before caving. (-:
",no
"I can understand avoiding circular dependencies; as a rule, I strongly prefer data structures to be as close to the matching code as possible, and in the case of `__wt_cell` and `cell.i`, they're underlying functionality, there's no risk of a circular dependency.

We should have a policy, though, it's confused at the moment.
",no
"I think Nick was making a distinction between fingerprinting that's purely passive (e.g. network-stack level differences in requests (header ordering, time skew, packet-level detail, etc), and fingerprinting that is based upon features exposed to an execution context. That seems like a reasonable distinction to discuss.
",yes
"You can force a bunch of unrelated code to be modified so that they can instantiate a group before they add anything to the bus. Something that, btw, might not even be possible depending on how you want to design the queues (e.g., you wouldn't be able to add the main UI, sql UI and streaming UI listeners to the same queue if you enforced that).

Or you can do this, and avoid modifying the rest of the code.

Again, localized changes vs. optimal change. Doing everything at once complicates things.",no
"Please do not add translations only in one or some language files. It is then quite painful to track the missing ones. Always add them in _all_ language and make the untranslated string UPPERCASE. If possible, make it a separate commit with an explicit message so people can translate the other languages if possible. Thanks! 
",no
"@lefticus I'm trying to understand what this does.  Basically, each module gets a static variable to keep track of GCReferences.  You are just adding an additional anonymous namespace to each module to further separate the static variables in each module?  Did you ever try putting a break point or log in the SwigGCReferences destructor to see when/where it was being called from?
",no
"As far as I see this is the only variable shared by all posts,
everything else is stored in the single post variable.

Some other websites use a different shortname for different profiles, for example we might want to use 'otnoitalerni' for development and 'inrelationto' for production.
So we will probably move this variable in a different profile.
",no
"I am working on rewriting it all using open stack shade, so it should get
easier and more stable in the next release of salt

On Thu, Jan 28, 2016 at 12:52 AM Tehseen notifications@github.com wrote:

> Great, I am on RCv2 so currently I use metadata to assign IP, but
> deploying a memory server doesn't work since we use libcloud and we cant
> deploy with block storage, waiting to switch over to nova to do so, just
> needed some guidance, thank you.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/gtmanfred/salt/commit/ec7e45fbfb24ff83350696c7edc3793c58e745a6#commitcomment-15724722
> .
",yes
"> failed due to missing libselinux.so.1

That lib has been excluded based on the comments from AppImage here:
https://github.com/AppImage/AppImages/blob/master/excludelist#L101

I was not confident in this workaround to create the dummy lib, and to add that complexity to the build script. I will add it to the linux-dependencies page, thanks.",no
"All I'm saying is that in section 2.2 we state that there are shared data models based on FITS. Then we talk about the lack of data models in FITS. I _think_ you are saying that the _standard_ is lacking key low-level data models, implied by our subsections which say error handling, improved WCS, provenance, data quality and units. So I think my issue is the use of the term data models for ""this is a full specification of data from a heterodyne array"" (MBFITS) and also ""how do we store data errors in a way that everyone understands"".
",no
"this is dangerous and error_prone (using a mutable data structure as the default value). If in the future somebody updates the `properties` dict in the method, it will lead to test leakage. Please use `None` and do something like `properties = properties or {}`
",no
"I'm looking forward to the next release series as Brice has been kind enough to address many of my growsing complaints. @ggouaillardet I'm thinking it would be best if we create opal_hwloc_base functions that abstract the impacted functions, ensure that only those are used throughout the code base, and thus we concentrate all the version #if's in one place. 
",no
"Because friendship is an invitation to couple the classes too closely together. Besides, you have it backwards: We're giving GncDateTime access to GncDate's sole private member, and the only reason to do that is to make it easy to construct a GncDateTime from a GncDate in this particular implementation. Once the GncDateTimeImpl is constructed it has its own boost::gregorian::date accessible via m_time.local_time().date().",no
"@TomOne I have added this package here as it hasn't been updated in years, so there is little point in creating an auto package for it.  This latest release is being created simply to take a dependency on DotNet3.5, which is required for installing this on a fresh Windows 8 machine, where .Net 4 is the only thing installed.
",no
"No, I will increment it as I release a new version that has cards added.
It causes the database to update from server to client during connect process if the client has a lower number in its db.
You can do the same as you check on the force DB comparison box within the connect dialog.
",no
"> This service already exists. So it's not as if the amount of LMR use is increasin

I understand. If the API to resolve the name to a path isn't exposed it's ok to use the one that returns an Assembly. I just wanted to make sure we have exhausted the better options.
",no
"This will fail to release the lock if `function_to_lock` throws an exception. Instead, you should do:

```
lock.acquire()
try:
    return function_to_lock(*args, **kwargs)
finally:
    lock.release()
```

or the equivalent:

```
with lock:
    return function_to_lock(*args, **kwargs)
```
",no
"I just put this in to get the AMI provisioning to work.

We have an Ansible role for `memcached`, but that'll only work if the cache isn't meant to be shared across the application server cluster. If we want it to be shared, we're probably going to have to go with Redis (via ElastiCache).

It may be worth leaving this for now and opening an issue for that though. When Steve was looking at replacing the session storage for OTM, we ran into some sad default behavior by the Django Redis library. There may be some settings we can adjust that'll allow us to use it and have things work a bit better.
",yes
"So the migration is making notes_note.user FK to auth.user, but there is already data in the database which violates the FK:

```
karmaworld=# SELECT distinct(user_id) FROM notes_note ORDER by user_id;
 user_id 
---------
       1
       2
       3
       4
       5
       6
       7

(8 rows)
karmaworld=# SELECT id FROM auth_user;
 id 
----
  1
  2
(2 rows)
karmaworld=# SELECT * FROM users_karmauser;
 id |         email         
----+-----------------------
  1 | opt-in@site.tld
  2 | ema@il.tld
  3 | test@test.com
  4 | em@il.tld
  5 | andrew@karmanotes.org
  6 | test@53w5.com
  7 | wows@yay.blag
(7 rows)
```

Welp, I think it's safe to say we can delete the contents of the karmauser table, or even the table itself. There's probably a migration that does that (yup: `apps/users/migrations/0002_auto__del_karmauser__add_userprofile.py`).

Unfortunately, the FK constraint needs to be removed from notes_note first, but no such migration exists. There is only a migration that changes the FK, which can't be done if there's invalid data. And it'd be messy to retrofit a FK removal before the delete.

So can I simply update Note.user_id to null in the migration prior to deleting the KarmaUser table? That'd be fun. But alas, there were problems.

Nope. This is just guess and check now. Man, changing FK from one table to another is a terrible idea. Let's never do this again :(
",no
"I'm pretty sure `with-lock*` will double release in the case that there's no exception, but the locking is nested.  This is a real problem you're trying to fix, though, so let me think about how to best address it.  Thanks for delving so deep into the code, greatly appreciated.
",no
"For shared options you can make a separate module `Gem::AuthorizationOptions` that has `add_key_option` and `OptionParser.accept Symbol`.

See [local_remote_options.rb](https://github.com/rubygems/rubygems/blob/master/lib/rubygems/local_remote_options.rb) for an example, it has `accept_uri_http` and various methods that add different options.

It gets included in a command [like this](https://github.com/rubygems/rubygems/blob/master/lib/rubygems/commands/install_command.rb#L19) and the needed options are added [in initialize](https://github.com/rubygems/rubygems/blob/master/lib/rubygems/commands/install_command.rb#L33).
",no
"Oh, I see. 

> I don't there's another way suppressing such warnings just in those cases that doesn't suppress them everywhere.

Indeed, I think there is an Emacs bug report about this somewhere... yup: [Bug#4837](https://debbugs.gnu.org/cgi/bugreport.cgi?bug=4837)



",no
"TeamCity UnitsNet :: Release Builds [Build 1.13.0-stable.11](http://anj.no:8500/viewLog.html?buildId=72&buildTypeId=UnitsNet_ReleaseBuilds) outcome was **FAILURE**
Summary: Error message is logged (new); error while applying patch Build time: 0:0:6
",no
"> regarding deprecation message; I would prefer it to be there, it makes it easier to remove the --local switch on a future release to keep the code base clean (if you don't bother users now, you'll have to bother them later, or drag legacy code along forever). But thats a matter of opinion.

(Sidenote on this one: I agree with you in principle, but this is a fairly localized bit of code in `luarocks.command_line` and I think the psychological cost of breaking interfaces for users in this case is greater than the effect it would have on cleaning up our codebase. I still have old flags from LuaRocks 1.x sitting there as compatibility flags that translate to the new ones and they don't really hurt because they're not spread all over.)
",no
"Yup. To make it happen, several things need to happen:
- Make `EntityModelDao` and `Entity` extend `Comparable<BlockingState>`
- Expose the `recordId` (or `totalOrdering`) in the `Entity` objects

I've created https://github.com/killbill/killbill/issues/269 (it's a fairly large API change).
",no
"@Michael
I have understood the problem and used /bin/bash. It works now. I used
ProcessBuilder insted of Maven Shared Utils. See the branch SUREFIRE-1302_3
[1].
I want to push the branch to master and let the users to test it yet before
making release.

[1]:
https://git-wip-us.apache.org/repos/asf?p=maven-surefire.git;a=shortlog;h=refs/heads/SUREFIRE-1302_3

On Sun, Jun 25, 2017 at 12:51 PM, Tibor Digana <tibor.digana@googlemail.com>
wrote:

> I found the root cause.
> Problem with executing native Linux command ""ps -o etimes= -p $PPID"" in
> java is character $.
> I tried to remove it or wrap in brackets but nothing has solved this issue.
> What is the problem? Shell does not access env variables from java
> ProcessBuilder?
>
> On Sat, Jun 24, 2017 at 10:34 AM, Tibor Digana <
> tibor.digana@googlemail.com> wrote:
>
>> @Michael I have pushed my changes to the branch SUREFIRE-1302_2.
>> Pls try to run the unit tests on FreeBSD.
>> Thx
>>
>> On Fri, Jun 23, 2017 at 5:50 PM, Michael Osipov <notifications@github.com
>> > wrote:
>>
>>> Am 2017-06-21 um 19:58 schrieb Tibor Digana:
>>> > @Michael
>>> > I started appliance FreeBSD on VirtualBox but Network adapter still
>>> does
>>> > not allow me to connect to internet.
>>> > Do you have any idea how I should setup the adapter and OS?
>>>
>>> Did you select NAT type adapter? This should easily work for you.
>>>
>>> >
>>> >> I am downloading freebsd to virtualbox.
>>> >> http://www.osboxes.org/freebsd/
>>> >>
>>> >> On Sun, Jun 18, 2017 at 1:19 PM, Michael Osipov <
>>> notifications@github.com>
>>> >> wrote:
>>> >>
>>> >>> This should probably moved to a separate issue.
>>> >>>
>>> >>> —
>>> >>> You are receiving this because you commented.
>>> >>> Reply to this email directly, view it on GitHub
>>> >>> <https://github.com/apache/maven-surefire/commit/b9034a3bbb3
>>> 2a27a2d7b66e4d516c2dac61fce29#commitcomment-22610685>,
>>> >>> or mute the thread
>>> >>> <https://github.com/notifications/unsubscribe-auth/AA_yR1tJu
>>> 2CW2Hc0-l0nzMsb6cOTz5N4ks5sFQfVgaJpZM4N9cS2>
>>> >>> .
>>> >>>
>>> >>
>>> >>
>>> >>
>>> >> --
>>> >> Cheers
>>> >> Tibor
>>>
>>> >>
>>> >
>>> >
>>> >
>>>
>>>
>>> —
>>> You are receiving this because you commented.
>>> Reply to this email directly, view it on GitHub
>>> <https://github.com/apache/maven-surefire/commit/b9034a3bbb32a27a2d7b66e4d516c2dac61fce29#commitcomment-22727724>,
>>> or mute the thread
>>> <https://github.com/notifications/unsubscribe-auth/AA_yRydbxoF6C62Mhn6C5dXsElshsLNRks5sG97AgaJpZM4N9cS2>
>>> .
>>>
>>
>>
>>
>> --
>> Cheers
>> Tibor
>>
>
>
>
> --
> Cheers
> Tibor
>



-- 
Cheers
Tibor
",yes
"""never"" is too strong and not true. Suggest: ""Conversations aren't lost or forgotten. People can be involved in conversations more easily because they can participate asynchronously. Indexed information from asynchronous conversations can be discovered later more easily, whereas water-cooler conversations are ephemeral and the information is lost for-ever.""

Example: I've had more luck finding info by searching my gmail than I have trying to find stuff in Atlassian Confluence. Their search is fucking awful.

Avoid ""nor"".
",no
"Turns out it I forgot that ""may"" applies to the whole effect, so if you choose no target, the trample effect does not occur. Thanks for bringing up about this card, it isn't support by scripting yet. Will move it back to scripts_missing.
",no
"So, I think the concept should be to enable users who have review-permission on a record to open that record in any single-record method (READ, UPDATE, DELETE - if they also have permission for that method, of course) in regular CRUD, i.e. including component views.

That way, unapproved records can still be limited to realms while sharing approved records across realms, which is why this was separate. I still see this as required.

And with REVIEW and APPROVE being separate permissions, we can allow many hands to edit a record without implicitly allowing everybody to approve it. But that was always the design - no concept change here.
",no
"Might it also be an idea to add a separate target that runs Faktory with a password? Or just have a Makefile variable that, when set to a non-empty string, causes a password to be used. For example, if I could do this, it would be super convenient:

```console
$ make drun
... faktory runs without password ...
$ make PASSWORD=test drun
... faktory runs with password set ...
```

I believe what you'll need to do is place `-e ""FAKTORY_PASSWORD=${PASSWORD}""` after `-it`. Making the same target work with and without password might be a bit trickier (unless the Faktory daemon already treats empty password the same as no password).",no
"As far as I understand the name `Release` here is not meaningful. It’s just a directory name, and this convention allows having more than one. To build in release mode, the `is_debug = false` build argument needs to be set. `doc/DevSetup.md` says to use the `gn args` command which starts an editor, but I think you can create the `out/Release/args.gn` file directly.",no
"@binarygary Any reason why we shouldn't tag this up and release it to WordPress.org? We have you having done 1.0.4 and 1.0.5 and the .org repo is on 1.0.3 still. I assume all the changes are backwards compatible safe for existing users, and not just specifics for WDS project work.

Also what could we do up to make it a 1.1.0 release?",no
"A single class variable is shared amongst all implementors of the containing class/module  (class variables are those variables named with a `@@` prefix).

In this case across all requests that the app receives, there will be one `@@per_page_max` variable. If one request modifies `@@per_page_max`, this change will be visible in all other requests by all other users.

This will likely lead to inconsistent behaviour when concurrent requests are in progress that need to use `@@per_page_max`. Its value can change unexpectedly.

Due to this, it is usually a good idea to avoid class variables. Thankfully class variables are very rarely needed, so this ends up being achievable.

In this case, the `@@per_page_max` variable isn't needed outside the `will_paginate(results)` method, so it can just be a local variable to that method. This would involve removing line 2 and renaming the variable to `per_page_max`.
",no
"Not really a comment here: but I do think that we should have different specializations for `PropertyMapping` for collection and map types. Otherwise the templates become bloated with if-then-else constructions that do not really belong there. I chose to make a separate property mapping for mixing in constants (but not really happy about it :) )  I've got another one in mind for mapping non-beans as source.

I'm curious for your ideas here (you mentioned an AST)?
",no
"Sorry a late question here: are we ready to publish our cookbook? I find a cookbook link added here but I think we'd better hide this link until we decide to publish our cookbook with whole navigation for example on the main menu, sidebar etc.
Thanks. :-)",no
"This change seems to trigger more build errors on our side for the shared sources. Is csc version from preview5 too old?

We are getting errors like

```System.Private.CoreLib/shared/System/Runtime/InteropServices/MemoryMarshal.cs(89,91): error CS8627: A nullable type parameter must be known to be a value type or non-nullable reference type. Consider adding a 'class', 'struct', or type constraint.```

/cc @stephentoub ",no
"For what it's worth this was fixed in libsmbios ages ago: http://linux.dell.com/cgi-bin/cgit.cgi/libsmbios.git/commit/?id=23017bdcdbe466df555f63b66d6fcf305ec93260
I asked the person at Dell maintaining libsmbios to issue a new release since it's causing problems.  they did so 2 days ago. (Version 2.3.0) http://linux.dell.com/cgi-bin/cgit.cgi/libsmbios.git/commit/?id=a4d07df6b920584b73c7f6f99279b546fdbd2ec0
",no
"@CodeObsession I tried calling you, but no answer. I just pushed up this code, which should be a good starting point for you, if you want. The Token class is sought out to be jQuery-like in navigating a tree structure. You can open up the separate Rule classes and start typing the rules out in a jQuery-like fashion and if some method doesn't exist that you want, add it to the Token class. The EndOfLine and InsertFinalNewline rules should be done, so look for the others with TODO comments. After we have a good idea how these rules will be enforced, then we can cleanup the Token class and move onto parsing js into AST with esprima and extending it with our own Token tree that adds whitespace and newline tokens. Clear as mud?
",no
":crossed_flags: Well, in this case the current template file used, is maintenance.inc.tpl. To get this accessed until this point, Serendipity has run through different ""runtime"" levels, including plugins and some other template files. This all belongs to the **bag** of currently used and processed files. This is what stays untouched, IMHO. To say this in short: ""It does not kill itself""! And I think, this is a security and safety feature. :flushed: 
",no
"This issue was just discovered recently here, nobody ever reported it until a few days ago. There are also a lot of branchs of tg code, we can't keep track of all their changes, specially when it's in a complete different language. You're welcome to port any stuff that you made on your own branch here though.
",no
"No, target is optional. Ruling on http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=414482 states that ""You may cast Waxing Moon without targeting a Werewolf. If you do choose a target, and that target becomes illegal, Waxing Moon is countered, and your creatures won’t gain trample."".

Hmm, thought I did not check the later case ""if target is chosen and is illegal, Waxing Moon is countered"". Will look into whether that is handled correctly as well.
",no
"Yes, the stable branch is the release + hot fixes. Releases don't need autotools. The stable branch didn't need autotools either, except when it was rebased onto version 1.0.12, because the files generated by autotools had been forgotten.",no
"I saw that you had forked this and had a peek at your changes. You should probably just implement the things you want (like getting a wiki page) in RedditSharp itself, instead of exposing this object. That way, others can benefit from your changes - several people want wiki support in RedditSharp.
",no
"@zmwangx this didn't work. I still get:

```
dpkg: dependency problems prevent configuration of googler:
 googler depends on python (>= 3.3); however:
  Version of python on system is 2.7.11-1.
```

Is there any way we can force package re-generation with the same tag?

In addition, I'm not sure if you have already submitted 2.4 to homebrew.
",no
"Dmitri, what you've done here is a very elegant way of forcing the Phar extenstion to load the manifest, but why it does do is really
going to baffle future maintainers.  Why not expand the comment to explain what is going on here?

```
          /* ext/phar assumes that the Phar's manifest has already been loaded into memory during the
           * compile before executing its stub. The compile has been bypassed in the case of pre-cached,
           * stub.  However 'stat'ing the Phar triggers a READONLY phar_parse_url() on the filename; this
           * opens the file, invoking phar_parse_pharfile() and in turn loading the phar manifest */
```
",yes
"Also, what happens when the user uses the string equivalent APIs ?
Then would need to know what '@' means, or whatever the transport implementation decides to use.

So IMO I would not expose a typed version of address to the end user.
",no
"I am a bit concerned about this method. What happen for example if you call retry on a job that is currently being processed by some worker? It is only safe to call this method directly after a job has failed, ideally even before it is placed on the failed queue.
",no
"I don't have much control over the build system of the port I'm doing, so can't really change the `-I` options.  But anyway it's not such a big problem.

The main issue is as @dhylands points out: that shared files are rather hacky at the moment.  But I'd rather not factor out things just yet.
",no
"I'm nervous about the wildcard pattern implicit here, as well as the one in `check` above and in other identifiers-checking tests below. They will not warn if you add a new binding or bound variable construct to `flambda`, and silently do the wrong thing.

Using exhaustive patterns each time would be reasonable but verbose. Given there are several functions that do checks on variable, would it make sense to have `head_var_bindings` and `head_var_references` functions that would compute the set of introduced and used in the head node, and define your tests from that? (Or maybe even a single function that returns a pair of sets of variables, so that you only have one exhaustive pattern-matching)
",no
"This last part:

> The aim of this project is to expose how the ADS and tracking business works based on third party injections.

is not so precisely true. I'm thinking that:
- we know advertising and tracking be based on third party script injection
- injection is a word that can be misleading (something is used to refer on man in the middle attacks, but I something use to describe a website putting a <script> inside)
- in this paragraph we're explaining how focusing on media and why they have a sort of responsibility toward the online users (because, like is says ""_In other words, by tracking news media, third parties can map out the interests of individuals and groups and potentially target them_"".)  

I think this specific project goal is to show that Media business is a bad choose for the citizen. Just I don't know how to say in polite words :)
",no
"Yup, all makes sense - TBH I was surprised when I saw @dpgeorge commenting on this issue ;)

So... what's the relationship between the googlegroup and the micropython forum? Do they each have a different focus?
There doesn't seem to be any link from http://micropython.org/ to the googlegroup?

I assume the URL listed in these setup.py files will be changing once issue 405 is resolved?

Sorry for taking up people's valuable development time :)
",no
"Is there a reason you chose `.FromMaybe(empty_handle)` over `.ToLocalChecked()`?  Compatibility with the previous behavior?

I don't think any of the call sites are prepared to handle empty handles so you might as well switch to `.ToLocalChecked()`.
",no
"The v prefix here indicates that it may be accessed unlocked. In fact, it's only read unlocked. So you need to reverse these two lines so you null out the reference before shutting it down. Otherwise some other thread could try and perform an auto-save whilst it's in the middle of shutting down.
",no
"One note: We can't pick from just the emoji unused in this tournament, because in this form we don't know which tournament the team is in yet. So this just chooses an emoji not used anywhere in the database. Obviously this means it might not choose any emoji at all if there enough tournaments/teams, but hopefully this will be rare enough that it's not much of an issue.

#461
@philipbelesky ",no
"Ok, well it doesn't seem very atomic to me. When I pull down https://github.com/gradle/gradle/blob/v3.5.0/gradle/wrapper/gradle-wrapper.properties and jar and run it from 3.5 gradlew it all should really be 3.5 not a RC. Why can the deployment / release of the binary take place first and then tag the commit with the real matching release version?",no
"If you use `...` type comments you should do it everywhere. Currently you are mixing no dots with dots. With the `...` type comments you should tell a story. Something like:

If left clicking a block ...
... that isn't null ...
... get the block above ...
... if block above is fire ...
... and the player can't build there ...
... cancel ...
... and compensate for client side prediction.
",no
"It would probably be a good idea to implement the `__enter__` and `__exit__` method so we don't need to release / delete the lock manually and could use it with the `with` function.

So basically, something like this - http://chris-lamb.co.uk/2010/06/07/distributing-locking-python-and-redis/.
",no
"Ofcourse I am humbled by being mentioned in the release notes, but I would also be more than happy with a single ""Notable community contributors: Aldo Hoeben, Lulzbot"" at the end of the release-notes instead. It would be nice if that would be a recurrent thing in the release-notes (and it would also be nice if Johan Kristensen could be retroactively added to the 2.3 release-notes)",yes
"@andrewdavidwong 
This commit breaks separation between ""Qubes website"" and ""Qubes documentation"". While some of those pages indeed should be here (intro, getting started etc), not all. Especially, more sensitive pages (like downloads, donate, funding) should be kept out of qubes-doc. For two (related) reasons:
1. More people have push access to qubes-doc that to qubesos.github.io. We don't want allow any documentation contributor to silently change download links for example.
2. For those pages - when translated - IMO even disclaimer isn't enough - those few pages we should have either verified somehow, or not translated at all.
",no
"Well the singular here refers to the track we are currently opening while I refer to the tracks in general that all cannot be accessed in some cases. I can change to ""try opening them"" since I'm not sure the singular is right (even in French).
",yes
"> Then again, it's not that big of an issue

Right, that's why. In pre-Lenexa review comments from committee members, it became clear to me that trivial default constructors are less important than the extra safety that comes from value-initialization. It's not terribly important, though.

> copy construction and destruction are the important two to be trivial so the x64 ABI can pass objects in registers

I didn't know that!
",no
"This really shouldn't be a user setting, it should be something that a core can request. It would be very helpful actually if this was somehow exposed through the API and the core could ask for it.

It's not the kind of thing that a user should have to care about.",no
"@LBRapid: I have to revert your commit because:
1. `options[:auto_accept]` is type of `String` not boolean
2. If the user choose to skip running migration and choose to load sample_data, the data won't be imported correctly
3. We overcomplicate the generator
",no
"Negative. You chose a value. Say 1, 3, 19, doesn't matter. Then inside the
try catch you do work that might update the answer. If the try fails, it
will go into the catch. In some cases you ignore that and do nothing, in
some cases you just print a stack trace. But if it happens, you continue
on, never getting the user choice but using the one you forced upon the
user. In some cases you even possibly cascade that forced choice onto
another option, or possibly even use the previous choice for the next
choice.
On Wed, Apr 26, 2017 at 4:11 PM نور الهدى <notifications@github.com> wrote:

> @anthonykulis <https://github.com/anthonykulis> The forced choices
> suppose to be the standard choices!!
> but since we forced the user to choose, by keep asking until the user
> choose an option, that initial value would not matter. also I was getting
> errors for not initializing the choices.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/nourelhoda89/automobile/commit/e9c1dbd27b5e02c383f72e359c91224a2e9eef3b#commitcomment-21923186>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AA-8MTouJXUFS37XlTM5QLkIzbeZYGf2ks5rz7MKgaJpZM4NJKJr>
> .
>
",no
"I know this is a really simple way to do it, but it creates an invisible entanglement between these two pieces of code. Because of the entanglement, any of the following would silently break this functionality:
- change order of things so that the suite is made first and then the forms
- make the suite and forms separately in different processes (then the `app`s in question wouldn't be pointing to the same physical object)

Another side effect of this approach is that either all forms get the assertion or none get the assertion; instead of it being on a per-form basis.

Honestly I think the simplest approach is to separate out that logic into a function `should_add_case_sharing_assertion` and move the conditional out to where `add_case_sharing_assertion` is called. In other words, `add_case_sharing_assertion` should just add it unconditionally, and the check should be done here https://github.com/dimagi/commcare-hq/blob/20a548b9e5d191b93900aa87acbf9130606a3fcf/corehq/apps/app_manager/suite_xml.py#L623 instead. The check would be something like `if should_add_case_sharing_assertion(form):`. 

Also this line is unnecessary: https://github.com/dimagi/commcare-hq/blob/20a548b9e5d191b93900aa87acbf9130606a3fcf/corehq/apps/app_manager/suite_xml.py#L633. This is for a situation in which you just want to look at the case list without entering a form, so there's no form involved.
",no
"Not actually working now

clang++-3.8 -stdlib=libc++ -shared -L/usr/lib/R/lib -Wl,-z,relro -o
file2ecadc2db2c.so file2ecadc2db2c.o -L -lStanHeaders -L/usr/lib/R/lib -lR
Error in dyn.load(libLFile) :
  unable to load shared object '/tmp/RtmpENn2gJ/file2ecadc2db2c.so':
  /tmp/RtmpENn2gJ/file2ecadc2db2c.so: undefined symbol:
CVodeSetMaxErrTestFails

On Fri, Mar 11, 2016 at 6:03 PM, Ben Goodrich goodrich.ben@gmail.com
wrote:

> OK, it may work now. Is there an example model that uses
> integrate_cvode_ode()?
>
> On Fri, Mar 11, 2016 at 12:30 PM, Ben Goodrich goodrich.ben@gmail.com
> wrote:
>
> > I had forgotten that, but it is similar to what we need for StanHeaders.
> > I'm try to figure out what needs to go into StanHeaders/src/Makevars to do
> > it at installation time.
> >
> > On Fri, Mar 11, 2016 at 12:28 PM, maverickg notifications@github.com
> > wrote:
> >
> > > Putting something in lib was done in rstan 1.0 up to when Stan was
> > > totally just header files. See
> > >
> > > https://github.com/stan-dev/rstan/blob/v1.3.0/rstan/rstan/src/install.libs.R
> > > and
> > > https://github.com/stan-dev/rstan/blob/v1.3.0/rstan/rstan/src/Makefile.win
> > >
> > > @bgoodri https://github.com/bgoodri do you refer to that?
> > >
> > > —
> > > Reply to this email directly or view it on GitHub
> > > https://github.com/stan-dev/rstan/commit/900c66be59d8029ee242e4d613aac5a8051781bc#commitcomment-16650120
> > > .
",no
"I used dunder ('`__`') here because running the solver to get a single solution is pretty much all that's done when you call `solve` without any sweep variables; having another public way to access that seemed redundant.

EDIT: and now that the solver's result is first passed through a parser, this function seems especially private.
",no
"What's the relationship between the other bits and this one exactly. Do you have to set this if any of the other invalid bits are set? Or only if some of them are set? Maybe we should call it dirty or something, not to interfere with the other invalid bits, if it only describes that it should be re-rendered. The other invalid bits can be cleared many times between two frames. Seems like this bit should persist and only be cleared the next time something is painted.
",no
"Why was this reverted?

Also, Could this fix the issues described in the newer comments here https://github.com/nelenkov/cryptfs-password-manager/issues/14 ?
Summary: People are unable to find a way of changing the encryption password successfully, the device always tells them the password is wrong. This leaves users with the inability to have a better (longer) password than the screen lock password.
",no
This is a bug here in 6.10 (as compared to 6.9.10). The `ReservedWords.txt` file contains about 3 reserved words per line separated by a space character. Without the split it contains invalid reserved words. I can observe this problem in 6.10.5 & 6.10.6.,no
"careful, you're pushing always the latest pydal. We agreed that, if in need of a quick fix that doesn't ""respect"" the ""once in a month"" usual schedule, pydal should tag the golden release and web2py should track that. Pulling in random commits will make life harder for everyone in the need to report a bug (and the ones who should help debug it afterwards)
",no
"Right, that wasn't the case I was worried about. I guess when you mark something as a singleton, it's just marked as shared isn't necessarily kept around as a singleton. Apparently laravel's container is smart enough to only keep one singleton instance around.

Here's an example of what I was worried we'd run into if we had two singletons (which I don't think we do) https://3v4l.org/veSPJ
",no
"If the schema version is higher than the reported Joomla version, the only way to get there is if the user downgraded the file structure without handling the database.  It'll only be an issue with having a newer database schema if there are fields that are NOT NULL with no defaults.

Either way, using a version_compare statement is more correct than what's in place now.
",no
"Did you look at the license?

> fancyBox licensed under Creative Commons Attribution-NonCommercial 3.0 license. 
> You are free to use fancyBox for your personal or non-profit website projects. 
> You can get the author's permission to use fancyBox for commercial websites by paying a fee.

Not sure if our website counts as commercial website. But I guess it's not a good idea to go into this gray-zone exactly for the RMS page;-) 
",no
"We might want a comment here about the goals:

We want data that has diversity across the user-base, even if it's not high entropy, because with the strengthening it at least functions as salt, and of course as much actual unpredictableness as possible. We want to avoid functions which are gratuitously non-portable, or which would be frustrating to reasonable sandboxing efforts or cause concern to someone stracing the process (e.g. we've avoided trying to record background audio; the files we read are files pretty much every daemon reads, etc). We absolutely want to avoid any undefined behavior or anything thing is going to make static/dynamic code auditing tools angry (e.g. don't use potentially uninitialized data from struct padding), even if avoiding it costs some entropy.
",no
"I've been having the same problem, which I worked around in a very ugly way by hacking druntime to detect when a dso was import twice and ignore these... I can share that hack if that can save u time in case u don't have a workaround yet
",no
"that means that if the user provides faulty input it is  silently ignored, but we don't want that --- that will just bring more bugs reported and more bugs in the client code. If the input is not parseble all resources should be freed and an error returned (`HY_E_QUERY` perhaps), nothing should be added to `q`.
",no
"Could you add comments to justify why some testing is done through Java reflection, and some through ASM? I think it is a good idea to test at both levels, but I'm curious about whether ASM offers access to additional data that is needed for this test.
",no
"This feels like the wrong information flow to me. Flowing version names from git repo tags to tarballs/opam packages is much better. Forcing the user to bless a particular commit as being what will end up in the release allows to keep version history in the repo which gives good version traceability and makes tarball creation reproducable. Besides having an `opam` file with a particular version committed to the repo is both ugly and misleading (e.g. for pins).
",no
"> Shouldn't the hasInstance be defined on the QueryResult class?

Nope, in jQuery you have `$` carrying the prototype of `fn.init` so that you check `obj instanceof $`. Here the class is not even directly exposed (but reachable by evil code anyway) so checking via `$` should feel natural for jQuery users.

> And might it not be better to duck-type within hasInstance in case the instance being checked is from another QueryResult (e.g., different frame)?

Not really. If you have your own `$` you also have your own `.extend(...)` definitions. A similar object from an iframe wouldn't necessarily have the same extend so assuming it's a duck doesn't mean it squeaks.

This also introduces a lot of boilerplate to the transpiled version due usage of symbols so I am thinking to actually probably just drop it instead since all you need to do to be sure something is an `$` is just `$(something)` ... that's it: that can be an Array, a QueryResult, a node, a CSS, a window, a document ... it's OK.
",no
"The release process is **supposed** to copy `build/scenario_current.xsd` to `schema/scenario_VER.xsd`. This is only supposed to happen once each release since the XSD shouldn't change after that. Nothing should use `build/scenario_37.xsd`; the versioned schema should not be used from the build directory.

At least, that was my release process (manual copy).",no
"Actually, for opening links there is separate qrexec service (`qvm-open-in-(d)vm` looks if its argument looks like URL and choose the right service):
 - `qubes.OpenInVM` - open file
 - `qubes.OpenURL` - open URL

This means there are separate policy files for them and it can be used to choose different DispVM for this:
`/etc/qubes-rpc/policy/qubes.OpenURL`:
```
@anyvm @dispvm allow,target=@dispvm:online-dvm-template
```

Then, `qvm-open-in-dvm` will just work.

Anyway, this is still a good example for starting custom DispVM.",no
"From my point of view it is a response or a reaction. Similar to other RPGs, the server/game gives you some possible answers and you have to choose one.
In minecraft you also have the choice to not click anything at least in theory.

I don't know whether i would call it `Chat` and i wouldn't use the `Input` thing but the orthers are good.
Chat sounds like being a chat message between two players. I would prefer calling it message.

I don't know how i can describe it, but SetChat sounds somehow strange/wrong.
",no
"My personal attitude is that you can have as many `catch` blocks as you like, just comment them. That's just the way Java is and there's not really a better idiom. (Since Java lacks a Success-Fail monad or true union types or any of the things that would provide better idioms.)
",no
"There's a tiny semantics change here. Before, if the callback was called twice for some reason it would raise an error. Now it will silently succeed.

Would it be worth capturing `self._modified` as a closure variable, to be sure that a delayed callback doesn't interfere with a new call to tpc_begin? (Probably not. I realize these are all edge cases, feel free to ignore. ) Something like:

``` python
def tpc_finish(self, ...):
    modified = self._modified
    del self._modified # better be there or we're being used wrong
    def invalidate_finish(tid):
         self._base._invalidate_finish(modified, self)
         func(tid)
    ...
```
",no
"Thanks, really appreciate it

On Monday, January 26, 2015, Arnaud Wetzel notifications@github.com wrote:

> Ok I will release that in the hour, with the other improvements, It is 6
> am here :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/awetzel/ewebmachine/commit/f66c1078dd483f0230879ff8061a35a377f88dad#commitcomment-9435445
> .
## 

Y.
My company is hiring: https://trustatom.com/jobs
",yes
"I found it a little confusing when data collected upon +8 was drawn on
my server in Germany
http://stats.webconverger.org/x220/temp/048.png

See how we are drawing the 48th day of the year across two days?

wtf is 'POLA' btw?

epoch time kinda implies a UTC if you understand me.

On 18 February 2013 03:07, Chris Down notifications@github.com wrote:

> this change seems to be un-POLA to me. we're not using UTC elsewhere. what's the use case?
> 
> —
> Reply to this email directly or view it on GitHub.
",yes
"I'd suggest that these event names do not need both ""longpress"" and ""click"" in their names. How about just forward-button-longpress and backward-button-longpress?  Or, just emit press and release events for both buttons and let the client decide when it is a click and when it was a longpress...
",no
"Cool.  I won't get to it for a few days but I'll do it.  Can you suggest a test case that will expose this behaviour?  I could do it with low level Lucene but I've been testing all the Elasticsearch stuff using Elasticsearch's integration tests.
",no
"It is still in the current releases, so it is possible to use it. I have not wanted to broadcast it in docs though since it is tied specifically to wanting to use requirejs internals, and wanted to limit exposure to that as I did not want to imply any long term API guarantees on the requirejs internals. I have no immediate plans to remove it, but if I did, it would be in something other than a 2.1.x point release.
",no
"@dazlious already to late to release as major. Patch version is out. And will be applied to all ^3.1.0 anyway.

But yes that's an issue - was wrong. The array is to assert all those namespaces are loaded.

The first namespace in the array gets set as default. Before all namespaces passed acted as fallback namespaces -> that would result in missing keys getting added to the last namespace in that list - which is wrong.

to access namespace2 inside your view you would always had to use `this.props.t('namespace2:key')`

",no
"@m-kuhn what's the reason here?
The commit log was added to the release notes (although not used on my side), that would not work anymore I guess.
That also means the script cannot be used locally anymore as it expects the release to be created. In the case of working with private repos (where we don't have Travis) it might be problematic.
Maybe just comment this out?
",no
"Yes the Atom executable folder can be on any drive letter or folder however there may be some restrictions around network shares given the limitations of SMB/file system watcher etc. 

I do not believe it will auto update. I will confirm that and add it to the list of notes.
",no
"It should not be a singleton. You can always choose to instantiate a single instance of it, but there is no reason for it to be a singleton.

I suggest that you keep logging (where the parser code emits a log message, which might be an error, warning, message, note, whatever) separate from the policy which defines how those log messages are handled (whether warnings are fatal, whether debug messages are emitted, etc.). Further, the way they are formatted for output should be kept separate as well (whether they are printed to stdout or a HTML log file, or whether colour is used). Those policies for hanldling and for printing should be controlled at the top level, outside the parser class. Then the parser can easily be reused by different programs with different logging requirements.

I suggest you look at the Clang logging code. It’s a little overengineered for this situation, but it achieves this split really well, and helps a lot in allowing Clang code to be reused in a variety of programs.
",no
"@pvdlg heades up: the upcoming version of `github` needs us to pass in the `upload_url` from the release, among a few other changes. I’ll probably release github@13.0.0 with the `@next` dist tag tomorrow, I’m checking a few dependends and run their test suites with the new version :) Your tests are great 👍 ",no
"Hey, I just saw the Ruby release times. Sorry I couldn't help out with this more. 

We need to do the Gemcutter plugin dance so we don't get terrible loading errors when we release RubyGems 2.0:

https://github.com/rubygems/rubygems/blob/master/lib/rubygems.rb#L925-L928

I'm totally up for suggestions how we can handle this or just have it ready to roll so we have a few hours, days, etc when RubyGems is breaking for a lot of people when 2.0 comes out. 
",no
"That is not the intent, which is why Func::lower is private. That was just
a refactor.

On Thu, Jun 19, 2014 at 10:07 AM, Gaurav Chaurasia <notifications@github.com

> wrote:
> 
> It seems that now the application can choose to lower each Func
> individually rather can calling the compile routines which invoked lowering
> before. Is there a reason for allowing this or situations where this can be
> useful?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/halide/Halide/commit/e118b7bd565db43bb7d001fa8688e904d694756e#commitcomment-6734696
> .
",no
"@Stefano80 I find this attempt a bit premature, it's trying to many things at once IMO. IMHO we should first try to make the 'margin'-idea also on quiet moves (this [test ](http://tests.stockfishchess.org/tests/view/5b149dde0ebc5902a8b41c5a)seems very promising). The next step would be to find optimal thresholds for both capture margin and quiet margin (also test if it would be better to consider alpha rather than beta), and only afterwards IMO it is a good point to try something more general like your approach. At the moment if your [test ](http://tests.stockfishchess.org/tests/view/5b14bacb0ebc5902a8b41d3b) and the one of bigpen0r passes, then it will be difficult for maintainers to judge which one is better...",no
"LGTM. Note that `cabal` will still use the shared package cache under `~/.cabal` - the index file and the downloaded packages will be under `~/.cabal/packages/stackage`. So the users won't need to run `cabal update` repeatedly in each sandbox.
",no
"@LostCrew some tests are failing -> https://travis-ci.org/sorich87/bootstrap-tour/builds/15096747

Can you have a look?

Also please use `grunt release` to release a new version. It will run the tests and fail to commit / create tag if tests are failing. 
Thanks :)
",no
"@wohali having non-numeric value in emits _is a normal thing_. Let's start from linked documents feature and end with some special case like computation of multiple values depending on group level or just emitting a part of doc's data just because you don't need full doc for use-case on that view.

As for people who tends to copy-paste things without thinking about what these things doing - we cannot solve this issue. Instead of this we should stop repeat ourself about why having `doc`  as value isn't reasonable for 95% of cases and explain that in the docs. As for this example, yes, practically this value may be not needed, yes, for that article it doesn't matter which value would be emitted, but if technically it wouldn't hurt - why not to keep it?
",no
"the 'premiered' and 'aired' infotags should be merged.

premiered is used at tv show level and firstaired is used at episode level.
but both should be exposed as premiered.

see:
https://github.com/xbmc/xbmc/blob/master/xbmc/GUIInfoManager.cpp#L4511
",no
"OK. Hive is the default theme after install, and should also be the fallback theme in emergencies.

I am striving to work on Classic as soon as Hive is more final, and I _should_ be able to get that ready for 4.6 release (along with Remora, the subset of Classic). As for base theme, I'm not sure - up to you, but my preference for future development will always be Hive.
",no
"The current code will still log the LoginUID just not the name.  But I don't think we should report an error on lookups of username/UID not existing either.  Lets just take the check out.  I don't think go will work with identity outside of /etc/passwd.  So this will fail with network based logins.
",no
"I really think there should be standard formatting rules shared by all committers. Changesets like this one, where basically each line in the whole file has changed, are not very useful for reviewing. I know that I could probably get a more meaningful diff using `diff -b`, but if GitHub offers this view, I think one should strive to exploit this potential.
",no
"I wasn't sure why you added it. My refactoring makes it fail, but since I don't see the need for that feature, I left it in for discussion. The comment shows that I think it might be a sensible use case to separate OAuth2 from basic auth endpoints, but I would want a much cleaner separation. Good catch.
",no
"I like that you've put this into an after_create hook. I'm less keen on you passing a block to after_create.

It's better practice to use a named method.  This separates the concerns 
1) after_create do something
2) details of do-something are somewhere else.
Loose coupling is an important programming Best Practise with a wide variety of benefits.

eg instead you'd use:
    after_create :generate_initial_workouts

   # then farther down the page:
    # this generates an initial set of starting workouts for the user
    # generally called on initial creation of a new user
    def generate_initial_workouts
       ...
    end
",no
"On NIV_ABORT, if we are dumping to a file, we dump a stack back trace...

I suppose that could be handled by firing a separate LogMajor for the stack trace....

Also, I was converting a lock failure in Log into a NIV_ABORT so we could still get that stack trace
",no
"I don't really understand why API/ABI breaks are accepted for RC phase. :/ Wish this was reverted for 7.2 too as it's causing much pain quite late in the release cycle when PHP users are already starting PHP 7.2 adoption on Travis etc...
We're now seeing Travis failures due to this breakage regarding Mongo driver mentioned above. Travis is still running 7.2.0beta3 and Mongo driver has broken compatibility today in version 1.2.10 -- this release addresses this BC break while breaking compatibility with <RC1.
Reported here: https://github.com/mongodb/mongo-php-driver/issues/649",no
"> I have no idea of how I could have related Serializable with performance... maybe that was a conversation about some functionality?

It was about the same concern as you raise below, creating more objects for serialization.

>  Anyway, my concern is to get into the rabbit hole of promising compatibility on this very complex API.

That's a problem we'll have in general, commit to persistent formats and only evolve them in a compatible fashion, e.g. a newer OGM version should be able to read (and update) records written by previous versions. That's basically a challenge for all the dialects, but of course plain object serialization makes it even harder.

But both stores which use a serialized form (ISPN via externalizers, Ehcache via JDK serialization) cover a version attribute so we can evolve those dialects, should the need arise. So I'm rather confident that we're in a good situation here (at least I wouldn't know how to to better, would be happy to learn otherwise of course).

> Cool, let's create more objects for each write ! :-(

If you have any better alternative, let me know. As discussed before, making the `*Key` objects themselves serializable is no viable option to me as I'd be much more concerned about any guarantees regarding these super-central types rather than stand-ins just used in a single dialect.
",no
"I don't think so. 2.5 is BC with 2.4, so I don't see the need for releasing 2.4.x versions if a bugfix is needed.

Twig has not used any maintenance branch since its first stable release for instance. All bugfixes are done in master and are part of the next release, which is either a minor or a maintenance one depending on the changelog
",no
"Please be aware that a micro version of 100 or greater limits a protected block to FFmpeg (I do not know if that is intended here). However, that requires checking MICRO explicitly as Libav might already have a higher major or minor such that a whole version check will succeed. An alternative way to limit something to FFmpeg is to use `#if defined(FFUDIV) && ...`
",no
"You can make an HTML node part of the question by putting it inside the `<question>` tag. Or you can make it shared by putting it where the shared-header went, so you still have both options. I tested with v1 again and I could not see any difference in behaviour. Definitely let me know if I'm missing something though!
",no
"Hi Ajay,

Master will be broken -- it won't compile, or it will missing dependencies,
or features will not work, etc. -- until we reach beta.

As with the previous release of BigBlueButton, we go through a period of
design and development and lots of internal testing.

When we reach beta, we'll publish all the steps so anyone can setup a
development environment, install the beta, and start using the beta.  Beta
for us is there are no obvious bugs.

We recognize that some developers would prefer that master is always
stable, there is always up-to-date documentation on how to build off of
master, and that no feature is committed until it's fully tested and
working.  We're not there yet :-).

The last development cycle was quite long, and I can share with you that
we're hoping that this development cycle will be shorter.  That way, we'll
get to beta quicker for you and everyone else.

However, we will not reduce our commitment to quality.  We are prepared to
work as long as necessary so that when we reach beta, it's solid, and when
we ship final, the quality of the product is always higher than the last
release.

Warm regards,... Fred

On Sun, Feb 9, 2014 at 1:08 AM, Ajay Gopinath notifications@github.comwrote:

> Hi Richard,
> 
> As of this commit, is the bbb master branch broken? I'm wondering what you
> mean when you say you are trying to make the ""presentation work again""?
> 
> Thanks, Ajay
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/bigbluebutton/bigbluebutton/commit/f12ec75377032838728d2724f15bc23b2ae6ff72#commitcomment-5318941
> .
## 

BigBlueButton Developer
http://bigbluebutton.org/
http://code.google.com/p/bigbluebutton
BigBlueButton on twitter: @bigbluebutton
",yes
"@ryao I agree, this might be the cleanest fix.  And if it holds up to your testing, and we're unable to identify the exact offending lock I'm OK with merging it.

I just wish we could clearly identify the offending lock which is resulting in the deadlock.  Then we'd be able to more clearly target the fix.  If I were to make a guess I'd wager on the zfs_range_lock().  This would explain when you had such good success with your initial patch which didn't cover the zil_commit() call in zvol_write().  Also the write lock is only taken for the write and discard cases which agrees with your previous observations.

If the zfs_range_lock() is to blame it appears as if we can move some of  the offending allocations outside the lock.  The remaining ones perhaps can be safely flagged with KM_PUSHPAGE to avoid the deadlock.  Commenting out the zfs_range_lock(), zfs_range_unlock() would be enough to test the theory.  You would lose atomicity to the zvol but that's probably OK for the sake of a test.
",no
"Actually, after this commit, I've (finally) read about [auto-plugins](https://typesafe.com/blog/preview-of-upcoming-sbt-10-features-read-about-the-new-plugins) and they have quite nice features. I'll try to take advantage of it in the next release of nice-sbt-settings.
",no
"At the moment, I can't really say why I did it, but I think the name of `m_deferredConfigureScheduled` hints to it being accessed from other threads.
Also the call to `QMetaObject::invokeMethod()` hints that it is expected to be accessed from another thread.

That's it. I am sorry that I interpreted this wrong. I think worst case scenario with my code is that it slowed execution due to mutex locking.
You can revert it at any time. I am away from the PC and can't do it myself.",no
"Can we easily gather data to determine the occupancy of this mapping? I suspect it is very high! In that case, I think we're not gaining much by having a separate mapping from cfg index to bitset index -- the CFG indices are already dense.
",no
"I guess that it can become interesting then to improve the distinction of involved identifiers also by increasing the usage of name spaces besides design choices around [camel case considerations](https://en.wikipedia.org/wiki/Camel_case#Programming_and_coding ""Description for the usage of camel case"").",no
"That does not seem to be the case. Even anonymous users will have the access content permission. As I see it only authenticated (maybe even provider) users should be able to set consent. It does not make sense to set consent for anonymous users.
",no
"Autotune now is done using shared code. It's hard to describe exactly what to add and we currently don't have a good commit to show because function names have been refactored since.

Split kernel might be a sloppy description. In the oldoffice case, we have one kernel that converts input to UTF-16 and another that does the rest, but it does all of the rest at once because it's not iterated. But in this case it's about not doing all iterations in a single call to a kernel. The PBKDF2-HMAC-SHA1 split kernel is a good example. Pseudo code:

```
#define HASH_LOOPS      333 // number of iterations per kernel call   
#define LOOP_COUNT      (((cur_salt->iterations - 1 + HASH_LOOPS - 1)) / HASH_LOOPS)
...
pbkdf2_init()
for (i = 0; i < LOOP_COUNT; i++)
    pbkdf2_loop()
pbkdf2_final()
```

The HASH_LOOPS macro is passed to the compiler when building the kernel.

Actually much of the logic could be nicked from that format/kernel when ""splitting"" this one. It's just SHA512 instead of SHA1.
",no
"cc @ggrin - this should fix your problem

from irc:

> 23:30:35 <ggrin> commenting out everything that _lock does makes it work
> 23:32:28 <ggrin> I think this async.queue leads to a situation where binding
> to the res data and end event happens after the callbacks from the serverHelper have finished their work
",no
"The last version of reledmac on TexLive 2015 is 2.9.0, and `\Xbeforeinserting` feature was added on v2.10.0.
As TeXLive 2015 is frozen, you have:
- or to wait for TeXLive 2015 release (normally 8th june)
- or to install reledmac 2.10.0 on your local texmf tree.
",no
"please try to refrain from commenting out code like this.  Since we have a VCS (namely, git) you can just delete the unneeded code.  It will remain in the history if we need to retrieve it.  It really makes reading the code and writing new code easier.  I do like your solution, though @madhephaestus 
",no
"Unfortunately, I need to go. Not sure if we'll match the 31/5 date. Perhaps change it to 01/06 to be safe and I'll build and release when I'm back or tomorrow morning.

For the website, I'll change the date myself. We need to add the release highlights though.
",no
"`DEFAULT_ACCEPT_CHANGETYPES` is shared system wide, whereas `accept` parameter [here](https://github.com/asudoh/decor/commit/88b88b2e2f140ec60fc256d9343fcfeb8eb94eb0#diff-42788d2d21f9f7ad802e09deec72f34eR380) is per `Object.observe()` call. Letting code [here](https://github.com/asudoh/decor/commit/88b88b2e2f140ec60fc256d9343fcfeb8eb94eb0#diff-42788d2d21f9f7ad802e09deec72f34eR380) handle `DEFAULT_ACCEPT_CHANGETYPES` means the code has to handle `DEFAULT_ACCEPT_CHANGETYPES` for every `Object.observe()` call. Note that `accept` being explicitly specified is very rare.
",no
"@datakurre No problem and thanks for your quick reply. It's perfectly ok to change the options between a major release (1.4.x -> 1.5.x). 

I guess we should make sure that all packages that use robot framework tests should be in the plone_app_testing alltests group anyways, so we wouldn't even need that option, right?
",no
"Good point, I didn't, and this breaks `LindleyF.lpts`. But I think the offending bindings should be specially annotated in the source, and should be restricted to be used as macros (that is, forbidden from being abstract/postulates/etc., so that they can be normalized away). And we'd need to check a few things (probably boring ones) to see that they make sense.
",no
"The use of string values as a substitute for enumeration is a form of weak typing. Any enumeration results in a coupling of names to dependent code. However any change to weak names will silently break dependent code.

Additionally, dependent code will not only take a dependency on the text names (as it must), but will likely also pass through those names as presentation text (as has been done in this bx commit). As a result any change to API's enumerated values (such as recently occurred when `zh` was split into `zh_Hans` and `zh_Hant`) will break presentation assumptions of code that passes the enumerated values directly to the UI (such as the help text in bx, which provided for the user the set of value options in the enumeration). This ultimately requires that the dependent application decouple from the text values in order to maintain control over its public interface.

Finally, it would generally be the case that such tokens would be localized in presentation. This is not the case in bx because it is a relatively low level tool, however other applications are much more likely to map the enumerated values to localized values. This will require a lookup table as currently exists in bx, and in this case the weak typing again becomes an issue.

The use of enumeration and lookup was intentional with these specific issues in mind. APIs should not expose enumerated symbols as text unless the text is the objective of the enumeration (as is the case with the dictionary words).
",no
@nlalonde I'm a little worried that this script is not tested at all as it prevents anyone else from making changes to this script since it would involve figuring out how to get the two databases set up and ensuring all the tables that are copied have been copied.,no
"The default export is a wrapper object that encloses `Strophe`, `$build` etc.
That's what we've been using in Converse since many versions IIRC.

However, pre-webpack Strophe also exposed the wrapped objects globally on the `window` object ~and the above change makes them available like that again~.

See #311 
",yes
"@gbadner No all databases support locking via FOR UPDATE.  I think that is what this change is about.  

@drepshas These kind of changes should all be separate Jiras and PRs, as @gbadner  already mentioned in regards to another change.
",no
"Anyway, I'm still thinking on this. We need to release something that solves the problem generically (because people may be using different versions of this module on the same `res` at once) but doesn't hide potential real leaks, etc. I think I'll have something else to consider tomorrow.
",no
"On the subject though you did come up with a different algorithm than what I thought of.

You seem to have chosen accumulation, for better probably.  I chose a fixed math relationship of the form:  `random += k*(32 - wired)`, where _k_ need only be solved for.  A yet-to-be-optimized solution to this uses the standard floating-point ceiling operation:  `k = (int32_t)ceil((double)(32 + wired) / random);`, or something like that.
",no
"no, I want to prevent launching ssh when it has been configured for the first time via the GUI, thus respect whether it's on or off:

https://github.com/opnsense/core/commit/62ac77d2f608df5065bd38c666029855e3f6d8c2#diff-09f3249b844b641d5564ae047d77e704R200",no
"`nTime` can be accessed without getting the whole header first and is available via `pindexNew->GetBlockTime()` or directly via `pindexNew->nTime`.

Reference:
https://github.com/m21/mastercore/blob/new_m13/src/main.h#L716
https://github.com/m21/mastercore/blob/new_m13/src/main.h#L790
https://github.com/m21/mastercore/blob/new_m13/src/main.h#L803
",no
"Is it just me who expected to see the full text from which the ""During the ... quite a bit [...]"" quote was extracted upon clicking the headline link for this item? Having a direct link to the release download page is wonderful, but can we also have a link somewhere to the ""announcement"" the text was taken from?

Or is this not an excerpt from anything but an original text?
",yes
"The motivating use case was the fact that this method is exposed in reflection API.

Now when I'm thinking of it, it could be of great value for tools like ENSIME that implement ""go to definition"" by figuring out the package from `associatedFile`.
",no
"I believe we can delete it ([I did](https://github.com/Automattic/wp-calypso/pull/19494/commits/42476db085eebc07b1d17b9511e9ecf587bce596) so in separate commit) but I'll have to still test running this and see if it still works after these changes.

I had to comment this line out before pushing, or otherwise git precommit hooks wouldn't let me commit.",no
"However the importLayouts is checking the permission an unauthorized call to the method could have delete the temporary file anyway. 

I do know that checking the permissions would have been better when creating and deleting the fileId, although there is nothing to check against when creating the file id. No groupId, no layout, nothing, because the file id cannot be associated to a portal entity.

The only thing I was thinking about to pass on the groupId when creating and deleting the file id, so we can check the permissions, although I'm not sure if that's the best. If we pass on the target groupId for checking permissions then the question raises that we might use the groupId for the temporary file identification (because that is unique on the target system) so creating the file id might not be necessary after all. We do not support publishing to the same target group in the same time (and actually from different groups) so that should solve this permission checking problem, and also would simplify the code.
",no
"@championswimmer yes, it is. There will be a central datastore with a basic web CRUD interface (flask-admin) so organizers can modify the database data easily. Flask-admin uses jquery and twitter bootstrap and looks nice and is easy to use. This repo might only contain the backend and perhaps the flask-admin will go in a different repo
",no
"Damn, that's bad. If #1326 will definitely fix this I agree we should consider merging it now rather than later. The alternatives are to back this out and keep trying to patch up the shared pointer lifetime issues (failed in several tries so far), or address #1364/#926 head-on.
",no
"This will only listen on localhost which might be boring. I'd make that 0.0.0.0.
(speaking of which, we might want to expose the bind address via flags, e.g. by having a more rich commandline flag syntax for our services, something like [<bind-address>:]port)
",no
"@demory I added some comments to these classes to indicate that they define response model objects rather than internal routing data structures. I also added a few inline TODOs about refactoring the code. I know we just needed to get this done, but down the road it might be good to restructure the code and reduce the number of separate classes for profile/regular routing. Let me know if you have any comments on this, or if I'm misunderstanding some details here.
",no
"Okay, the load balancer is a better use-case, because here the hidden side-channel is the client itself. What I meant with my comment on this paragraph of the documentation is that reading that left me wondering about those rare cases, I do think we need to explain that before diving into the mechanics of how it is done.
",no
"can you do `EXPLAIN` on the database with all categories/sounds? - Postgres may choose a different query plan depending on the amount of data, which may end up being different to this one.

Sequential scans don't always reflect a missing index - sometimes it's faster than doing an index lookup

We could try and re-compute stats for the database - run `VACUUM ANALYZE` on the tables which we are querying",no
"Again, *NIX and Windows differences.

Doesn't work for me.
`npm` generates separate `bat` files for running binary packages on Windows since Windows doesn't respect nor use #!/usr/bin/node syntax and such call wouldn't work directly.
",no
"I have no desire to create a groovy-devel branch that I hope never to release again.

Given that, the change @tfoote made is a good solution. The only good reason to build that version is in case someone else breaks some lower-level package in Groovy. We can hope that their continuous integration would catch that.
",no
"Updating the property is already mentioned in the README, we just need to make sure it will be end up in the standard branches, not just the released ones. Btw I think we should merge the release branches to the main ones after the release.
",no
"@jj-umn Ahh - I knew you had done the multiple file approach - cool to see you have done cuffdiff to straight to database approach as well. Maybe we should move that here so they can share macros?

@bgruening They are heterogeneous so I think if you truly want all the outputs and the database is insufficient - a composite datatype is the correct approach IMO. Collections are for homogeneous groupings (for now anyway - the tools and workflows components aren't really geared for heterogeneous collections).
",no
"> The `__wrapped__` property is pseudo private, which no one should access as it’s not on the docs or anywhere else

The wrapped value can be accessed in other ways:

``` js
var a = [1,2,3];
var wrapped = _(a).w().x().y();
a.pop();
var result = wrapped.z().value();
```

It's my hunch that most of the time chaining is a single shot operation, meaning the dev chains until an implicit or explicit `value()` so I'm not concerned with the perf of repeat `value()` invocations.
",no
"> hmm, thanks for breaking my build.

I'm surprised I didn't release this as a breaking change, sorry.

> Guess i have to change node version now

That is a good idea, as Node 9.x [went EOL 2018-06-30](https://github.com/nodejs/Release#end-of-life-releases)


",no
"I can't guarantee the status of `mysql_install_db`, other than ""It seems to work okay from basic testing"". Upstream removed the script versions and left only the C++ binary, along with a great big release notes notice saying it was also deprecated and will be removed soon.

They're advising people start using `mysqld --initialize` as written in `def post_install`.
",no
"Definitely.  I chose this convention because it was minimally disruptive to this code.  We can either change it in this file

```
optimize = partial(minimize, objective=objective)
strat = partial(treeapply, join={tuple: chain, list: optimize})
```

or switch `tuple` and `list` around in `tree.py` in the definition of `greedy` and `brute`.  

Implementing it here is easiest but results in mismatched conventions.  Changing `tree.py` is more consistent but requires changing around the docs and tests.
",no
"Hey @xiam I realized the prior code didn't quite work once the release was tagged (for example in release-qa), i.e. GIT_REVISION_DATE would try to part a GIT_REVISION of something like 2.0.0-beta8, which wouldn't parse correctly.

I committed this directly in order to get the release out, but let me know if you think it looks OK!
",no
"I think it should stay like this before the release to be sure we will not have errors anymore.
Lancelot said to me that we just need to change : `from distutils import setup` by `from setuptools import setup` and everything works. I hope it is true!!
",no
"Due to limit of resources we have, we have no plans to release 2.1.3. However, I'm not opposed to it if _someone_ does all the work. So, we can create a `hotfix/2.1.3` branch and you can send a pull request that backports the fix from 2.2. If the tests pass and it fixes the issue, we can merge that PR into the fix branch.
",no
"@cautionbug Ok, a few people have used 3.0 without knowing it is a fairly unstable milestone/branch. I can totally understand how a `composer update` breaking your application can be jarring, but until we hit a beta release it might happen a few more times. 

As for the router changes, I've merged the related docs updates so at least the docs are current now.
",no
"@timdream:
This isn't quite true. While IE will prevent you from doing `window.postMessage = ...`, you can force it into compliance by declaring the function/variable in the global scope instead.

For example, the following will fail:

``` js
var wpm = window.postMessage;
window.postMessage = function() { /* ... */ };
if (wpm === window.postMessage) {
  alert(""FAILED!"");
}
else {
  alert(""Passed. Suck it, IE."");
}
```

But the following will pass:

``` js
var wpm = window.postMessage;
var postMessage = function() { /* ... */ };
if (wpm === window.postMessage) {
  alert(""FAILED!"");
}
else {
  alert(""Passed. Suck it, IE."");
}
```

Again, the trick is to declare the function/variable in the global scope so that IE is _obligated_ to attach it to the `window` object.
",no
"The problem is exposed by stencil's own test suite.  So, if you run `lein with-profile clj1.5 test` you will see the failures.  (Actually, before I could get that to run I had to add the clojure-data dep to the clj1.5 profile first.)

I didn't try to figure out why non-maps were getting there but I know it was happening in my app as well.  I agree that finding out the root cause would be a good idea.  It may be a another latent bug and that once that is solved my patch won't be needed.
",no
"This increment is what triggers the application to read and write new format map files but as this is NOT a release build it will read version 17 files but will only write version 16 ones - and you will notice the difference in loading times when it works out all the room entrance data _AND_ the area exits details.  However clearing the new option on the last page of the profile preference _before saving_ the map you will only have to put up with the delay once - unless you want to share the map or use it on a current version (pre this one) of Mudlet.
",no
"Fair points here, as long as we make it a conscious decision to have the logic of traversing the AST in different forms (visitors and this method), it's probably fine. I still think we can implement the visitors iteratively but still expose the same interface as a class.
",no
"It is useful in commit messages to know the reasoning, literature and/or performance data to validate such a chance. The only way we grow as a community (in general) is if knowledge is shared. Sometimes code-changes are obvious and self-explanatory, but often a change does not explain why something is done (and only makes clear what is done). This is such a change.
",no
"Seems you didn't get my comments, you are exposing bad tokens that may overlap and produce weird results for other places that using tokens. If you want expose EMAIL-ext specific tokens, then you should prefix them in right way that will end with broken backward compatibility. Half of tokens depends on email-ext actions and configurations. See comments https://issues.jenkins-ci.org/browse/JENKINS-31380 That's why i think that exposing this not good tokens is bad idea. Better implement new and better and then deprecate this.
",no
"Oh, sorry about that. You're right, this should be changed. Basically, the `id` in the server data would be the group id. That was hardcoded early on before we even had that database. I wonder if the client even does anything with that, seeing how it worked just fine, with us using random numbers^^",no
"@ktomk we keep a .phar in VCS in proprietary software because I cannot afford to figure out alpha-software bugs. ;) That's why I added it to the `.gitignore` everywhere.

I don't understand your comment about the `composer.lock`. I excluded it because it's unnecessary for a library. Let upstream figure out exact versions.
",no
"to minimize the race condition (or if implemented timeouts), first serialize the data, and then increment the index and store the serialized data immediately after each other.

Won't prevent it, but will make the window of occurrence smaller.

(pedantic, I know)",no
"The flag seems sketchy to me. It's slipping into a lot of pieces of code and then silently affecting the flow later on (by leaving addon undefined since addon_slug was never sent). Maybe that's something we should get used to, but I'd rather have you wait until after today's push if you're not comfortable committing it now.

Otherwise the code looks good, r+. Thanks for dealing with this.
",no
"> This patch should be introduces after changes in ail
> will be release on Tizen IVI.

This message sounds like this commit is not ready for inclusion (and there's a typo in ""introduces""). Even if that were the case _right now_ (ie. the change will propagate to IVI in the next few days), the commit message won't make much sense in the future.

I'd rather say something like ""AIL change https://review.tizen.org/gerrit/#/c/27621/ has been integrated into the XXXXXXXX.Y daily Tizen IVI release, so we do not need the alternative code path anymore"".
",no
">  I added it because someone wanted it to get unittest working.

Yeah, that's exactly good use for it. Btw, seeing that I started on second part of it and what I wanted to do for some time - exposing **import**. Let me know if you do that in parallel ;-).
",no
"Not well. It's not slated for release until next week though, so maybe I
should just run from that branch for a bit?

On Monday, September 8, 2014, oxtoacart notifications@github.com wrote:

> How well has this been tested?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/getlantern/lantern/commit/147d90d9d0978b4a10f6b956a8d42f3dc1b35737#commitcomment-7706040
> .
## 
## 

Adam
pgp A998 2B6E EF1C 373E 723F A813 045D A255 901A FD89
",yes
"That's what we used to do. It was a pain keeping the two branches in sync (whenever a new Plone 4 release is made, the Plone 5 branch of plone.app.upgrade would need to be updated with the new profile version as the source of the upgrade to the first Plone 5 alpha) so at some point I decided we should try to use the same branch for both. But we can go back to separate branches if it's easier.
",no
"That is interesting, thanks. I'll dig into it deeper the next time I find time to work on this branch.

I don't actually use Unsafe in my projects, but I'd like to add it back to this branch because I assume a number of people choose Kryo because of Unsafe.",no
"When data is pulled from the database via `get_option()`, it should be considered untrusted for display. When echoing this data as part of an HTML attribute, best practice would be to use `<?php echo esc_attr( $contact_name ); ?>` so that it is properly escaped.

If echoing as part of the HTML document, not as an attribute, use `esc_html()`.
",no
"/cc @rolfbjarne @spouliot 

`authHeader` is not guaranteed to be non-null. My app is crashing with this uncatchable exception. This will be in the upcoming release unless we patch it:

```
2016-11-07 01:19:15.309 MusicPlayeriOS[2253:593322] Warning: Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object
  at System.Net.Http.NSUrlSessionHandler+NSUrlSessionHandlerDelegate.DidReceiveChallenge (Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSUrlAuthenticationChallenge challenge, System.Action`2[T1,T2] completionHandler) [0x0002d] in /Users/builder/data/lanes/1381/e9f125fb/source/xamarin-macios/src/Foundation/NSUrlSessionHandler.cs:341 
```",no
"On Wed, Dec 16, 2015 at 11:56:04AM -0800, pbrunet wrote:

> Hum, may be just `srcs` because it read the c++ content. I should test it but it was the error reported by jo.
> It seems safer to me to `try` os.remove and pass on exceptions...
",no
"Lucy we need to move to the new Jade template system as soon as possible, since most of the changes you've done on this PR should only need to be made in one location (since in Jade templates the header code shared by multiple pages)

Let's work on monday to make this happen and get your environment set-up so that you're making your changes in Jade (not html)

We also need to move away from CSS and start using SCSS (which I think is better than LESS)
",yes
"I'm not convinced that you need to track these shapes explicitly. You should be able to capture a ""summary"" of each side of the join that contains: flattened group by expression, flattened aggregate expressions, table. The summary would only be computable if the subqueries are simple group by + project + table scan combinations.

Then, you validate that both summaries are in terms of the same underlying table and that expressions are equivalent once you normalize to the underlying columns.

Finally, you can use the summary directly to create the final subplan. In a way, this is similar to ""unplanning"" the subquery, making sure it fits the required pattern and then re-planning it.
",no
"`broker` does not need access to `scribe_`. The one occurrence where `scribe_` was accessed can be simply fixed by using the `add_scribe` member function (https://github.com/actor-framework/actor-framework/commit/a1e8e81353a3271371fe53b5199096fcea7c7139). 
",no
"Do you plan to make the library get the info from the other places?  I think it would be more natural for the several places to publish the data to AP_Telemetry, just like we do now with GCSMavliml... If we do this we can slowly migrate from mavlink-only to multiple backends.",no
"Here I get this: ERROR: cannot open `/tmp/phprvSnO9&#039; (No such file or directory). This is also saved in the database and displayed in the HTML link element, type attribute.
When I use the variable $type from above, from the line 129, that contains the same information, it works fine :-)
:-O
",no
"I find this conversation good, so there are no cases that are not being handled. I do not think that the listeners count is an issue, this is the reasoning. If the scope structure is the following

```
- root
  - scope 1
    - scope 2
      - scope 3
```

say `scope 1` has one listener on `foo`, `scope 2` has 2 listeners on the same event and `scope 3` has 4 listeners, then it would looks like this

```
- root {listeners: {}, listenersCount: {foo: 7}}
  - scope 1 {listeners: {foo: [/* 1 element*/]}, listenersCount: {foo: 7}}
    - scope 2 {listeners: {foo: [/* 2 element*/]}, listenersCount: {foo: 6}}
      - scope 3 {listeners: {foo: [/* 4 element*/]}, listenersCount: {foo: 4}}
```

Now, when `scope 2` is destroyed, then we are going to remove `6` from `listenersCount.foo` from `scope 1` and `root`. This is, the end result will be

```
- root {listeners: {}, listenersCount: {foo: 1}}
  - scope 1 {listeners: {foo: [/* 1 element*/]}, listenersCount: {foo: 1}}
```

that is still consistent
",no
"There is a know limitation / problem right now which I haven't managed to track down yet. The problem is related to `.read()` method. `.readline()` works fine even if there is no data available yet, but `.read()` blocks forever if there is no data available yet when the method is called.

According to the docs this shouldn't happen since we are working with a pipe and not a file (`It will cooperate on pipes. It will block on regular file.`), but for some reason it does.

I will dig more into this issue and look into using pickle (for one, I avoided using it since the output format includes newlines which means current ""workaround"" wouldn't work well)...
",no
"I think from an stable API point-of-view, is safer to expose these and define the operations on those. If you need to do that later (e.g. to make scalars vectorizable in the future), you would then need to break the API. Not that you would need to do this, but it looks like a small (but tedious) change, that makes the API more robust to implementation changes.",no
"Yeah, we're good. I'll see if I can get posterior prediction with new
levels working for real.

On Sun, Dec 27, 2015 at 7:51 AM, Jonah Gabry notifications@github.com
wrote:

> Hope you and your family avoided the worst of the tornado.
> 
> On Sun, Dec 27, 2015 at 12:48 AM, bgoodri notifications@github.com
> wrote:
> 
> > @jgabry https://github.com/jgabry I pushed a new_thing() function,
> > which is not complete but works like lme4's predict.merMod(). It sort of
> > works but needs to be properly integrated into posterior_predict. I would
> > finish it off, but I am about to be hit by a tornado.
> > 
> > —
> > Reply to this email directly or view it on GitHub
> > <
> > https://github.com/stan-dev/rstanarm/commit/aa533f8793d28095f558c17aad63699f63681a81#commitcomment-15165362
> > 
> > .
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/stan-dev/rstanarm/commit/aa533f8793d28095f558c17aad63699f63681a81#commitcomment-15167244
> .
",yes
"The problem with this API is that you have no idea where the image ends up -- the BlobStore API will choose a random object name for you. If you provide a success handler, you can retrieve this name, but it adds another level of indirection that would be nice to avoid.
",no
"@dakcarto is the warning produced for release builds or debug builds? For debug builds it would probably be good to have QT_NO_DEBUG unset and have the checks performed. Just a random guess, is that compiled with RelWithDebInfo and that's an effect of this?
",no
"I would be +1 on having newer setuptools and zc.buildout 2.5.0 (new zc.recipe.egg to match) plus the bootstrap.py of course.

Some info in the release notes would be good. Something like this:

We have updated zc.buildout and setuptools to more recent versions in versions.cfg. If that causes problems for you, easiest may be to override the version pins to the ones previously used. In your buildout.cfg file, add this:

[versions]
setuptools = 0.6c11
zc.buildout = 1.7.1
zc.recipe.egg = 1.3.2
",no
"Not exactly:

$ cat /etc/system-release
Fedora release 20 (Heisenbug)

$ uname -srv
Linux 3.14.4-200.fc20.x86_64 #1 SMP Tue May 13 13:51:08 UTC 2014

$ gcc --version
gcc (GCC) 4.8.2 20131212 (Red Hat 4.8.2-7)
Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
",no
"@solnic If you release a `rom-0.2` that was build against `~> morpher-0.2`, and I release morpher-0.3 with intentional API breakage, you want to force your user to find that out? If you release with too permissive dependencies, you fuckup the future, you declare that specific version is compatible with all `0.y` releases of morpher, thats a lie.
",no
"@ramya-rao-a @dbaeumer any reason this has to be in vs/platform and not workbench where it is required from?

`vs/platform` should only be used for shared services across processes. Please move it elsewhere, e.g. `src/vs/workbench/contrib/localizations/electron-browser/localizations.contribution.ts`.",no
"@robin850 your comments are really helps me to get a grasp on the Markdown situation. Thanks for sharing!  

Just one last™ question if I may – what is Redcarpet policy on adapting / implementing GFM syntax (changes) – is the goal to implement all the GFM in Redcarpet or just a subset of it? 
",no
"1. We don't use javadoc comments on private members (use regular comments instead). Rationale: The processed documentation is only for public APIs (i.e. things other people might need to use).
2. These comments add no value and should be removed.
",no
"Pkg.tag doesn't have anything to do with this, I'm referring to the version numbers you chose to manually set as the lower bounds for your dependencies here in REQUIRE. Lower bounds aren't for ""latest thing I happened to test with,"" they're for ""lowest version that will work.""",no
"It sounds like there are 2 concerns here.

First - if someone is grabbing ports in the reserved range there's going to be trouble.  No amount of defense of this sort will really help.

Second - detecting an error.  I'm assuming that the port allocator would fail to allocate the second 100, and thus the whole transaction would fail.  That might not be the best error, so it may still be worth keeping this.

I don't understand why the proxier would have a panic attack?
",no
"@flippmoke in mapnik-vector-tile also will need to save to string/file all the data types. Currently you'll get a linker error for anything other than `rgba8` so we talked about refactoring `image_util.cpp` into an `_imp.hpp` file to be able to expose the ability to get access to the template code - refs #2622
",no
"I decided not to do that because `SWIFT_ENUM_NAMED` is meant to be used for Swift enums exposed to Obj-C. Even if it's already defined here (which I'm not sure), I'd have to redefine it anyway to get rid of the `SWIFT_ENUM_EXTRA` bit, so I figured it made just as much sense to redefine `OBJC_ENUM` instead.
",no
"Well alright, I guess more people would expect it this way and in most cases that's what you might want. But with the following, the user could choose what the default value shall be if the division is not defined. So keeping NaN's allows more flexibility actually and has the user deal with undefined mathematical operations. In case the `-mask NaN` isn't actually working yet, I'd rather fix that or add a `-pad-nan` option.

```
mirtk calculate img.nii.gz -div img2.nii.gz -mask NaN -pad 0
```
",no
"This has one unfortunate issue: it will be called when a vhost is deleted normally, e.g. using CLI tools. Which will leave scary messages about ""vhost database failures"" in the log and crash `rabbit_connection_tracking_handler`. I will address both as part of #1315. Kudos to @lukebakken for helping me investigate.",no
"NB There is a certain risk if you allow unapproved records to enter regular workflows that they become undeletable (due to RESTRICT references) and can no longer be rejected.

Unfortunately, preventing actions which make unapproved records undeletable is not possible at the global level - so that needs to be taken care of in the individual workflows.
",no
"@jmcphers This introduced a bug because this `logLevel` is different with the one in `deployApp()` (the order of choices is different). When you run `deploySite()`, you will see an error:

```
 Error in match.arg(logLevel) : 'arg' must be of length 1
```

This `match.arg()` comes from `deployApp()`. The reason is `arg` is `c(""quiet"", ""normal"", ""verbose"")`, and `choices` is `c(""normal"", ""quiet"", ""verbose"")` in `match.arg()`. When `arg` and `choices` are different, `arg` must be of length 1.

The solution is simple: resolve `logLevel` in `deploySite()` (`logLevel <- match.arg(logLevel)`) before passing it to `deployApp()`.

I just noticed this issue after updating rsconnect from CRAN.",no
"`When ZFS_MODULE_LOADING is not defined simply return (0).` will mean that we are essentially disabling this in the next release. That would be roughly the equivalent of removing it outright in terms of the community support load. That is not quite what I had in mind when I suggested we deprecate this functionality.

As for `Add a loop like this which blocks waiting for the /dev/zfs device to be created.`, I would have done that if I knew a sane way of doing it across all system using ZoL.

Doing this on the system using udev would involve using libudev to monitor for an add event on the misc character device type, such that we would be woken up for every event. I am not sure how to do this on the systems using mdev. If I ignore it and assume udev is around, that is doable, but it is not clear it would be better than a busy-wait CPU time wise and it would certainly annoy Gentoo users that use mdev (or even do static /dev nodes). I realize that we are already somewhat dependent on udev because I have had complaints from those users about it. Going with libudev would generate much louder complaints. We could try using inotify, but that involves its own set of wake ups.

Assuming that we do settle on a way of blocking, we would need to implement a timer to handle the situation where a bug causes /dev/zfs to never appear and spin anyway for the case when a VM running this is paused for a long enough duration at just the right time to bypass the safety mechanism. Doing two blocking spins with timers each set to half the total time should be sufficient unless someone decides to step through machine execution in gdb.

The busy-wait in comparison is portable, easy to implement and quite possibly more efficient time wise. The use of `sched_yield()` should enable us to only spin once when /dev/zfs loses the race, although more times are possible. Developing this further when we will likely remove it in the future seems like a poor use of time.
",no
"No, that's fine. We can remove the version 0.2.2.

> Also this seems to be broken at present I think I have to release a new version of libsemigroups to get it working again

Yes, that's why we recommend pushing commits to your fork and doing PRs. That way we can see beforehand if it works or not.",no
"@lodici The lines you suggested sound good, except change ""creating the Magarena logo"" with ""creating the first Magarena splash screen"" or something similar. Please help to make the edits, I'm tied up with cleaning up the changelog and other release work.
",no
"I guess as long as we don't have agreed on a common code style, everyone can do as he wants. Just for the record, I also don't like the private default constructors and removed those in Smack. If someone could explain the benefit, besides preventing people from instantiating such a class, I would be happy to hear it. 
",no
"@XhmikosR: This commit isn't a real fix (or at least it's not complete, I need to fix the installer if we choose to go this way), it's here mostly so that I can ask you about this.

I think we should either modify release lite builds to use their own dir or the other way around, have the debug lite builds created in the same dir than the normal builds. What do you think?
",no
"This change was effectively reverted due to release issues (MRELEASE-812) for plugins in [1.595](https://github.com/jenkinsci/jenkins/commit/75e87f1480739f4e38d2bc26c0e493acc4ab3f91).

References:
- https://wiki.jenkins-ci.org/display/JENKINS/Hosting+Plugins#HostingPlugins-Workingaroundcommonissues
- Any thread on the dev list mentioning maven-release-plugin version 2.5 or 2.5.1.
",no
"If we using straight python I would suggest text was something like:

We have a python script to extract the data from its source and save it to the `data` directory.

To use it, first ensure you have python installed. Then do the following (from the base directory):

```
python scripts/process.py
```
",no
"@perryism for clarity: the only use of the `authors.py` script is to generate a complete list of names (real ones, not Github usernames) of everyone who contributed to a particular release. That list is then used in the release notes/announcement.

Nothing is wrong here as far as I can tell.
",no
"Well in general we need to start factoring things out into WarehouseBase.
We already have a vector of all objects there but they are shared pointers
instead of raw pointers so we can't just switch it over without modifying
the framework.

On Tue Dec 09 2014 at 8:43:40 AM John W. Peterson notifications@github.com
wrote:

> On Tue, Dec 9, 2014 at 8:38 AM, Cody Permann notifications@github.com
> wrote:
> 
> > I have more work to do here. The warehouse base now stores shared
> > pointers
> > to all objects. I took this capability away from some of the warehouses
> > including this one so we wouldn't store two complete vectors to the same
> > objects. Sorry if it caused you trouble, clearly all the tests and all
> > the
> > applications were working without it.
> 
> David needed all() to work for BCWarehouse, as it wasn't doing what he
> expected.
> 
> I just fixed it for the other classes to be consistent, but if you are
> saying that we are not supposed to use _all_objects any more, then we need
> to change the implementation of ::all()
> ## 
> 
> John
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/idaholab/moose/commit/8bb487c39560f102a73e9869e81dc250ab2f34bb#commitcomment-8896140
> .
",no
"Tags as `TEXT` has two problems.
1. The minimum word length is 4 by default so user's will need access to my.cnf to use tags < 4 characters.
2. Keeping track of private and public tags is more difficult.

I think we should still keep a list of tags in this table. We can change this to `VARCHAR` since it doesn't need a `FULL TEXT` index on it. This would be used specifically for display purposes. It will be easier than doing a `JOIN` and processing the resultset to flatten it to 1 row per photo.
",no
"@BartoszMiller commenting on a commit is not a great way to get support. If you believe you've found an issue please create a separate issue with a reference to a sample that reproduces the problem (a github repo or link to a zip, not code in text). Thank you.",no
"Hm, right. You've convinced me. But there's only a few mappings that make sense. What if we just make an alternative to choose between the following 4 hardbindings (ini only initially):

0) None
1) To arrow buttons
2) To face buttons
3) To L/R

Are there any more alternatives that make any sense?
",no
"Yes, especially master recent patches are still open to getting amended, reordered or squashed as needed without respecting history.  Travis etc make that a fairly common occurrance by telling me about problems after it's pushed, there is no meaning to adding a spew of fix patches into the history.
",no
"I think it would be prudent to allow users to configure the level of db caching (possibly also exposing additional parameters) by altering the  `openDB` function to take a options/configuration struct similar to the way `leveldb` does. 

Users could then optionally set a custom value for this new config parameter (added to `btcd.conf`): `dbcachesize`. 
",no
"All bug fixes are breaking changes if you're depending on the broken behaviour. 

The only solution there is to drop minor and point releases and just have integer release numbers, 17, 18, 19 etc. That would offer zero guidance, so we go with the system we have. It's always going to need user interpretation. ",no
"I think 'important' is wrong word here.

You are exposing the ports you want to make available to the consumers of your docker image. Exposing ports means that you are 'indicating' what service does the image provides and how clients can connect to it.

Also having EXPOSE set does not require you to have that port served.
",no
"The words in the release notes are missing ""except for plugins that use themselves"". You can't have a project that produces a plugin and uses that same plugin and have local changes be used magically. You can have a project that produces a plugin and a different project in another build use that plugin and have the magic.",no
"I like having an explicit test for the loading indicators so can you bring the test back. It is then clear by reading the Jasmine report that we are testing for this important behavior. Hiding the tests inside a helper method is a bit too subtle for me. It also means that the helper method is unnecessarily running the tests every time.
",no
"Nothing is broken. it's just simpler. 

Firstly, you were asking the user to choose between 3 items, but you were keeping only 2 of them; what is that supposed to mean? Are users supposed to test the difference between  'initialize' and 'use a device already set up', until they figure out there is no difference, and that their choice is silently trashed?

Secondly, the only choice that was considered (between create and restore) is already performed on the previous screen. Adding extra buttons to a UI is not the way to make it simpler, nor to educate users.

Finally, your broken design was causing a bug that was reported by 4 separate users:  #1807 #1786 #1793 #1772. This bug is the consequence of allowing the user to switch between 'create' and 'restore' in the second screen, at a stage where the list of devices that can be chosen from obviously depends on the previous choice. it is obvious that these choices have to be performed sequentially, not at the same time.
",no
"I understand @kutzi 's reasoning, but (1) for compatibility it's easier not to rename them and (2) I'm not sure how to name environment variables if we are to expose them from other modules, so I'm inclined to just stick to this and not worry about multi-module builds.

At some point I feel like this is Maven's job to provide tooling to extract these information.
",no
"> These artifacts add approximately 22 MB to the distribution zip, 20 MB of which is the Kotlin compiler. Overall, this increases the distribution zip from its current size of 42 MB to 64 MB. We are looking at ways to decrease this prior to release of Gradle Script Kotlin 1.0 GA or Gradle 3.0 GA, whichever comes sooner.

See https://github.com/gradle/gradle-script-kotlin/issues/48.
",no
"Yes, the testrunner is primarily for developers. so imho the testrunner should work as before; don't catch the exceptions.

For CLI I agree that we should catch the exception in release builds. If the CLI is used on a CI server and it tries to show a dialog box or something that will be very bad - users will just see that it hangs and they have no way to debug/stop/etc the CLI. I suggest that we use a preprocessor ifdef (use the NDEBUG flag) in the CLI so that exceptions are caught in release but not in debug.
",no
"Hrm. I guess I worry that marking these as OK to fail means that they're likely to just fail silently, leaving the references section incomplete. If they fail, at least we know there's a problem (and can work around it by adding a biblio entry inline).
",no
"Maybe you're already working on it, but in my mind there is a second part to the rule ""Never try/except unless you reraise"". And that is ""it's okay though so long as you never silently swallow exceptions"". My main concern is that one day someone will go ""That's weird, why isn't this producing X anymore?"" and it won't be apparent when they run the program that anything is wrong.
",no
"~~Sorry. I think my earlier statement was confusing. A class with private constructor can not be extended. a class with protected class can be extended. 
A class with private or protected constructors can only be instantiated within the body of the the class (or any nested classes).~~ 
",no
"Right, but phpunit 5.0 has dropped support for php 5.4 and 5.5, so that was just what I was thinking about there. PHPUnit 5.0 is scheduled for release on 2nd October.

> It won't do any harm anyway as it is ignored by composer when a project requires a package.

Yeh, I know that. It would be crazy if that didn't happen. :)
",no
"There's also the file `.git/info/exclude`, where your personal excluded files should go. `.gitignore` is for the public list theoretically useful for everybody (and visible by everybody), `.git/info/exclude` is your personal list (not visible by anyboby else).
",no
"> When we'll release 5.6, earlier versions of PHP will not be supported anymore.

I know but that is not the point of a minimum requirement. 2.0.x also will not get obsolete even though 5.4 is not supported anymore. Fine with leaving it as is though as I'm pretty sure we'll add something that needs it.
",no
"**Edit:** this was an answer to @uBlock-user's (now removed) comment

If you are blocking 1st-party script, I can't prevent the console spamming (this was brought up in a distant past in here somewhere). But if you are not blocking 1st-party script, I can prevent it as explained above. I looked into this and finally decided that the spamming for when 1st-party scripts are not blocked will end up being annoying to many users, the alternative is acceptable. As said however, I can't do this for web workers, but they are no where near as common as inline scripts.",no
"@sivir Can you please not do this? Pushing to the master branch isn't really accepted as the standard for how we operate, you should open a PR, then someone else would merge it. Also pushing as the 'root' user makes it hard to keep track of who has pushed what in case a problem arises and we need to contact them.
",no
"Does OpenBazaar use a wallet with a separate data directory, or just the user's default wallet? (I don't see a ``-datadir`` argument in ``BuildArguments``.) It's okay for it to use the default wallet as long as this is documented behaviour that would be expected by users &mdash; although an option to configure the data directory might be useful (if there isn't already one that I missed).",no
"Want to make sure the memory management here is OK -- are you sure you need to call release on the value returned from [NSLocale currentLocale](wouldn't it be handled by the global auto-release pool?). If there is no auto-release pool then I guess it would leak but if there is an auto-release pool then (worst-case) it could crash the app. Anyway, if this is based on sample code or docs you've seen fine but if it's somewhat speculative you might be better off not calling release and leaking it (rather than encountering an unexpected crash at some point).
",no
"Not convinced this is a good strategy.  Suppose I have a directory structure like ""/path/$hub/$client/stuff"" in which I keep each client's bits and pieces in a subdirectory and group clients by the hub that serves them.  Now, when I specify access for a particular client, I may well be saying /path/hubby.dom.ain/$(connection.fqdn)/ in my ACL; but ISTR a hub can be a client of itself, so when hubby.dom.ain tries to access /path/hubby.dom.ain/hubby.dom.ain/ it's going to fail because that string, on its own, doesn't match the ACL entry; but putting back special variables is going to give /path/$(connection.fqdn)/$(connection.fqdn) which _also_ doesn't match the ACL entry (because it went too far).  I think you really do have to do your matching in the form

```
typedef struct { const char * ip, * key, * fqdn; } ConnExpandData;
int LongestMatchingPrefix(const char * hostname, const char * aclEntry, const ConnExpandData * subst)
{
    const char * h = hostname, * a = aclEntry;
    while (true)
    {
       if (h[0] == a[0]) { h++; a++; continue; }
       if (a[0] != '$') { break; }
       int end;
       if (a[1] == '(') { end = ')'; }
       else if (a[1] == '{') { end = '}'; }
       else { break; }
       const char * stop = strchr(a+1, end);
       if (!stop || stop < a + 12 || strncmp(a+1, ""connection."", 11)) { break; }
       const char * name = a + 13, * match = NULL;
       switch (end - name)
       {
       case 2: if (strncmp(name, ""ip"", 2) == 0) { match = subst.ip; } break;
       case 3: if (strncmp(name, ""key"", 3) == 0) { match = subst.key; } break;
       case 4: if (strncmp(name, ""fqdn"", 4) == 0) { match = subst.fqdn; } break;
       }
       if (match == NULL || strncmp(h, match, strlen(match))) { break; }
       h += strlen(match);
       a = stop + 1;
   }
   return h - hostname;
}
```

or something similarly painful and laborious.
",no
"I re-thought about that :
1) Does it really useful to keep the previous established session ? I mean what is the purpose ? I not sure a client will send application data as the same time it try to do a rehandshake. If this is to prevent from a malicious handshake, I'm not sure we are able to do something. We avoid the IP spoofing attack with cookie exchange, so we face a man in the middle attack. In this case prevent the session termination seems to be a really complex challenge. And probably useless as it could filter packet if he want.

2) There must be only one connection in the store with session established. This means when the session resumption is done (after Finished Message), we must remove the previous connection from the store.

Does it make more sense ? 
",no
"As noted, these won't work in a Safe compartment.  This will also make version detection dependent on when you check for them.  It will report different values depending on if the module has been built yet.  

I'd rather leave it as just lib for now.  If anything, we'd want to experiment with removing lib as a half step to using Safe.  Neither PAUSE or EUMM support loading files from lib to get a version number.
",no
"At least in our use case in INSPIRE, we need access to these functions in order to manually send a save_field request (when importing data from other services through Ajax and then filling in the form).

Before the requirejs changes they were available through the global DEPOSIT_FORM
",no
"I thought about this. I decided against it as `std::array` is not really movable (or at least it's much less efficient to move than `std::vector`).

Moreover, I'm not convinced that exposing the overloads for `Component[N]` gives any benefit over the `Component[]` ones. What do others think about this?
",no
"> Spock already instantiates this rule for every test (it's not marked as @Shared).

Ok. My understanding was that the sharing policy was defined by the user of the rule not by the rule itself.

> I'm not aware that we run unit tests in parallel threads.

Me neither, that's why I said ""lurking"".",no
"Oops. I will get a new release out soon, sorry for the delay! :)

On Tuesday, November 3, 2015, Matt Sharpe notifications@github.com wrote:

> Everyone asking about PR, this has already been merged, in July going by
> the commit log. It just hasn't been released in a new gem version yet. This
> thread itself is on the master commit.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/jordansissel/fpm/commit/02df699ff9c84a83ed879f89d81896cbe954f667#commitcomment-14169104
> .
",yes
"TeamCity xBIM :: Xbim Geometry :: Release [Build 86](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=1781&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 1, passed: 74 Build time: 03:32:54
### Failed tests

```
VSTest: GeometryTests.XbimModelExtensionsTests.CanGetRawGeometry: <no details avaliable>

```
",no
"> But how do you _find_ these things?

Well, there was a bug report this morning where @hinerm figured out that having the TrackMate-dev and Bio-Formats update sites enabled at the same time didn't work. He isolated the issue to an `ome-xml.jar` present on the TrackMate-dev update site. And I thought to myself: ""That's weird, I thought I had covered all Fiji components that use Bio-Formats, updating them to BF5.1 already. And I didn't know that TrackMate used Bio-Formats!"" So then I started digging in the code.

I first checked the POM, and saw that there was an `ome:ome-xml` dependency. So then I did `git grep 'import ome'` and found the sole place it was actually being ""used""... and noticed that the usage was solely in the Javadoc! After that, the fix was easy: did the patch above, then ran a full build to make sure everything was still happy.

For good measure, I also did `git grep 'import loci'` but found no hits. And then I ran `mvn dependency:analyze`—a _very_ useful tool—to double check that there were no other unused declared dependencies. (It found one false positive—`j3d-core-utils`—which when removed actually breaks the build. The `analyze` mojo is usually really spot-on—it was maybe just confused by the `provided` scope; I'm not sure.)

So anyway, I _think_ all references to Bio-Formats have been purged from TrackMate now. I see that the `TrackMate-dev-update-site` Jenkins job did run again, and Mark & I were hopeful that this would cause `ome-xml` to no longer be shadowed on the TrackMate-dev update site, but alas, it seems that TrackMate-dev still ships a complete overridden Bio-Formats. Strange, since `mvn dependency:tree | grep -C 5 'ome:'` returns nothing, meaning the Bio-Formats is not present _at all_ in TrackMate's dependency hierarchy.

I guess it's probably the case that the Jenkins job is not clearing out the old workspace, or not doing an `update-force-pristine` using the Updater, or... something similar. But we don't have time to investigate further. Right now, we have three ""dev""-style update sites which all work differently (`bin/upload-plugins-by-gav.sh` for SCIFIO-dev, `bin/upload-plugin-from-maven.sh` for TrackMate-dev, and `bin/upload-update-site.sh` for Bio-Formats). We really should unify them, to ease future maintenance and troubleshooting. But no time this month...
",no
">  import comment fix (untestable on personal branch)

There is a way to test personal branches. If you git clone your personal branch to `$GOPATH/src/zikichombo.org/codec`, then it should work just fine.

For instance, this is what I run.
```bash
export GOPATH=/tmp/go
go get -u -v zikichombo.org/codec/...
cd $GOPATH/src/zikichombo.org/codec
git remote add mewpull git@github.com:mewpull/codec.git
git fetch mewpull
git checkout cleanup
```",no
FMPOV it is actually quite the opposite: part of Hono's API is the graphite reporter and the metrics (names and types) that are reported using it. Whether this data finds its way into an InfluxDB or goes down the gutter is of no concern to Hono (because InfluxDB is not part of Hono per se). The header of this section should therefore rather be *Graphite* FMPOV.,no
"I was pretty sure that the extra `andThen` isn't a problem, but I gave it a shot anyway, because I was stuck. In the end I figured it out jus before going offline. This test was actually throwing some errors and they were silently swallowed by QUnit. When I added `assert.expect(4)` in the beginning it actually errored out, because only one assert was being run. I assume that other tests have similar problems that are somehow not causing the tests to fail locally.",no
"Oh, that might be the reason it's failing on travis-ci.
Keep in mind that the Gemfile is currently used for nothing but CI.
I think the proper solution is to wait for a new execjs release and just skip coffeescript tests alltogether if unable to execute JavaScript.
",no
"The execute does throw checked exception, but of course it can throw unchecked one (e.g. illegal argument exception), although with the current implementation, it doesn't. It does feel safer to do the release in finally. Will add that.
",no
"It should never be expected by the code (I'm not sure why the API exposes a `Boolean` and not a `boolean`) except for data integrity issues (came across it while debugging a problematic account -- any GET call would fail).

In this scenario, if it's `null`, it really means ""unknown"" and not success (for the purpose of calculating the amount refunded).",no
"This is a real bug here ;-)

BTW: why do we need to get recaptcha_privatekey into app globals at all? Is it used _anywhere_ in the templates? If not it would be better not to set it at all IMO and avoid risk of somehow exposing it ...
",no
"This release was made with bloom 0.5.13 which had a bug (https://github.com/ros-infrastructure/bloom/pull/329) in the Debian control file generation. Thats why all release jobs for your packages are failing.

Please update to bloom and rerelease your packages.
",no
"@DeadParrot @mbadams5 I'm glad we're having this conversation.  At this point, I still wasn't sure the most appropriate forms for string comparison.  Coming from a long time period where we always had to trim and call samestring means there is bound to be a short transition period where it's uncertain where to go moving forward.  So...what if we set up two functions:
- s_compare_case_sensitive( std::string s_a, std::string s_b );
- s_compare_case_insensitive( std::string s_a, std::string s_b );

We can inline them if it would help, and we could put all the tricks you guys want with respect to first checking length, etc., etc. for best performance.  It would also make it very clear to the team how to do string comparisons properly.

Thoughts?
",no
"The problem here is that we are migrating towards using the asset helper for all of our static assets, and this pr removes it. If there is a problem with the asset helper and shared assets then that needs addressing, but @bastilian is still working on the static assets.
",no
"Yes please release a new version. In the latest version you have dependencies on enzyme and react-test-render which pulls in all the test stuff on production for us and because of that we now have a missing peer dependency because react-test-render has a peer dependency on react@15.5, but we use 15.4.
We reverted for now to 0.14.7.",no
"I've think both way, I think both of them make senses

the reason why I chose this one is because it's more clear.

otherwise, you need add exception checkes after Z_OBJDEBUG_P

but if you prefer to do that,  as I said,  I am fine on both way, please to it as you like. thanks :)
",no
"> I wan't the tagged release commit to be present in the development branch. So the development is truly based on the last release.

Thanks. So what do I have to change from the following procedure of crafting the `CHANGELOG` then changing the version (which will in the future resolve automatically) and doing a pull request to `master`?
",no
"You're right, although it's not this change that's the problem but the earlier rename of the adapter page.

No point in changing anything till we are ready to do a release in the end of the month but we should decide at that time whether we think the home pages are stable or not. Currently I think they are stable but maybe the indirect approach you suggest is better in general.
",no
"I also thought a bit more about making sharing in social media a no brainer on genodians.org. From my personal *mobile* experience I never ever use any icons on the site itself for this but only the *share* feature of the browser or app itself, which is universally available now on phones and tablets. (Is there an equivalent in desktop browsers I don't know of?) Therefore, I would not add any social icons. Also, Mastodon is not easy to add as there are many instances to share on.",no
"@alloy How should I release a new gem version of this plugin? (I haven't released a gem on `rubygems` yet)
- May I release the gem right now? Or should we wait for a new release of CP?
- Some help would be appreciated to be sure that I don't forget anything during the release process
- Should I update CocoaPods' `Gemfile` to use the new released gem afterwards?

Thx
",no
"@kasper93 I would pick only these for now:
https://github.com/kasper93/mpc-hc/commit/84fc89e5909f48f477eb82c3ded3f55318248db8
https://github.com/kasper93/mpc-hc/commit/83e170ca32410f4d187c8b8f0ecf3ceb9c98238a
https://github.com/kasper93/mpc-hc/commit/7df7d417b7af44503125a156d228e877cf6c6822

The rest is not really needed or looks a bit dangerous.
madvr commit will allow madshi to remove his hacks sooner even if we fix the queue later.
",no
"My two cents. 

This sure would be a very different conversation if it was 'WebM for Niggers' or 'WebM for Kykes'. Those words are more accepted as being derogatory in society. I think a lot of people use 'retard' as a colloquial, playful word, but really, I think it isn't acceptable; a community, however minority, is [voicing it's opinion](https://specialolympicsblog.wordpress.com/2012/10/23/an-open-letter-to-ann-coulter/) more openly about this. I think they are right.

We must, I believe, be wary and think critically about any form of censorship. In this case, I believe the censorship is legitimate because the change does not affect any functionality of the repository or suppress opinions (blowing up the forks was quite silly though). Each case of censorship should be exposed to this amount exposure and community thought. I think we are doing well in that regard.

Github are enforcing their TOS and I believe this change is for the positive. People implying that Github are restricting their freedom, I think, will need to try and empathise more with the community of people affected by this word.
",yes
"Hey Colin,

I think you're doing a good job. But still, is there a possibility of an API freeze sometime now? Release that as version 1.0 and let people start using it, build some community, let people take dependencies on it.

Then continue with this exploratory programming on v2.0, perhaps? I'm not saying this is the most ultimate path forward, but [I find it very comforting](https://github.com/logary/logary/pull/3) that people can rely on some version to be stable...

Would you consider tagging a 1.0 release and I and the others can write documentation for it and get people using it?

Kind regards,
Henrik
",yes
"To further enhance the spec, you could use `@app.domain` instead of the hardcoded ""example.com"" string. It would ensure the specs still pass if you were to edit the factory, and better demonstrate the relationship between the objects you created (`@app = create(:app, user: @user)`) and the expectations below.
",no
"You should definitely incorporate a whitelist for this. I know you're only passing in constants, but at some point you may allow users to choose which data they use, and at that point they could change the `$table` parameter to be something like `SELECT user AS title, password AS author FROM all_your_secret_passwords` and read out your whole database.
",no
"Correct, however do to minecraft internals (and compatibility with Forge's FakePlayer) you have to use an EntityPlayerMP to actually carry out the operations (see `ItemInWorldManager`). I am being careful not to expose the player object in any events fired - some of this will be in SpongeForge which I haven't pushed to yet.
",no
"TeamCity QGC - Pull :: Linux [Build 65](http://latestfiasco.com/viewLog.html?buildId=3642&buildTypeId=QGroundControlPullRequests_Linux) outcome was **FAILURE**
Summary: Snapshot dependency failed: QGC - Pull :: OSX Release Build time: 0:0:0
",no
"@mrtracy I think that info about interfaces is out of date. See the go 1.4 release notes: https://golang.org/doc/go1.4#runtime

""The implementation of interface values has been modified. In earlier releases, the interface contained a word that was either a pointer or a one-word scalar value, depending on the type of the concrete object stored. This implementation was problematical for the garbage collector, so as of 1.4 interface values always hold a pointer. In running programs, most interface values were pointers anyway, so the effect is minimal, but programs that store integers (for example) in interfaces will see more allocations.""
",no
"For anyone interested, I've coupled my `.rubocop.yml` exceptions/differences with a version pin to a specific RuboCop version as rules potentially change in any release of the gem. It is a [major hack](https://github.com/fnichol/finstyle), but is easier to pull my gem in and get a versioned `rubocop.yml` without having to copy/pasta things around.
",no
"Here you construct the `constraint` shared pointer and only store naked pointers to it via `constraint.get()` (note that `.get()` does not increase the reference count).  When `constraint` goes out of scope at the end of this function, it will clean up after itself, leaving all the pointers obtained via `.get()` as dangling...
",no
"Why public? This object still tracks the number of text views and it can choose when to subscribe without being a super god-like object.

Heck, if you really wanted to we could get rid of subscribe/unsubscribe entirely and always be attached to the editorsettingsmanager changed and project manager changed events. With that approach the Project getter could do the work of doing `_projectManager.GetProjectWithFilePath(_projectPath)` or it could wait for a `_projectManager` change event for the project its concerned with (if the GetProjectWithFilePath failed to resolve a project)",no
"I don't know the details about the technical details regarding the `Clear` function but avoiding the crash you are describing should be easy. It's just a matter of querying both interface and calling `Clear` only when `ISubRenderConsumer2` was successfully queried.
",no
"That makes perfect sense. It is not currently being used outside of tests, so I locked it down. Please feel free to push directly to master if you want to open it back up to 'public' now, or just include the revert in your next change-set.
",no
"> But yes I'll investigate whether we should use it directly, or get some bits from it. It may be a bit too complete if we only need CEGUIBase and CEGUIOgreRenderer.

Yes, but they may set release and debug libraries better than we do or something, especially if we want to package the beast for most distro possible. Plus, if we can outsource the effort. ;)
",no
"I think we should rename community-minimal --> minimal as you suggested.
I started a devel branch for 0.10.x, it has it renamed already.
If me rename in master, a merge should be possible, reducing merge conflicts to shared pkglists eventually
",no
"So I was thinking Travis might silently be using the system-provided GC and it might.. uh.. cause crashes when compiling cork in particular?

But it turns out, no, it still crashes. If anyone can figure out, I'm really really curious...
",no
"On 12/06/2013 03:42 PM, Nick Boldt wrote:

> Meh. Property one one line vs. global F&R on 3 lines doesn't save a 
> ton of effort.
> 
> The goal in the end is that we won't have to change this.
> We'll release the parent pom, and jobs for branch would simply set 
> -Djbosstools-site-stream=4.2.luna .
## 

Mickael Istria
Eclipse developer at JBoss, by Red Hat http://www.jboss.org/tools
My blog http://mickaelistria.wordpress.com - My Tweets 
http://twitter.com/mickaelistria
",no
"I have more work to do here.  The warehouse base now stores shared pointers to all objects. I took this capability away from some of the warehouses including this one so we wouldn't store two complete vectors to the same objects. Sorry if it caused you trouble, clearly all the tests and all the applications were working without it.
",no
"@i0rek Nice to see this fix, can you please release a version to Rubygems? https://github.com/elasticsearch/elasticsearch-ruby/blob/master/elasticsearch-transport/test/integration/transport_test.rb#L13-L25 is now failing for me with latest Typhoeus installed from Rubygems.
",no
"This change is backwards incompatible and therefore would break existing clients building on this setting.
I'd prefer to let the client choose the timezone, therefore the JobManager constructor should get another parameter like `schedulesTimeZone` with default value UTC. The commit message should be changed accordingly.
",no
"@egamma  this static is very problematic because each editor (when you have more than one side by side) gets his own editor action associated. but with this static, the state is shared across all editors. this is causing https://github.com/Microsoft/vscode/issues/7882
",no
"I commented on #464 about this, but breaking 1.8.7 compatibility in a 2.x release will be a SemVer violation, so unless you're planning on the next release being VCR 3.0, or you've decided against maintaining SemVer or you have some other way to ensure you don't break 1.8.7 compatibility...this seems like an unwise change, IMO.
",no
"Won't this mean that every Suppose object is always clobbering the static shared `self` with itself?

Consider this:

``` JavaScript
var s1 = suppose('cmd1', ['arg', 'one']) // sets self = s1
var s2 = suppose('cmd2', ['arg', 'two']) // sets self = s2
s1.on('prompt 1>').respond('answer 1')  // uh oh
s2.on('prompt 2>').respond('answer 2')
s1.end()
s2.end()
```

It seems like this whole closure is not necessary.  You should just assign `var self = this` in the methods that need it, not in a class-level static variable.
",no
"@mfunk - mind if I edit this `tooldata` comment a bit to be more stern about this being data required to configure the tool (example lookup table) - **not simple input/sample data**. Since this has been a misunderstanding in the past, ",no
"Doesn't seem like it.

It's definitely confusing that ""ScalingActive"" has a comment ""ScalingActive indicates that the HPA controller is able to scale"" and then this is a separate ""AbleToScale"" condition. I don't think the names for these conditions are obvious :(

Does it make more sense to merge the first two conditions into one? The third condition seems to be similar to the ""Available"" condition we have in Deployments. ",no
"Looks like the `libasl` MinGW DLL only exports some of the `libmp`'s symbols. I think the easiest solution is to make `libasl` a static library and simply add a shared library if building DLLs (both `BUILD_SHARED_LIBS` & `WIN32` are defined). Then all the tests can use the static version and the problem will go away while you can have the DLL version of ASL.
",no
"@nosyjoe don't want to hijack the conversation here (so maybe we should take this elsewhere, you know how to reach me I think ;)), but that sounds like a weird behaviour I couldn't yet reproduce. Can you elaborate what exactly you are observing?

Btw regarding nginx, last time I took a look at the officially packaged version couldn't yet handle websockets, kinda breaking the socket communication in OctoPrint in the process or rather forcing it to fall back to long polling and such. Has that changed?
",no
"@kasper93: This should behave less strangely but unfortunately I think it just means closing the file is slow because you have to release a lot of memory (in VS it's really really slow, probably because it must hook the memory functions).
",no
"@emonty Thanks for pointing it out in such great detail - I see entirely why releases must be read-only after publishing them. However, in my case I was allowed to delete the file associated with a release nonetheless, which caused more trouble down the line as I was not allowed to replace the file (at least not via command-line tools). The system seems inconsistent, which is why I was upset :).",no
"Pushed a small patch I had for tonight. Yours look good as far as I can tell.

So when do you guys want to release the stable? note that I'd like someone else to make the branch changes/tagging for this one and I'd like for us to be on IRC for the release.
",no
"Hello,

The patch was expected to work over the release version, not when using checkout or local as the change was already committed to Ruby's trunk.

Since the patch made Win32::Registry useless for 1.9.2-p0, wanted to avoid it miss another release of Ruby 1.9.2

Fell free to use the build overrides to remove .patches definition of Ruby19
",no
"It's very uncommon to have unit tests produce log messages. Usually you want those tests to be silent. They should only produce output if there is something that concerns the developer. Is there a particular reason for having a Logger here?
",no
"Im not talking about moving the unit sandbox (which is arguably in a contract with the user). Im talking about implementation details like the run script, PROF file, whatever, which don't need to be exposed to the user, and therefore don't need to reside on a shared FS.
",no
"I am afraid I was the one originally putting those values. The ports `/wholeBodyDynamics/(left/right)_leg/cartesianEndEffectorWrench:o` are actually used by the old wholeBodyDynamics module and they report the force exerted on the foot but expressed on the `(l/r)_foot_dh_frame`. For some reason (perhaps the `(l/r)_foot_dh_frame` disappeared from the model?) in the configuration file they are set like this, but in general for backward compatibility we need to keep them to report the force exerted on the foot. ",no
"I'm not sure if we want to consider that malformed utf-8 at this stage.  Some UTF-8 implementations allows to ""pass through"" unpaired surrogates so that UTF-16 data can be roundtripped, unlike overlong sequences which has no legitimate usecases (sometimes with the exception for overlong NUL but vim already handles NUL representation with `\n`) and is considered a security risk. vim already display surrogates as invalid codepoints unlike overlong sequences which can look like valid ASCII.",no
"# **Drawbacks of synchronization** 

Before JDK1.5/concurrent package, synchronized is the only one way to handle thread interference but it still has its drawbacks.

The first drawback is that threads that are blocked waiting to execute synchronize code can't be interrupted, once they're blocked, they're stocked there until they get the lock for the object the code is synchronizing on.

Second, the synchronized block must be within the same method, in other words, we can't start a synchronized block in one method and end the synchronized block in another method for obvious reasons.

Third, we can't test to see if an object's intrinsic lock is available or find out any other information about that lock, also, if that lock isn't available, we can't timeout after we waited for the lock for a while when we reach the beginning of a synchronized block, we can either get the lock and continue executing or block at that line of code until we get the lock.

Fourth, if multiple threads are waiting to get a lock, it's not first come first served. There isn't a set order in which the JVM will choose the next thread that gets the lock so the first thread that blocked could be the last thread to get the lock and then vice versa.

So, instead of using synchronization we can prevent thread interference using the class that implements the java.util.concurrent.locks.Lock interference ",no
"Yes, it's very easy, for each error type reported by jslint you need to add an exception rule in the source file
See for example in tweens.js :+1:
https://github.com/melonjs/melonJS/blob/master/src/vendors/tween.js#L6
This will prevent jslint from complaining about all error type 11 for this file.

I should be in the office soon on my side (<1h), i'll fix them once i'm there if you have not done it before :)
",no
"What is this? This looks like some demo data? If so I would suggest you create a demo module, separate so that users who don't want this don't get it (they'll need to delete the page). Maybe something similar to the demo module of https://github.com/xwiki-contrib/application-releasenotes",no
"I've decided that the core shouldn't expose compilation directly and that should be a separate piece of code. Whether it lives in mvc or not doesn't really matter to me. The core will expose an interface to get all references that can be used for compilation (NuGet, Roslyn, GAC etc). There'll be another service that can consume that and do something useful with it (IRoslynCompilationService). 
",no
"@jrobeson Can we please keep the six dependency in a branch for now? We can merge it soon, but I'd like to do a bug-fix release _extremely_ soon (i.e., in the next couple of days) and we can target the next release for the `six` dependency.
",no
"That's nice. I think we need to keep `:local` unmodified and add some kind of local package support to quelpa recipe so we can choose weather we install a local package with a recipe or just add its feature to `load-path` with `:local`.
",no
"I've got some code laying around somewhere that does some 'dumb' testing on private constructors for final utility classes.  Seems like that might be useful to also include.  That might be going overboard but it certainly would hide even more boilerplate code that shouldn't be typed all over.  I'll dig that up after I digest all this.  So far loving all this.  
",no
"@rsnel Could you check this Dockerfile change (which is done in a branch to switch to the newly release NDK r11, which hopefully will be merged shortly)? Note the strange NDK structure with the zip file containing a *.tar.bz2 folder.
",no
"So i have tested the revision.

I built osx32 and osx64 with debug+release, bin, and app - worked like a charm (even -j10 on deps now gets through without problems!) - still the wired rsxs fuck up i don't care atm.
I built ios with debug + release - worked like a charm too.

I runtime tested osx and ios and the quick test showed they work - though not sure how to ensure that all libs are there and working...

I also used the ios packaging script from tools/darwin/packaging/xbmc-ios - which works now too - as you have added the dpkg tool to the native toolchain.
",no
"Please don't abuse comments to suppress code; that's the job of #if-ery.

```
#if 0
    /* We would have called this here, but ... last. */
    char *file = ...;
#endif
```

Also, if the code you _haven't_ suppressed is an alternative to this (i.e. should be removed if, for whatever reason, we end up enabling this code after all), then it should go in a #else clause; and the fact that it doesn't would tell someone reading that it's to be done _as well_ as the suppressed code, not instead of it.
",no
"Theoretically this makes sense; however a failure to post a bus event very likely means we could not insert a row in the database -- that's pretty much what posting an event is about.  Now if we decide to retry the notification at a later timer, what is our chance to be able to insert a notification row instead?
",no
"Keen eye! I didn't change this stuff that I am aware (the diff doesn't lie though!), line 142 has the pre-existing getPrefs(). I didn't write this, I had to look how it works, the multi process flag was implicit (and not exposed even) in GB an earlier. This manner of ORing the flag in sets the bit for newer platforms, and that bit is ignored on earlier platforms.
  @SuppressLint(""InlinedApi"")
    private SharedPreferences getPrefs() {
        return mContext.getSharedPreferences(PREFS_FILE, Context.MODE_MULTI_PROCESS | Context.MODE_PRIVATE);
    }
",no
"I can see this causing confusion once 3.2 becomes stable. Maybe we go through the docs with a big find/replace as part of a minor release process? Alternatively, I think my wording is less ambiguous (""3.1 if the latest stable release is 3.1.x"")
",no
"This whole section is happening too soon. The standard release isn't even done at this point. This should have actually been added as the last step.

Please rename `publishArtifacts` to `complete` and make the default implementation the current `complete()` method.
",no
"@griwodz @simogasp : I'm not sure why this commit is now part of thrust-voting PR #62.
If I remember correctly, @lcalvet said that we should not exposed them like that. These values exist internally but they don't represent what we can intuitively assume as a end-user of the library.
",no
"I didn't realise that you are piggy-backing on sesame-rio-trig, so you can't exclude that module as a dependency.

I think the only workaround without changing how the class works will be to try to ensure that it is ordered on the classpath after sesame-rio-trig. In the past I have a recollection that hacked around this issue by putting a module below the offending module (sesame-rio-trig) in the maven pom.xml dependencies list.

Another possibility is to start piggy-backing directly on TurtleWriter instead of TrigWriter, so that you can exclude sesame-rio-trig in Maven to ensure it never appears. A disadvantage with that is that you will need to keep up to date with future bug fixes by manually copy-pasting them here, but you will need to do that anyway to keep writeURI consistent anyway.
",no
"> Why did you comment it out?

Well atm I have no easy way to print arbitrary messages on the main thread. I doubt anything this prints is very useful to the user anyway and hiding everything other than success or failure is prob fine.
",no
"This is why you shouldn't add endless packages to shared Packages-Desktop, it will grow the basic profile too. All those extra packages, eg media apps, are bloat in order to test.
It was exactly the reason why I added a basic mate profile, I do not have time to wait an hour for a bloated iso to be build just to test.
",no
"The `dictionary` could have been called `dictionaries` and `wordslist` called `dictionary`. However the use of `wordlist` in this context is out of deference to BIP39 (which unfortunately chose to use the less specific term), so we ended up using `dictionary` as a collection of `wordlist`. The value being defined by the pair of files is the dictionary, however even that should really be private to `libbitcoin`. The `dictionary.hpp` should really be a private header (i.e. in `src`) and the enum should be moved to `mnemonic.hpp`.
",no
"I find this workflow quite nice: http://nvie.com/posts/a-successful-git-branching-model/. It can handle hotfixes nicely and would also allow to have release candidates. However I'm not sure how this would do with our numbering system.

The whole idea is to have a branch for development from which you branch when you're planning a release. This new temporary branch is used to stabilize the release while other developments continue on the dev branch. It's then merged in the stable branch and the dev branch. A hotfix branch is basically the same expect that you start from the stable branch.
",no
"@JuanitoFatas The spec is easier to read with this organization:
- It reuses the describe block about arguments
- All three example should actually fail for the exact same reason: the parser, so it is better to group them as passing some of them does not seem likely or useful.
- When running with `-fs` it reads nicely (and that goes as well for tag names, etc):

```
A block taking identically-named arguments
- raises a SyntaxError for standard arguments
- accepts unnamed arguments
```
",no
"I could fortunately restrain myself from modifying anything more ;) (I didn't want to cause merge conflicts for the open PRs and have in fact reverted some of my changes). But it will be interesting to see how clean we can get `RestInterfaceClient` with some removal of string mixins and by using `RestInterface`...
",no
"I agree about the Ideal World but it's probably safer for tests not to trust other tests.  There's just too many things to go wrong.  I also don't see anything wrong with making sure things are clean at the beginning of a test.

Off the top of my head I have no good ideas for automatically detecting these types of issues.  It does suck that I had to spend half a day tracking this down (plus whatever time @beerriot spent on it).
",no
"Yes, but id they use bootstrap but don't want lable-warnig here: need to use Cascading to remove bs class.
You choose to remove bootstrap core css because you say it's more easy for template dev (Cascading can be complex). And this time : you force to use cascading.

I don't understand the choice : 
- use cascading : always include bootstrap core css : this allow us to update more easily to next release of bootstrap + include bootsrap-theme in default template
- don't use cascading : why adding a bootstrap class here.
",no
"phases could indeed be made into separate behaviors, though the amout of shared state makes that wiggling a bit weird... We could try doing a hybrid here, could be interesting / useful. If we allocated immutable behaviors inside here, they could access the shared state with the mutable one...

One might shout blasphemy, but code boilerplate wise and reasonability it may not be bad actually... Does not really differ much from closing over a mutable var with an immutable behavior...",no
"* Stop using blocking downloads wherever possible
* Have a class to abstract away those threading details which are too hard to get right
* Find a way to properly deal with things that require user interaction (foremost authentication)",no
"No specific reason, just slowly moving everything up.  I want to do a new release in a few weeks so we are going to get 0.9.5 up and I'm going to port all of node.js test suite over to this so we can make sure we are completely compliant.
",no
"This happens all the time in Ruby. It's starting to calm down a bit, since the ruby problems have been exposed to people for almost a year now, but I keep updating the test suites as I realise the interesting ways in which the tests fail to specify the reality I want.
",no
"ok, I'll just rename it to ""source"". Cython isn't needed for release builds, since they come with pre-built C sources. It's required for building the plain (github) sources, though, because lxml is actually written (mostly) in Cython. So switching to another Py-to-C compiler will never be an option.
",no
"I think using ugettext / ugettext_lazy here might be a problematic. Someone generating migrations with a different locale will get a different values in the choices - I think it's probably best to only use the translated version at the point of display, not in the model definition. (Even if it's using ugettext_lazy, the string will have to be evaluated in looking at whether the model has changed when generating migrations, I think.)

(More generally, in fact, I'm not convinced having the choices defined on model fields (as opposed to just form fields) is a good idea, since changes in the choices will mean you'll get bugged to create database migrations even when there'll be no change in the database schema (with the database and versions we're using anyway). I might well be in a (incorrect) minority with that opinion though, or be missing some obvious advantage...)
",no
"I would say,  ""just do it"". If you can't do it immediately, need help, or want someone else to do it; reopen or open a new issue.  If we get an annoying amount of backporting issues, we should consider developing the release branches in a forked repo to have separate issue series for different interests. 
",no
"This has been a pretty fascinating thread to follow. My only thought is, are there things we can do at the VM level, like Gemstone/S, which has write-safe data structures? In Gemstone/S they're called Reduced Conflict classes, some of which are exposed in MagLev - [RCHash](https://github.com/MagLev/maglev/blob/master/lib/ruby/1.8/maglev/rchash.rb) & [RCQueue](https://github.com/MagLev/maglev/blob/master/lib/ruby/1.8/maglev/rcqueue.rb)
",no
"Oh, I see. the `index` is what's constituting the Map and other choices here. .. since the index isn't a requirement, you can leave it off of this call, or you can pass `undefined` here, that will probably solve some of the other design choices.
",no
"> The symbol isn't supposed to be exported

Why not? The `path_expandvars()` function is rather handy. 

AFAICS, the Cmake allows one to build either static or shared version of UHD. But not both with the same Cmake generation of the Makefiles (or .vcxproj etc. Which IMHO is a big loss). Do you mean the `paths_test.exe` is only possible in static-mode? And thus one may have to rebuild everything just for this test-program?",no
"The preference in our current rails release is [`config.root`](https://github.com/rails/rails/blob/v3.2.17/railties/lib/rails/generators/rails/app/templates/config/application.rb#L29). The help comments don't seem to exist in the rails 4 releases so I'll have to look this up.
",no
"We're not telling it to skip; the test sees that it's dependencies aren't there, so choose to skip by itself. Why blacklist?

At least this way, if they break the test in some way, or change it so that composer does install the depdenencies, we'll start testing it when we update.
",no
"This was designed to be a `String`.  At issue is that `ApplicationInstancesResponse` is a `Map<String, ...>`  Because JSON payloads must only have `string`-based keys, they can't use a number for the key.  We chose to design the `TerminateApplicationInstanceRequest` to remove the need to convert between the two.  Either @Zteve to @glyn pointed this out and can explain the justification in more detail if needed.

Please revert these changes back to the original state and make the conversion in the `-operations` implementation.
",no
"This change will get pushed with OctoPrint 1.3.6. I try to release new versions about every two months, but I can't promise this timeframe since sometimes things happen that cause delays (tricky bugs in the RCs, real life getting in the way like it did with 1.3.5).

Until 1.3.6rc1 gets published, you can manually checkout the `maintenance` branch, but that's about the only thing that can be done for now. Pushing out a new release or even just an RC produces a huge overhead, and I got a couple of other things brewing that should go into 1.3.6 for which I'm waiting for external input.

May I ask what new feature of requests you are relying on for your plugin to function that prevents it to work with OctoPrint<=1.3.5?",no
"Hi @yo2ldk 

Thanks for your message. I am curious how you got gqrx working on the Raspberry Pi. The binaries I am going to release are built from ground up using a dedicated gcc to make it as fast as possible. I will be looking forward to your comparison between my build and your.

As for the GPIO stuff, I will get back to you later - I have some interesting news in that regard ;-)
",no
"@jcoyne and I have discussed on irc and have agreed that AF and Sufia should push forward on this path for now. I'll work on a way to deal with this that at least throws errors instead of silently deleting data, and raise the issue with Hydra Tech for consideration about how to handle this post 9.0.0. 
",yes
"This will confuse someone running old code.  We could probably work around it by encoding reverting_to in the prior_version position of pg_log_entry_t when op == REVERT.. that's pretty ugly, though.  Maybe we just document it in the release notes?
",no
"the code is (almost?) exactly the same as above. it could make sense to factor it out to a separate function, which is shared between `GraphDef_Read` and `GraphDef_ReadVer1`. boring engineering work, but helps with long-term maintenance
",no
"Think I agree. I've often wondered about extending InChIs, which are designed to be extensible with lots of ""layers"". Trouble with 'm' is what if IUPAC choose to use it for something else? I'm partly surprised they don't have a layer for this already (maybe we should officially propose one)
",no
"Yeah, it's a lot cleaner now, I think waf was a very good choice.

I think making shared libraries is the default behavior of `bld.stlib`, I settled for it instead of `bld()` as I had some issues with `bld()` when I started writing the config file (it failed while trying to recreate the build directory and wouldn't continue the build after building one library).

I'll look into a way to improve it, but it works well for now. Also, when #26 is ready we'll compile most of the files to shared libraries anyways.
",no
"That because of `TransUnitUpdateRequest` is a shared model from GWT and used for all translations update. It has no access to `org.zanata.model.type.EntityType`. The best type to have in shared model is primitive type as I'm trying  not to include zanata-model in GWT. 
",no
"Wow, I totally failed to explain why I chose that regex for valid inner field names, but I'm pretty sure they were:
- restrict to valid JS identifiers to guarantee `.innerFields.fieldName` works, so no leading digit, and no non-alphanumeric symbols besides `$` and `_`, which are special in LaTeX so not allowed either
- allow digits because someone might want `k1`, `k2`, `k3`, etc
",no
"It's a design principle. ""_data"" is an internal implementation concern of DataObject and not part of the interface it publishes for external use. Article file data is intended to be accessed via getter functions instead, e.g. $articleFile->getSubmissionId() and $articleFile->getFileId(). To give it a metaphor, using _data directly is getting into your car using a screwdriver; sure, you can do it, but why bother when the keys are in your pocket?
",no
"@ioannis-e: What was the reason for keeping this for release build? I don't see the point of showing that page.

---

Additionally I find the upload dialog quite confusing because it is never refreshed and what you are actually uploading depends of the currently playing media (which can change while the dialog is opened).

I would like to modify this dialog behavior so that it opens to upload a specific subtitle (i.e. the info get fetched just after showing the dialog). This way the dialog would be refreshed each time one wants to upload a subtitle.

I would also add a ""Close after successful upload"" option to make it easier. We could also have a refresh button that would do exactly the same as closing the dialog and reopen it right-away. If you have better ideas I'm open to suggestions.
",no
"This is too vague. The supported scenario should be described. There's a lot implied in the (excellent) Overview so you don't have to spell everything out, but details like the remote server must exposes a headless service for these invocations are important.",no
"Thanks, this is just the edge `lodash-cli` as `lodash modularize modern exports=npm -o./` output. The official release will use a modified [package.tpl](https://github.com/lodash/lodash-cli/blob/master/template/package.jst) to set the correct package data. I'll be modifying the [readme.tpl](https://github.com/lodash/lodash-cli/blob/master/template/readme.jst) to reference each package source.
",no
"@bkabrda @vrutkovs Using `latest` is not really pointing to a version. It might lead to breaking builds if automation is used. Although, fixing to a version means this file needs to be edited on each subsequent release of Fedora. What would you saw about changing this to `FROM fedora:24` ?
",no
"...however, it leaves an open question regarding how to do default behavior. I.e. if you specify a permission module and it doesn't implement all of the permission functions, then this stuff has to be wrapped in conditional statements, e.g. `if hasattr(permission_module, ""article_read""): ...`
",no
"@mbernat No. A release is basically a tag + release notes. As in https://github.com/salsaflow/salsaflow/releases/tag/v0.9.0 . That is what this story is about. The release notes module for GitHub creates these releases and generates release notes that are there when the user goes to fill in the missing details manually.
",no
"WordPress does the query, then choose the template (in this case, feed-rss2.php), and inside of that is a call to the_content_feed().  That in turn has a call to the the_content() (which is filterable) and has a final the_content_feed filter before returning. So the order of the above 4 lines are in the order they would be executed (for logic sense - for PHP, the order doesn't matter).
",no
"I'm not sure exactly what you are talking about, a NODE_DEBUG() macro is fine for core, but it won't be compiled in for normal release builds, we can make it an optional define though `./configure --enable-logging` I know @orangemocha wanted something similar for libuv
",no
"> Note that we have a checkstyle rule that enforces maximum line length in release notes, so @big-guy didn't have a choice in making this change.

Ah, I didn't realize that! In any case, regarding:

> My concern with long lines is that diff-ing them can be difficult (e.g seeing what has been changed in a commit). It's quite possible that modern tools can alleviate this concern, but I don't think GitHub has solved this.

cbeams@31324c4e4b0681bf80c0c22d43826f35010a4543 is an example of how GitHub handles diffs in long lines. This is essentially the same way that `git diff --word-diff` works at the command line, but even prettier to look at.
",no
"I don't understand what you mean, but if you're looking for an example that's compatible with both 1.9 and 1.10, in addition to the snippet that was posted in the PR conversation, here's the one-liner we use: https://github.com/yourlabs/django-autocomplete-light/blob/master/src/dal/widgets.py#L62
",no
"@bgrins Could we release a `1.4.1` version? This fails the build with closure compiler for the 1.4.0 version:

``` console
exception 'Exception' with message 'Exception in minifier: input:11: ERROR - Parse error. missing } after property list
        togglePaletteMoreText: 'Meer',
        ^
```
",no
"Thanks for the explanation.

It sounds like we could more narrowly tailor the condition to `uiDialog.next(':visible').length` and prevent the form reset in more conditions. If you agree, I will restore the check and add a comment and test case for it.
",no
"Architecturally, it would be nice if some of these things were streams, so it was more natural to attach callbacks.  If the compiler exposed a stream of completed modules rather than a list, it would be sensible to just chain effects on each element rather than having to add callbacks.

The same could make sense for printing toplevel values – the current (proposed) approach, which I think is fine for all of our use cases so far, is to bundle up all the toplevel values in a list and then decide what to do with them after (e.g. print them all in order).  If it were a stream rather than a list, then they could more easily print one by one as they are evaluated.

Since we don't usually have long-running computations in between toplevel expressions that we want to see results for, this doesn't really matter for that use case.  But it could matter for hooking things like image fetching into the UI.
",no
"NOTE, the same improvements could be made to sha256 and md5, HOWEVER, it requires access to the underlying hashing primatives (i.e. inside the oSSL code).  What we are avoiding is the continual computations of buffer offsets, AND the copying of data between buffers. But as you can see, it IS about 25% or so in this case.

Again, when we get to SIMD code, we will have to make 2 'loops' for each hash type.  One for if 128%pw_len==0 and one where it does not.  But for pwlen of 2, 4,  8, 16, 32 byte passwords, this will make a pretty darn big improvement (probably larger than 25% improvements).
",no
"1. Pause when subtitle is on screen
2. Change window size
3. First-chance exception at 0x7737F1A7 (ntdll.dll) in mpc-hc.exe: 0xC0000264:  The application attempted to release a resource it did not own. Click OK to terminate the application.

Other than that issues seems to be resolved.

I will let you decide, but take a look at debug log. Pause madVR and change volume which will show OSD and invalidate madVR queue. Only by that simple operation our queue get invalidated multiple times and for bigger madVR queue it will get only worst.
",no
"And without sed

```
H:\progs\Compiling\mpc-hc_dev>build.bat stable

Do you want to start the release process? Push all your changes to the remote br
anch before. All local changes and commits will be removed. [Y,N]?Y
Please enter the branch name to release [upstream/master] dev/kasper-release2
Already on 'kasper-release2'
Your branch is up-to-date with 'dev/kasper-release2'.
HEAD is now at 6389856 Revert ""sed""

Please enter version number [0.0.0] 1.7.99
Access is denied.
Access is denied.
Access is denied.

Please edit 'docs/Changelog.txt' and press any key to commit the changes...
```

I see a ""version.h_new"" file in include which is basically 3x version.h, 2x the original and 1x with the updated version. See here https://gist.github.com/XhmikosR/59f82e8c0c543fa2a4bf
",no
"This looks like a bug.  The `assert()` will discard everything inside the parens, removing the call to `msgpack_unpack_next` in a release build.  Previously, we checked the status code and aborted if it was't `MSGPACK_UNPACK_SUCCESS`.  I believe that logic should be reinstated.
",no
"The sample here has been rewritten to use the 1.7 release of the client library and the associated new OAuth 2 library (`Google.Apis.Auth.OAuth2`). You should pull in the dependencies with NuGet, and included in this GitHub repo is a sample `dotnet.csproj` and `packages.config` listing the full NuGet dependencies.

The version embedded in the documentation at https://developers.google.com/youtube/v3/code_samples/dotnet in unfortunately out of date, and we'll get that updated.
",no
"These constructors perform a volatile write. But I guess you're only considering removing the call if there are no other references to the field (everything has collapsed back to local variables being accessed in a single thread) so there is nothing that needs the ""happens before"" memory barrier.
",no
"it is not in this beta.
we should change beta version after a release in the future


In data 24 Febbraio 2017 10:34:34 PM Sérgio Da Silva
<notifications@github.com> ha scritto:

> @pventafridda I checked and the default option is ""Inverted"" in the Eng. menu
>
> I did a full profile reset and still the same
>
> --
> You are receiving this because you were mentioned.
> Reply to this email directly or view it on GitHub:
> https://github.com/LK8000/LK8000/commit/548980401b07d28410c86042873ea3975a4f944d#commitcomment-21046219
",no
"The adapter has moved (back) into Rails core, for release in 3.1 - https://github.com/rails/rails/commit/70b9db173e958944fcf61ac8514408fba9ef0c9a

There's a 0.2.x branch of mysql2 now which has the adapter still. People using Rails 3.0.4 or less should stick to the 0.2.x series (there's actually a speed bump with that which we're still figuring out - we'll try to post something about that as soon as I know what the plan is).
",no
"The updated port forwarding implementation is provided in the 1.0.7 release of the vagrant-vmware-utility. The plugin will check the active utility version and use the updated behavior if the version is at least 1.0.7. If the utility is still an earlier version, it will continue using the previous behavior. This was done to prevent a hard requirement on the utility version in use.

https://github.com/hashicorp/vagrant-plugin-changelog/blob/master/vagrant-vmware-utility-changelog.md#107",no
"Ah. See if maybe the current version of DC can synthesize the initial block (I believe in the past it was silently ignored, or maybe emitted a warning). If not, gotta rework how we randomize the uninitialized fields to remove the 'x some other way.

> On May 20, 2014, at 10:07 AM, Colin Schmidt notifications@github.com wrote:
> 
> With the always block the lookup into the ROM would produce x's, where as the initial block behaved correctly.
> 
> —
> Reply to this email directly or view it on GitHub.
",yes
"It could. Both modules expose `resize` with the same signature. My intention is to make `sharp` the default engine once I have that test passing. Then the graphicsmagick binary would only be required for the operations that aren't supported by sharp.
",no
"In such a case I would prefer to have a block (a):

```
if ( ... )
{
    // Some comment giving info about the assignment or so
    x = 0;
}
else
    x = 1;
```

Or the comment is in the same line like the assignment (b).

I will do the change, simply let me know which one you prefer (a or b)!
",no
"Well as we don't allow shared setups, it seems unnecessary to me to split the tests and execute Avocado multiple times and if so then I'd filter only the variants we're looking for. Anyway I'm probably just too optimize-focus (I dislike how long our selftest run). Anyway my (very mild) suggestion would be to use only one `test` and run all checks (`cancel`, `skip`, ...). But feel free to disagree.",no
"Yes, needs a comment. I wasn't sure how this interacts with closure environments, but I assume this code just can't fully handle them yet. The first argument refers to the function itself, so if we exposed it you'd see the name of this anonymous shim function (I think). So this corresponds to leaving off the zeroth argument, which we were doing before with `argnames = Base.uncompressed_ast(linfo).args[1][2:end]`.
",no
"> This method makes me uncomfortable... 

why?

> Could you elaborate on why you chose this strategy?

data reuse. data in indirect blocks becomes un-reusable unless it also happens to be in a similar location in another dag. data all in the leaves is easy to reason about and reuse across files.  i suspect also that the savings are probably not going to be huge. this is strictly an optimization, and more links are probably better. the one edge case is roots, which will usually not be full, so will have room to carry data. precisely where we want to put the beginning of a file. but this makes for a very weird graph if it isn't copied.
",no
"Yeah it has to be bug in plasma, basically plan is that plasma gathers all data (including from rapid) and client only asks plasma (not rapid directly), this is also requested by abma to prevent spam.

Client wont refresh packages at all, it will just ask plasma when wanting to start a game and get all data it needs.. single place and our DB..
",no
"@jedateach @sminnee I think the original idea was to make the ORM interactions more testable by encapsulating state and configuration into a shared object instance. But since we don't advocate its usage anywhere (`$model->SiteTree->where()...`), I don't think its overly useful. It seems out of place in the request handling infrastructure as a method argument, how about requests that don't rely on a database connection? 
",no
"They lost. They chose not to increase their knowledge and skill. Instead submitted a ""7 character fix"" - which, actually ended up to be more as you can see above). I'm working on docs and changes to improve outside contributions. So, in a way, their ridiculous approach will make this (and other) repos better for other people.

Also, pretty sure they're a bot...!
",no
"Yeah, that's the plan. The HTML backend also supports an experimental fullscreen mode, which is accessed via a similarly platform-specific API. I don't think it makes sense to have a cross-platform full-screen API because toggling full screen don't make sense on mobile platforms.
",no
"There needs to be a way to expose the synchronous client thread, things like `displayGuiScreen` need to be executed on the client thread. So either we split the scheduler to have one on server and one on client, or instead of sync/async there could be clientSync/serverSync/async
",no
I sunk hours into trying to track down why Headless mode always quit in my C# test framework (meaning we have to put up with Chrome open/close flickering when we open projects in Visual Studio). I randomly stumbled on this changeset linked from an unrelated discussion and it fixes it. Woo! Thanks 👍,no
"Only real reason is forcing config producers to conform to type expectations statically, but I share your ambivalence.  You'll find out fast when your first config update panics so it's no less discoverable, but it does pain me to not type the channel.
",no
"> Hahaha I felt the necessity to comment first. I'm so hyped I dropped my phone XD (it's in perfect condition still)

That impetuous youth... :-P

Alternative spam link pointing to the blog: http://node-os.com/GitBlog/article.html#!216
And the [RSS feed](https://zapier.com/engine/rss/956964/nodeos-blog) is working really awesome... :-D
",yes
"I didn't actually check either, and also don't really care too much. Just poking around because I have to get the Debian Gods to bless this commit and allow it into the stable release so that my project which indirectly depends on it can avoid getting removed.
",no
"Regarding the clobbering of logs: this can be turned into a silent exception.  I use this technique in several places: `throw NotEvaluatableException();` which prints nothing to the log; it can be caught and ignored.  So, for PLN, wrap the rule evaluator with a try-catch block that catches this exception.  Grep the code for  NotEvaluatableException for examples and an explanation.
",no
"FWIW this is fixed (no need to specify `-D_GNU_SOURCE`) in libxshmfence 1.3 which is basically a build system fix release anyway :).

https://cgit.freedesktop.org/xorg/lib/libxshmfence/commit/?id=0b550a4e7acf02d3478602848f6afbfcbfb0d4b2",no
"My mistake, will patch release and revert and major a new one

On Thu, 7 Feb 2019 at 04.34, nmccready <notifications@github.com> wrote:

> This is actually a major change. For your library as this removed
> backwards compat for node 0.8 and 0.12 which gulp-sourcemaps is reliant on
> see breaking.
>
> gulp-sourcemaps/gulp-sourcemaps#366
> <https://github.com/gulp-sourcemaps/gulp-sourcemaps/pull/366>
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/mafintosh/flush-write-stream/commit/5cab12f5cf23226fcedb93eb9412bf4a9af9714a#commitcomment-32224180>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AAW_VeFGJgexDqFnlXvhcLkc8ahNwWWFks5vK57MgaJpZM4amizf>
> .
>
",no
"I'm not a huge fan op large `if` conditions, even less so in templates. Maybe instead have different templates `app/views/tournament/{rush,swiss}/standing.scala.html` that reuse shared components from, say, `app/views/tournament/common/`.
",no
"I looked into the security of using a guessable socket file name and found this to be secure in the context of Lambda (but not a normal shared Unix system!). The /tmp directory may be shared with future invocations of the Lambda function, but it is not only used within the container of a particular Lambda function, so they should be away for other users to write to the guessable temp file name. ",no
"**Hi, it looks like you are posting on a closed issue/PR/commit!**

We're very likely to lose track of your bug/feedback/question unless you:
1. Open a new issue
2. Explain very clearly what you need help with
3. If you think you have found a bug, include detailed repro steps so that we can investigate the problem

Thanks!",no
"@nchelluri : 
`We still are too close to 4.2 code and we are still in the release candidate. Right now we are not going to apply any change to remove compatibility to Ruby < 2.1 because it may make harder to backport things.
-Rafael Mendonça França 2014-
`
",no
"only the CMake package switch there is absolutely required. the other two work together to make a static library that can be linked into a dynamic library. if you're installing system wide or otherwise in a location where the shared library will be found, no need to use a static library. (pretty sure our build on Debian uses the package repos version of jsoncpp just fine, don't know what Ubuntu would have done with it to goof up the package)
",no
"@karenzshea once you force push Github will lose all the commends here. That's the reason we open Pull Requests as early as possible and discuss there.

If you want to write tests here are two scenarios making use of the edge speed file:
- https://github.com/Project-OSRM/osrm-backend/blob/master/features/car/traffic_speeds.feature
- https://github.com/Project-OSRM/osrm-backend/blob/master/features/options/contract/datasources.feature
",no
"That is not a bad idea... but would require user intervention each time the database is opened. I guess command-line use could allow the password to be passed in, or entered interactively. Would require some refactoring. Do you have code that asks for the password?
",no
"> we are more likely to discourage messing around with the data dir unless you know what you're doing - what with cryptic names and database files/backups.

That's just for the moment, though. The goal here is for this to eventually be something users can access directly, with human-friendly folder/file names for attachments and the database files off in a subdirectory.",no
"Ah, I checked the API to make sure it wasn't yet mapped, but I forgot to check the test suite. Given that the field is accessed directly in the test suite, I would expect this breakage on a second look.

I agree we should map `getNumeral()`.",no
"`foldl'` isn't strict enough to get the desired strictness behavior here, since this will only evaluate the constructor `(,,)` not force the contents. You could define a data type `Count !Int !Int !Int`, explicitly use `seq`, BangPatterns, etc.
",no
"We can probably release it soonish I think. I'm not aware of any regression currently except maybe https://github.com/Underground78/mpc-hc/commit/ec5d34eca26268125195234f40626e5721f0cb17 which is to be fixed.

Ask the others too, they might be aware of some issues.
",no
"It looks like this only actually kills the web socket the next time data is pushed down from the server -- the client could keep sending commands forever as long as the server doesn't happen to reply.

Could we instead keep a list of open sockets and call destroy() on them proactively here?
",no
"Well, in a holistic sense, I _think_ I understand what the issue is: The fact that there are mutable globals like `tiddlyweb.config`. We know tracking down the details of such things is notoriously tricky, and I decided (eventually) there was no benefit in doing so.

Self-contained instances would be nice - and if this was TiddlyWeb 0.5, I'd definitely argue it's the right way - but as you said, changing that aspect would take a lot of effort.
",no
"I am not sure if you prefer this to be posted here or  as a github issue, anyway:

it would be imho useful if a subclass could access the databaseService, which here is set as private and has no protected accessor. It could be f.e. used to give to the RecoEngine subclass the capability to implement complete 'recommendSomething' methods, by implementing something akin to 'findInputBy', which currently can only be done by the RecommenderService class.
I might be getting the architecture wrong, but currently it feels a bit weird to have to do like in the example in the readme (function recommendMovieForUserWithId): in my mind it is the job of the RecommendationEngine class to do the complete work, and not to leave it up to the Service class to do the ""initial fetch"" part of the query...

ps: thanks for the work!
",no
"Does this fix the issue?

  https://github.com/TubeTK/TubeTK/pull/98

On Wed, Aug 21, 2013 at 11:48 PM, Roland Kwitt notifications@github.comwrote:

> On my system, the build fails with
> 
> Linking CXX shared module _tubetk_numpy.so
> Undefined symbols for architecture x86_64:
> ....
> ""_Py_BuildValue"", referenced from:
> _tubetk_numpy_tubes_from_file in _tubetk_numpy.cxx.o
> ""_Py_InitModule4_64"", referenced from:
> _init_tubetk_numpy in _tubetk_numpy.cxx.o
> ld: symbol(s) not found for architecture x86_64
> 
> some of these errors. I am wondering if anyone had the
> same problem on Mac.
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/thewtex/TubeTK/commit/0eeb84ff6147f8777bd8c400620a56dcc8c0bdaa#commitcomment-3917756
> .
",yes
"For ""private"" methods not exposed to javascript we should return NO from isSelectorExcludedFromWebScript (granted it's probably harmless for them to be exposed but I still think it's good hygine to be explicit about what's public and what's not)
",no
"Yeah, I need to give the bower dependencies some love. Having some libraries locked down while others are tracking HEAD is asking for trouble.

Out of curiosity, how are the payloads broken? What errors are you getting? Also, could you give the [latest release zip file](http://omeka.org/wordpress/wp-content/uploads/Neatline-2.2.4.zip) a spin? It worked on my machine and Scott's machine, but having it verified again would be helpful.
",yes
"this will corrupt multibyte characters that happen to be split across a buffer boundary (since it will coerce the two halves into strings before the full multibyte character data is received). I use https://www.npmjs.com/package/concat-stream to avoid this
",no
"This still potentially suffers from the issue @FernetMenta was referring to, right?

I guess the other problem is that it might be harder to restrict this to the problematic hardware, to ensure no regressions with hardware that currently works?
",no
"> Is this commit in latest release of node (v0.10.22)? How can I tell the libuv version?

It isn't.  You can check by looking at the tags (v0.11.12 to v0.11.14 as of this writing) or running `git tag --contains <commit>`.

> Would this fix: isaacs/rimraf#25 (comment)

Unlikely.  The file_flags argument isn't actually used.
",no
"I understand now, thanks.

Sure, I'll go for a full type definition rather than just an anonymous interface. Even though it's not actually present in this package. But it will be easier to copy and paste.

The comments are definitely helpful and will be included.

**Edit:** Made #9 to track and resolve this task.
",no
"Ok, then the right fix is not to revert it but to move that line down into the release tag section. No biggie...

@jlstevens, maybe the same thing happened in other sites you configured?  ""deploy"" would sound like the  correct section to me, too.",no
"So what purpose does that serve?  There are newlines from `fnl ()`, but no line-break hints.  If you do `v 0 (str ""a"") ++ v 0 (str ""b"")`, does that force them onto separate lines?  (I guess this is what's responsible for the strange indentation of a large block, when there's a missing newline...)
",no
"@ElbertoOne Because my base idea is to avoid see_ge calls as much as possible and I believe in most cases a capture-escape means simply moving a hanging piece to a safe square. 
This simple cases are detected/refused trustworthy IMO by looking at the attack bitboards, so not worth to call see_ge anyway in case of refusal: the probability that see_ge subsequently detects a real capture-escape is very low IMO. (Note also that see_ge does not verify if the new square is save or not).

P.S.: Thanks for GL-wishes...
",no
"@agorrod, the concern I have here is that if an application configures a shared cache, and the user is trying to override it by setting `shared_cache.name=none` outside the application, it's not going to work, this code will stop it. Or am I just missing something?
",no
"I wonder if we can make this and FlxText share an interface? I'd like to add some real FlxBitmapFont support to flixel-ui. I suppose I could add any shared interface in the FlxUI-extensions of the two classes, but was checking in to see if there would be benefit in the Vanilla versions. 

Also, should we have a FlxInputBitmapFont too?
",no
"Thanks for the feedback. We agree that this feature can be useful at times but we need to think carefully about how to expose it to developers -- users were actively bitten by the temporary behavior that existed only on some -rc builds.

And to set the record straight, we didn't ""kill any feature"" nor was our action ""radical"" -- 0.8.0 has the same functionality as 0.7.2.
",no
"TeamCity xBIM :: Xbim Geometry :: Release [Build 24](http://ncl-xbim.hq.4projects.com:8080/viewLog.html?buildId=850&buildTypeId=XBIM_XbimGeometry_Release) outcome was **FAILURE**
Summary: Tests failed: 68, passed: 0 Build time: 00:11:50
### Failed tests

```
MSTest: GeometryTests.IfcBooleanTests.Boolean_With_BoxedHalfSpace: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanCutMultipleSolidsFromASingleNonPlanarSolidTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanCutMultipleSolidsFromASinglePlanarSolidTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanCutShellTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanCutSingleSolidsFromAMultipleNonPlanarSolidTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanCutSolidTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanCutSolidWithVoidNonPlanarTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanCutSolidWithVoidPlanarTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanIntersectonShellTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanIntersectSolidTest: <no details avaliable>

MSTest: GeometryTests.IfcBooleanTests.BooleanUnionShellTest: <no details avaliable>


##### there are 58 more failed tests, see build details
```
",no
"@joshuajabbour Ya my thinking was the same as @daffl. If you choose to use a custom id you can do whatever you want.

I mean I can't really think of a scenario where you would want to update your primary `id` so I'm totally fine removing that functionality so someone doesn't accidentally fuck up their data. It really should be a new record if you want to change your primary id.
",no
"The ORM is hidden behind a Repository interface. It creates the illusion that it can be replaced with something else (e.g. an Event Store, document database, etc.).

All the arguments I've seen so far are based on the assumption that saga state will be supported by an ORM. That's fine, but then make that architectural decision explicit in the API. Right now the API is dishonest. Make it honest :)
",no
"Isn't what you need here is that someone passes you a symbolMap, as an extra argument to `expr` ?

This would expose the fact that some `Expr` might be ill-formed because one of the embedded chunks might not have a symbol.

This might be another reason we want to add types a little bit more throughout.  That way we could have an `Expr` which is un-checked for 'sanity', then another one, basically isomorphic, which has more constraints on it.  That one could in fact make sure that `(symbol c)` never fails.",no
"I am not sure what you're talking about. I have used **final** release of NSIS 3.0 (no betas/alphas) and UAC plugin version **0.2.4c**. I think older versions of that plugin don't work with nsis 3.0 final.

Are you using the above versions?
",no
"Best not to silently discard errors like this. This was done in ETEngine a lot in the past and it created so many problems for errors to be thrown away without any action being taken.

Either it is okay for the file to not exist – in which case you're best of checking for the existence of the file _before_ trying to read it (and returning a suitable default value in the case that it doesn't exist) – or the file is required to be there, and the error is valid.

It looks to me like the file should be there is the cache is valid; if it isn't there then something is wrong and the cache is invalid.
",no
"@apuig, the basics to expose the temporal repository are already working.

The `TransientRepository` class will create a random directory (in `/tmp` by default), where the files to upload will be placed. We just need to implement  its `create` method so we fill the directory with the desired files.
Once this is done, I'll implement the API calls to perform the indirect upload to the Abiquo repository.

With the current code it should be pretty straightforward!
",no
"For this change I think it is for @maranget to decide. When Jacques extended exhaustivity checking to take GADTs' typing information into account, he chose to copy the old definition and extend them, instead of modifying them in-place, keeping the old ones commented as a kind of ""simpler reference implementation"". Luc, do you think that it is still useful to keep the old definitions around? Do you rely on them to understand/maintain the code sometime? I would agree with Thomas that it is a bit confusing to the newcomer.",no
"It is also advised to start conversations @ https://github.com/spryker/support/issues . You can move it there if you want to.
You can link to commits in repos, but we shouldn't have conversations here in between code. Often times this is not spotted and then overlooked.",no
"@SilverFire That's why there's the note in the comment block above:

> You should make sure, that these are safely serializable

Regarding float: Some suggest to use `json_encode()` instead to avoid precision issues. Should we change it?",no
"I do think sbruno@FreeBSD.org has posted patches to llvm.org to enable -integrated-as by default in clang on mips64 (it is already enabled for mips o32 IIRC).  I do think it is simpler to set this in XCFLAGS (or XCC) than hacking the Makefiles in this way as XCFLAGS covers userland, not just the kernel.",no
"I understand, but if you have a stable build you don't have to upgrade to later versions of albacore. If you choose to update and use my work, it's reasonable that you help to maintain it as well. Sorry about the breakage non the less, but this was failing its tests and it's a community maintained task type. Since it was failing on OS X, I had to remove it – being able to release new versions can't stopped.",no
"@elainethale I'm done with this branch for now, it didn't look like you were saving fields to the database yet so I didn't add this in there.  

@kbenne I'll make the cloud provider calls non-blocking in a separate branch once this one is merged to develop.
",no
"@twilmes note that i removed this entry from changelog as it's already part of 3.1.3 changelog and will be part of the 3.2.1. i don't think we will ever release a newer version without an older version so with it, so for right now we've been sticking with the pattern of only adding the changelog entry in the release branch of code that the change happened.
",no
"> And which seems to invoke Dr Watson in both Release and Debug-mode.

OK, so what must a program that wants UN\*X behavior - return an error code, and let the *program* deal with the problem, rather than reporting it as a bug in the program - do?",no
"I don't know if they use means of preventing cross-mod access (class loaders). If they don't it boils down to the question, if they allow you registering without a Sponge plugin instance. Wild guess is that they might allow that, but i can't tell.

My assumption is that they will ""somehow"" map the sponge levels onto whatever is underneath.
",no
"@moxie0 Hi, I would like to ask you to always publish for each release version the checksum/hashes on your system before uploading to Google Playstore.

For the 2.0.6 I determined:

```
Filename org.thoughtcrime.securesms.apk
Version 2.0.6
MD5  e6f22b00e58269426f2397a239eb8903
SHA1 ed31f8c13b3eb7c91588d207ee3fd7eb922822c9
```
",no
"This line seems arbitrary.  We should at least open an issue for this rather than let it silently enter the code base.  If we want to make `form:contact` documents a standard part of the system that we handle specially, or might be better prefixed with `contact_form:` since anything after `form:` is currently arbitrary.
",no
"Favicons are site-specific and are not deployed with MPOS. No effect on the application whatsoever. Any reason for reviving a 2 year (!) old commit? These comments are spamming inboxes of those people signed up to this repository to track important notifications. Yours is rather ... useless ...
",no
"Ok, I'm pretty sure I recall having a conversation with Adam where this was the outcome. We must have just not updated the spec. 

I would absolutely do this, as the →File conversion is much more complicated than the rest of this story as you point out.
",no
"I think we want to expose a struct here representing an hobject_t.  Something like:

```
struct object_t {
  std::string name;
  std::string namespace;
  std::string locator;
  snapid_t snap;
};
```

I think we've expose a snap type before for the interface for querying the snaps available on an object, so that's the type we'd use for snap.
",no
"Not if you have separate changes in the same line ;)
That's why I always check diff before commit.

Anyway, you can't avoid conflicts in version control, especially distributed version control will lots of social sharing and contributing. Fortunately Git and GitHub make it quite easy to live with that (and fix problems).
",no
"@Nadahar I just confirmed that Maven 3.5.0 works with Surefire 2.20, and they seem to have skipped 3.5.1 so only the latest release breaks.
I want to resolve this problem so I will roll back to Surefire 2.20 for now. If it continues to break with future Maven releases we should update it eventually, or maybe 3.5.2 is just a bad release.",no
"Would it be worth restructuring this to be able to expose it?  In case someone wants to supply and ExecutorService but also wants netty to clean it up?  I guess you would have to change type of `executor` to `ExecutorService` and extract out the common parts to a new method.  I'm not sure if this use case makes sense. WDYT?
",no
"Actually, that function could only work if it were defined within `allowProxyTraps` itself. As it stands, there are already some internals being exposed here: the `throwTest262Error` function. I'm on the fence about the change, though, since I usually like to limit abstraction... [in the runtime, anyway](https://github.com/tc39/test262/pull/481) :)
",no
"I'd probably just call `handleExposure` instead (actually I'd probably name that function differently, but we're nitpicking now) to encapsulate this properly. In fact, the X server should send you an Exposure event after the configuration change anyway, so you probably need to do nothing at this point in terms of drawing. The one extra round certainly doesn't hurt, though.",no
"@pasin did you delete your comment about `@Override`?  I can't find it here.  Anyway, it looks OK to me.  IntelliJ was adding that, and when I researched I found: http://stackoverflow.com/questions/212614/should-a-method-that-implements-an-interface-method-be-annotated-with-override
",no
"This is an artifact of the testing process.  I chose 0 just because everything else writes NO_SHARD and normally a gen_t other than NO_GEN implies NO_SHARD since it must be an ec_pool.  This path will only be used for debugging the rollback code until ec backend is ready to go.
",no
"Since we don't have a platform to test the proposed code I would choose to keep the code as simple as possible. Once we get to the point that we want to build on a platform which requires more we can update the code knowing that it will actually work. As your first link nicely shows: just adding the snippet without trying it on a real platform will very likely not work as expected.
",no
"The choices of IE10 are irrelevant here in this discussion. This is about Apache doing **user agent sniffing**, which doesn't 
1. Make the specification better or respect the spec.
2. Doesn't solve any issues for the users.

The users are taken into hostage in a political game between Roy Fielding (Apache, DNT spec editor) and Microsoft. This is not reasonable and will not help anything.
",no
"If there's no prefix, how about we just use ""light"" as the name of the attribute? We allow unprefixed shaders with the intention that someone could choose a workflow where they write shaders with the same parameters for different renderers, so perhaps we should support the same thing here? I guess we'd also need to update the other spots where we're looking for a prefix?
",no
"Friendship is a little scary. 

Won't all of the smooshables become dirty at once? That is, do we really need to do this dirty marking and collection, or could we just keep track of all of the smooshables in a given Chain (or Pile) and force recalculation of all of them? (I realize I was the one that suggested dirtying.)

I don't have my head entirely around these questions, so sorry if naive.",no
"Perhaps getEnvironmentFactory should support foreign Dali, e.g. getEnvironmentFactory(const char *foreignDali)

It would need to behave differently, i.e. no subscription, and there probably wouldn't cache and so release the connection/root after out of scope, but at least it would be going via common interfaces to get the info.
",no
"I strongly advise against any chat-session:
1- It's only for the privileged invited people
2- There is no (permanent) history
3- there is no time to think before answering.

Please keep git-issue conversations on github; that's what it is for.
And as you see: it's virtually real-time :)
",no
"> _It is practically impossible to teach good programming to students that have had a prior exposure to BASIC: as potential programmers they are mentally mutilated beyond hope of regeneration._
> 
> Edsger W. Dijkstra

C'est comme ça et pis c'est tout. Oubliez deux minutes Java et valsez le Ruby comme Matz l'a conçu.
- http://ruby-for-beginners.rubymonstas.org/objects/predicates.html
- http://ruby-for-beginners.rubymonstas.org/writing_classes/attribute_readers.html
- http://ruby-for-beginners.rubymonstas.org/writing_classes/attribute_writers.html
",yes
"In this section, I would prefer to see one of two changes, either simply list the Fine Uploader features and link to the appropriate pages on docs.fineuploader.com, or combine all of the options below into a single coherent block of code with comments in the code if needed. By breaking it up like this, there is a good chance integrators will simply copy and paste and wonder why nothing works. In other words, they should be able to copy and paste working code. Either way, I'd like to see links to the docs as well.
",no
"Even though I view a blocking read as the fundamental interface, internally something like a Chan is still needed to queue waiting events when they aren't read fast enough, and a Chan does expose a blocking read. There is probably an issue now that the Chan is unbounded.
",no
"Lol, they only support Intel CPU :+1: 

I decide to wait next AMD driver release to remove the hack. So far it is only a hot fix which seems to contains half of the fix. There is a high probability that next driver will either break it again or ship the full fix.
",no
"Hi @ibaca Thank-you for getting back to my comment. You could try https://github.com/droolsjbpm/kie-wb-distributions/tree/master/kie-wb-parent/kie-wb-webapp .. we get common reports from our Community that this isn't ""Windows classpath length friendly"".",no
"Can some more comments be added? Looking at this I don't really now how I'd use this in my autopilot or even if it's appropriate. Since the common messageset is supposed to applicable to autopilots in general, it'd be nice if messages had details on how/why they're used beyond just a brief description.

From this description I imagine it's for syncing the autopilot time to the groundstation? But I though the HEARTBEAT message already included the autopilot's clock? So who normally sends this in a GC<->AP connection? Why doesn't HEARTBEAT work?
",no
"This also protects us from the case where the user has switched their version of R (we ensure we're getting the package from the appropriate library). It certainly could be tweaked though.

I figured deleting / creating symlinks was cheap enough that this solution would be fine.
",no
"If you can work with that release, that'll be simplest.

On Wed, Oct 15, 2014 at 9:40 AM, Georg notifications@github.com wrote:

> Ah, I have seen you just created the release 3.0.0 . Thanks.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/zeromq/czmq/commit/4e677aaef9c9c51e10b5c1eeab7d5665d3c89e50#commitcomment-8166251
> .
",yes
"@nikic in the mail they didn't share details. I've a host and also a V-Server there, which was rebooted silently already a couple of days ago. Otherwise they also assure, that there is no evidence about the flaw abuse cases.

To my current info, any hoster applies patches as soon as they come in. After talking to yet someone hosted at Hetzner - there's a detailed list https://wiki.hetzner.de/index.php/Spectre_and_Meltdown. The fixes consist on processor microcode and BIOS updates, as well as on kernel patches. I know also from several other sources, that servers are being upgraded and rebooted aggressively last couple of days on Azure.

Thanks.",no
"I create TimestampWritable object for that because I think that it may not be good to expose TimestampWritable's internal logic to this scope. But since performance effect is a very concern here, I add new commit to use TimestampWritable's logic to check the nano. Thanks for comment.
",no
"Yeah, that's about what I figured. What I was more interested in hearing from you was regarding:

> Sadly, this error message and line number were not very helpful in tracking this down. Perhaps this error message could be made better, or a comment could be added near this line in jest-runtime that would help point people in the right direction.

What do you think?",no
"Yes, I was thinking about that, but honestly not sure I care in this case. It's a simple carrier that shouldn't hold logic etc. Also, in that case there should probably be an item that doesn't expose state at all, just configuration methods. That I might do.",no
"TeamCity QGC - Pull :: OSX Release [Build 75](http://latestfiasco.com/viewLog.html?buildId=3721&buildTypeId=QGroundControlPullRequests_OsxRelease) outcome was **FAILURE**
Summary: Snapshot dependency failed: QGC - Pull :: Origin Fetch Build time: 0:0:0
",no
"@chrisseaton Anyone working on SharedMethodInfo would see them. But also...why delete it completely? If the comment had value, it should be restored...and then the difference is in one `*` that will let IDEs show the doco. This seems like a philosophical debate at this point.
",no
"- Olivier Mengué notifications@github.com [2013-03-08T09:18:46]
  > This has been released only as [a DEV
  > release](https://metacpan.org/release/RJBS/CPAN-Uploader-0.103003-TRIAL/) on
  > CPAN. Can we expect a production release soon?

I will make a production release on Monday, when I return home!
## 

rjbs
",yes
The stable guide should get updated once we release a new stable version from 5.2 series as this change also already exists in 5-2-stable branch: https://github.com/rails/rails/blob/3ea9832be872c2331cdcd3e0da120c52c3810b85/guides/source/maintenance_policy.md#security-issues,no
"@href I'm a bit puzzled by this commit... won't this mean we have links in the JSON download, which are not accessible by anonymous users? I thought we aggregate the JSON of two sources to get all necessary links. I assume these protected links will be from the primary source, which overwrites the secondary one. Would you mind to elaborate the target solution?
",no
"@TomaszKolek Only received a user report about it. It changed double space separated tags (valid robot syntax) into comma separated tags (invalid robot syntax) without clear documentation benefit.

But no worries. I released 0.8.0 with double spaces instead of comma. If you are still using it, you can keep with the latest 0.7.x version.
",no
"@lsetiawan this is a great addition. I would love to add some test for the CLI in `Travis-CI` but there is still some work I need to do to package the data required for `odm2admin` to run properly (not only a test database but also the `csv`s, `txt`s, and `html`s in the repo).",no
"needs to be in a separate PR anyhow, but there needs to be a fair amount of tests to see if it works correctly
your fix might be right, but need the tests to prove it. partially fixing a problem is ok as long as the boundaries are well defined.
",no
"You were thinking and talkking about the test tag, and this big comment is about the test _labels_.

So, I think I should at least try to replicate what the original `insert_test` function does:
- Try to locate the Test Labels from the database using the index (integers) that could be on `test.labels`
- If the Label exist, add the Test to it (that is, tag it)
- If not, bail out

How does it sound?
",no
"I fixed it in the blog — I'm likely to tweak the release notes a bit more
between now and then, so I can also fix here.

On Sat, Oct 1, 2016 at 5:54 AM, Thomas Lin Pedersen <
notifications@github.com> wrote:

> Since it has been send out already I guess it doesn't matter. Will this be
> repeated upon release or will there be a new one?
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> https://github.com/hadley/ggplot2/commit/e3599d21f4bb9a9243ee7186fdf98ee7cbb9630e#commitcomment-19253016,
> or mute the thread
> https://github.com/notifications/unsubscribe-auth/AAAQZIuwNfjq2CAs3VrbzeoypOoKU-SOks5qvjvygaJpZM4KLd4l
> .
## 

http://hadley.nz
",yes
"Ok. So how about we make `stable` branch and cherry-pick fix there and release 1.7.6 (hotfix) or 1.7.7 whatever... We carry on with master branch as always, and merge it to the stable one before every release. Version numbering stay as is since we doesn't need it for stable (we use only X.Y.Z) and our workflow with mater branch would stay the same. Unless you want more complex workflow to be integrated.
",no
"@philipbelesky I decided not to add permanent redirects here since ordinarily this page should only be accessed via results, and users typing in the URL who hit a 404 would presumably just try to do this by clicking through from the results page. Let me know if you think we should put 301s in place.",no
"Using a shared `zfs-common` file for the distribution specific bits is something I'm normally all for, but I'm not sure it's worth the trouble in this case.  At this point we just need to maintain init scripts for lsb style systems and for CentOS/RHEL6.  Everything else at this point has moved to using systemd.

Since we already have the infrastructure to install different init scripts what about install having a `zfs-mount.lsb` and a `zfs-mount.redhat`.  That would simplify testing greatly since every change wouldn't need to be tested on both platforms.  In some ways this might even make a `zfs-common.lsb` and `zfs-common.redhat` file more useful since it could clearly include the right common bits for that platform.

A good example of one thing this would help with is the logging.  As I'm sure you're aware the way the lsb standard wants you to log things and they way Redhat wants it done are annoyingly different.  I see you've provided some wrappers to handle this but the resulted scripts would be easier to read if we didn't have to add this additional layer of abstraction.
",no
"`DataTokens` is usually null. One of the goals of this design change is specifically so we **can** use a static empty dictionary here.

What I'm going to do here is just expose `.Empty` as `IReadOnlyDictionary<>` and then if we need to refactor later we will.
",no
"Careful! This can hardly be merged as-is - some settings may be sensitive (passwords!) and this controller is entirely open (no access control at all). Either you require ADMIN permissions to access this controller (preferred) or you restrict which settings can be requested through it.
",no
"> As far as I get, release version shouldn't provide APIs to customize host.

I'm not following you?

> We need to find a solution to provide test config while running test cases, instead of production config. What I am actually looking for is something similar to gradle android plugin's build flavors that let's you use different versions of source sets. If I succeed on that, we just need to have a different Defaults file under some other path that will be used with test cases.

Perhaps, but that introduces the possibility that when in production we have other issues.  No other client library has had to do this, we simply instance all libraries with `environment: 'sandbox'` for our test suite.  I am not following why that is not a viable solution and why we should add more complexity 
",no
"Right, I even realized it's safe before I read your comment :)

It does clear up Wipeout quite a bit. And with dual source alpha (available on PC only) we can do even better without multipassing.

Yeah, should check for those extra cases as well.
",no
"This is dangerous. I assume this is used to pass state between methods. This data should rather be passed as a parameter if possible.

The reason it's dangerous is it can cause memory leaks. Do we clean this reference up by setting it to null? Do we have a try-finally clause so that cleanup is done even when an exception is thrown?

We don't even have to answer those questions if we pass temporary state as parameters.",no
"So transforming it into a map and making it immutable makes it that hard to digest? I see XML and JSON less ideal than Groovy literal data structures for this. This way requires no parsing logic, just evaluation. Type safety and proper object creation is built into the code. In terms of complexity I'd much rather have a collectEntries() to deal with than reading in an external file.
I can change the names to reflect the Map nature, and add some documentation about what data I used from the page.
I don't think there will be a repeatable way to generate this any time soon. We will just be modifying this file when metrics change. It's not ideal in my opinion either.
",no
"I though Firefox supported this, but it apparently only supports `window.location.origin`). If you choose to polyfill the functionality, you'll need to handle the port here as well (and note that the port is only part of the serialized origin iff it's not the default port for the scheme: that is (https://example.com/ -> https://example.com, but https://example.com:21/ -> https://example.com:21).
",no
"I think that perhaps the best approach for the change stuff would be to tackle that in a separate change.  It applies to any change that might occur to the subscription.  I'll open an issue for now, since I don't have quite enough time to propose text.
",no
"BTW, it can't be `@protected` either because it used by other classes. Right now, the only way that this function is protected from external abuse is the fact that it is not being exported. I should probably add a comment along the lines of ""only use this function if you know what you're doing"".
",no
"Love the UI you built for this. Very nice. A couple of things: 
1. In the reports controller, you are using the permission `Bonfire.Activities.Manage` which didn't exist when I ran the migrations. Needless to say, I had to comment out that line to get past there.
2. I understand the need to be able prune database tables, but I'm a little concerned over the security of deleting activity records. I guess I've been working on too much e-commerce stuff lately, which payment gateways, etc, but I've gotten in the habit of not deleting activity records so that you can't hide a trail. I don't know how much of a concern that is for a generic skeleton app like this, though... I could use other's opinions on this.
3.  If a user doesn't have permission to delete anything, is there any sort of blank slate that appears for them, or is it just an empty page? 

@seandowney, @daK71
",no
"I still get this for some unknown reason

```
H:\progs\Compiling\mpc-hc_dev>build.bat stable

Do you want to start the release process? Push all your changes to the remote br
anch before. All local changes and commits will be removed. [Y,N]?Y
Please enter the branch name to release [upstream/master] dev/kasper-release2
Already on 'kasper-release2'
Your branch is up-to-date with 'dev/kasper-release2'.
HEAD is now at f05e41a Fix `GIT_PATH`.

Please enter version number [0.0.0] 1.7.99
sed: preserving permissions for `include/sed003460': Permission denied
sed: preserving permissions for `include/sed003708': Permission denied
sed: cannot rename include/sed003708: Permission denied
sed: preserving permissions for `include/sed003004': Permission denied
sed: cannot rename include/sed003004: Permission denied

`sed` failed to change version number in 'include/version.h'
Please edit 'include/version.h' manually.
Press any key to continue . . .
```
",no
"Yeah, I may change the way this is done again. But it's nice for example to be able to give a third party access to one of the instances's machines without giving them access to all our instances's machines. Etc. In the future we could, in our private config repo where we store the vars for the various environments, find some way of having a shared file that's imported to the others or something, but I didn't look into how to do that for now.
",no
"I understand what your goal is, but you can't just make the BidiSupport plugin silently disable the NormalizeIndentOutdent plugin.

Instead, perhaps BidiSupport can set up some sort of advice in the editor to get notified before and/or after the indent operation executes, to do bidi related cleanup.
",no
"Oh, right, even if raise_warnings=() then it still unconditionally sets all
deprecation warnings to be displayed :-/. I guess you could just ignore it
for a release or two since it's just an ugly message, it doesn't hurt
anything...? Sorry, not sure what else to suggest :-(
On Aug 16, 2015 4:06 AM, ""aaren"" notifications@github.com wrote:

> @njsmith https://github.com/njsmith this doesn't seem to squash the
> nose.loader warning though.
> 
> from numpy.testing import Testerfrom functools import partial
> 
> tester = Tester()
> test = partial(tester.test, raise_warnings=())
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/aaren/pywt/commit/a98739adffbd54050288729931e94b9170fbda84#commitcomment-12727351
> .
",no
"Here is a cloud link that @un1versal sent me:

https://cloud.githubusercontent.com/assets/3521959/17084120/d4d15c34-51ad-11e6-8819-e81db621a698.PNG

He mentioned the services subdomain, but never shared a link... I figured just changing the regex to the whole domain would be better.
",no
"The semantics of this just seem off, we essentially have a function called `doX` with a parameter that lets you tell the function to not do `X`. If we expose this functionality, it should be accessible by a different function altogether.
",no
"Sorry, previous comment was directed at @hamiltont.

@msmith-techempower If the goal is to completely get away from installing anything via apt, there are certainly approaches that are less invasive than building GHC from source. If you're interested in more information, maybe we should have a text chat/email thread; I think comments on this pull request are getting a bit difficult to navigate.
",no
"whats prefered in such a case: silently accept invalid input or give an error message?

in this case: is the error message ok or silently ignore the invalid values?

i guess i miss a common rule for the lua api, how to handle errors.

(i know, i've asked the same/similar question some time ago, but still i'm unsure when to do what)
",no
"The main thing I commit to supporting is Stackage, meaning that the latest versions of the `dhall-*` packages will all build together (and with other packages on Stackage).  That's why I release them all in lockstep whenever I make any breaking changes to the `dhall` package and I also curate the upper and lower bounds to reflect the valid build plans.  So that means that if Nix tracks a certain Stackage resolver then `dhall-*` packages should build if you select the exact set of `dhall-*` packages that the Stackage resolver selects.

The exception is `dhall-nix` which I only recently found out had been removed from Stackage because I must have missed the e-mail notification for the `hnix` major version change, and I plan to add that back to Stackage soon now that it's fixed.

However, supporting anything beyond that is a huge maintenance burden.  That was part of the reason that Stackage was created in the first place since supporting build plans for all possible permutations of older dependencies was infeasible and led to people aggressively avoiding dependencies back in those days.  The other problem is that supporting older build plans leads to diffuse blame when things go wrong because then no one person is accountable for fixing invalid build plans.",no
"Thanks Alec, I lost track of this one.

2014-03-05 19:31 GMT-03:00 Alec Smecher notifications@github.com:

> A proper fix has been posted to the link above.
> ## 
> 
> Reply to this email directly or view it on GitHubhttps://github.com/pkp/ojs/commit/dec51c5798845caad4b878e8e9800e94714038c8#commitcomment-5579270
> .
",no
"but this is not exposed to the outside. I needed an iterator and erase function here but this are not exposed either. I was tempted to change the queue to a deque but did not dare. It would have a large impact in ralation to this rarely used method. we should revisit G+1
",no
"Silently fail if the user has explicitly requested to remove the permission. When we update to API 23, we will request every permission we need, this will be presented to the user (unless it requested that it is no longer requested anymore).

I think this is the proper thing to do here. Indeed it will be hard to diagnose, but cgeo is perfectly usable without having the user permission (for searching and logging for example).
",no
"Oh, nice, @jdickey! Reek has a great option of excluding methods by name, but RuboCop’s exclusions are only file-based, so these comments might be a better option than raising a global limit.

Not sure what @solnic thinks about polluting the code with such comments (although if/when they’re irritating it’s a good moment to make the code simpler…). ;)
",no
"Heya Nate,

Here is the PR which should restore the functionality we had before - to choose items per page in the Paginator.
I put the templates (TPL_CONTAINER) to the prototype intentionally - as constants above there is no way for component, which extends the current one, to overwrite them. This turned to be significant limitation in Alloy, so as pattern we started to put these in the prototype and I did the same here.

Apart from that, there isn't anything unusual in this component.

Edited:

I talked to Juan and as a result we decided to make it looking exactly as the part, which is in charge of changing the items in the other Paginator. For that reason, I tried to make the markup as close as possible to the other one, which is created via taglib.

![screen shot 2013-10-31 at 17 09 12](https://f.cloud.github.com/assets/78014/1447410/d463b9a0-4246-11e3-857b-16d12347cbd0.png)

Thanks,
",yes
"A pstrdup() would be simpler than StringInfo here.

Actually, there is no need to close the relation before calling ereport() at all. Transaction abort will automatically release any locks. So you could just remove the relation_close() here, and pass RelationGetRelationName(seqrel) directly to ereport.
",no
"This isn't about generating a canonical depiction (I'd also use the canonical ordering of atoms to drive that), it's just to ensure that the depiction that does come out has its long access aligned with X. The code is here: https://github.com/rdkit/rdkit/blob/master/Code/GraphMol/Depictor/EmbeddedFrag.cpp#L1145
",no
A major Hibernate upgrade (4 -> 5) coming in a Bugfix release of Querydsl is going to cause issues and catch a lot of people by surprise. I'd argue that Querydsl 4.x needs to stay Hibernate 4 compatible. It might even be but with the dependency upgrade you'll have a hard time capturing changes that only work on Hibernate 5.x and don't work on 4.x.,no
"Really? Is this in MSVC Debug that its slow? I know that has extra instrumentation on iterators, that would explain it. In a proper release optimised build I'd be surprised (stunned, actually) to find that whatever.end() didn't optimise down to near nothing (I'm pretty sure it does on libstdc++).
",no
"Please don't comment on a commit outside of a pull request it's near impossible to track the conversation. 

If you would like to propose a change then submit a pull request. 

You can absolutely set the property in code without IntelliSense ",no
"Ok. Lets all stop posting here now. country_select has already been converted to a plugin[1] and removed from rails[2]

Lets keep the discussion here purely technical. I'll be deleting any comments that are about selecting the color of the bikeshed.

Thanks.

[1] http://github.com/rails/country_select/tree
[2] http://github.com/rails/rails/commit/2d27b82d4cf446543539ad20afcbad256d8aeff7
",no
"Hey @gijsk, do you plan to release an updated version at some point? I was interested to get the readable content as plain text – it would be useful for other dependends such as [readability-from-string](https://www.npmjs.com/package/readability-from-string) as well.

Thanks a lot :-)

PS: I can track that in an issue if that's more handy for you all.
",no
"@matthew-brett - I wonder this is the right way to do this. In 2.0 we dropped support for <1.9 numpies, but not sure whether it should be the latest release in the minimum supported version family?

Also, could you confirm that the wheels are built for newer numpy versions, too?",no
"Right, transactions are not _always_ a replacement, but can be in certain cases. But a general lock idiom implementation would provide full locking and means a much better separation of concerns than integrating it into the Redis type wrappers. It then also allows to lock multiple keys with a single lock.
",no
"I should say this solution has some limitations. All threads which would normally be blocked on a select now wake up every 500ms (too frequently), and we've also increased the latency for safe points where threads are blocked on a select to 500s (not frequent enough).
",no
"@paulmey ooooh my bad. was still trying to wake up lol. This is very cool can we remove
1. choose by `subscriptionName`, I think subs ID is a good enough and robust solution (unless we have a reason to keep the name which is just an arbitrary modifiable string
2. let's call this method `ClientFromPublishSettingsFile`. 
3. Also we need to have `ClientFromPublishSettingsFileWithConfig` where we accept custom configuration in `Config` object.  
4. (optional) can we somehow remove the `publishsettings` field on `Client` and make it use `makeClient` method (or vice versa)?
",no
"It does simplify the parser implementation; however, it also limits our ability to use existing INI parsers, forcing us to reinvent the wheel a bit. That's the down-side I see. Code coloring within editors won't match either. I see more cons than pros.",no
"@embray - just for info, this is kind of important because without this releases of packages will still get a .git warning. I think I'm going to go ahead and do another bugfix release (I think it will be too confusing to do a hot fix)
",no
"This approach allows for false positives (since there is no expected assertion count). You _could_ ensure that the `catch` block was executed by using a counter variable, but `assert.throws` is more direct/readable (plus, it lets you specify exactly what type of Error you expect).
",no
"(Btw...wasn't meant as criticism - but this entire commit looked strangely premature for one coming from you. Of course /I/ understand how too many construction sites either affect code quality, or slow down progress - although I usually choose the latter)",yes
"We've been using [`meteor-babel`](https://www.npmjs.com/package/meteor-babel) to transpile [tools code](https://github.com/meteor/meteor/tree/devel/tools), in order to evaluate different ES6+ features internally before we release them externally.

The interesting logic is [here](https://github.com/meteor/meteor/blob/devel/tools/main-transpile-wrapper.js). Note that this approach works only for server-side Node code, because it depends on the `require.extensions` API, so it probably won't work for client-side code. We have a different implementation (based on Meteor compiler plugins) planned for package and app code.
",no
"the release is currently under review: 

https://lists.apache.org/thread.html/0fdd5f37a668e8a579586d94f1115d8f604d9c18a9096373aaa8d2de@%3Cdev.tinkerpop.apache.org%3E 

you can probably expect a release announcement on monday provided no objections are raised.",no
"No since this is a new/major release we're allowed to do breaking changes.
Going forwards we want to expose as little public api as possible to allow
us to evolve faster. The api we do expose should also be well crafted to be
less prone to changes. Does this make sense?

On Mon, Aug 11, 2014 at 12:19 AM, chrisbednarski notifications@github.com
wrote:

> Shouldn't everything that's been public remain public anyway ... to avoid
> breaking changes???
> 
> using
> HttpHeaders.ContentMd5Key
> IRouteMessagesToSites - to drive list of gateway sites from database
> GatewayConfig.SitesAsDictionary - add sites from xml config to the ones
> retrieved from database
> GatewayConfig.GetChannels- using it inside
> IProvideConfiguration<GatewayConfig>, override database driven config
> IRouteMessagesToEndpoints - forwarding certain messages (based on
> presence of header) to a different queue
> CallType - required inside custom channel sender & receiver (to
> differentiate between forwarder calls)
> Hasher - custom channel sender & receiver
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/Particular/NServiceBus.Gateway/commit/18bce05ebc9934e579fa3c5d402039640f561751#commitcomment-7333310
> .
",no
"right, i chose to avoid redundancy instead of an explicit flag indicating pixel data.

Better might be a comment for the codec field above:

```
AVCodecID codec;  // The codec, or AV_CODEC_ID_NONE for pixel data or unknown

AVPixelFormat pixfmt; // Used for pixel data
```
",no
"(Simon Krughoff) Unfortunately the project has not made any headway on making a decision on this.  I suspect sphinx will be the choice, but I'm not sure.  I think simulations should just choose one and hope.  I think sphinx is a decent choice since OpSim is using it already (aren't they?).
",yes
"@vnijs When you install the GitHub master branch of Shiny it's supposed to force an upgrade to the GitHub master branch of httpuv too--somehow you've got the CRAN release of httpuv. Any idea how you got into this state? Anyway, `devtools::install_github(""rstudio/httpuv"")` should fix the slowness, but the plot still doesn't appear--I'm looking into that.",no
"I think you're missing something in your example. If we have problems, as you suggested before, and adding an actual test for hashing strings in configure would be the way to go wouldn't it, that exposed a define if it needed local help.
",no
"Oh, I forgot about PIP... I don't have it enabled myself, I guess we could force the UAV PIP off under certain conditions

I didn't notice the remote designator was excluded from thermal disable, I thought it applied to all assembled vehicles

We can add a cleanup for dead copters, never thought about this
",no
"well, probably it's best to talk to @gurbuzali 

we have a few options here:
- add a new method `getHitRatio()`
- change semantic of the current method `getRatio()` and document it properly in Release Notes
- status quo - do not change anything and keep the semantic as it is - including not adding the percentage thing. 
",no
"Oops, because this was necessary to have bits show up on the download page.
The way things are set up now, a release cannot show up in one place
without also showing up in the other...

On Thu, Apr 21, 2016 at 3:31 AM Daniel Beck notifications@github.com
wrote:

> While the site still says 'coming soon'? Also, #56
> https://github.com/jenkinsci/backend-update-center2/pull/56 …
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly or view it on GitHub
> https://github.com/jenkinsci/backend-update-center2/commit/261ddc5322db1f73604debf77c1b6ed7c6150502#commitcomment-17193497
",yes
"@parasyte @agmcleod

Hi guys, I was thinking about my last commit yesterday night, and I don't like it.... as it prevent from defining hidden layers that could be then made visible later in the game (for whatever reasons),

I was then thinking why not adding a test on the object opacity here :
https://github.com/melonjs/melonJS/blob/1.0.0-dev/src/renderable/container.js#L763
and then only draw it if opacity is of course higher than 0

any thoughts ?
",no
"Currently, flink-runtime has a dependency on Hadoop, so I can assume its always available.
Even for a binary Flink release without build in Hadoop dependencies, we would assume Hadoop to be present (from the classpath).
For a Flink release without any Hadoop, we can either remove this again or use some reflection / fake hadoop class magic (added via maven) if needed.
But for now, I would like to have this in the code base because it helps debugging user issues.
",no
"@mbernat Actually now I see a problem. It should try the release branch, and if that one does exist, it should try the staging branch. The point is to get the commits that are on trunk but not incorporated in the previous release. By previous release I mean any release, like being tested, staged or released. Since the released scenario is basically the same as the staging one, I should check for the release branch and then for the staging one. Will fix that.
",no
"I was thinking about making all reports configurable but thought it overkill. So we ended up with this half-and-half-thing. The reason I have this option here is really only for the transition period where the necessary data might not be available yet (because the update didn't run yet), I expect everybody to enable it eventually and the default changing to `true` at some point. Not sure how to handle this best.
",no
"@philipbelesky This is my compromise between writing a data migration and having no means to update a database of results quickly :wink:

It also might be useful more generally whenever you want to regenerate all the TeamScores for whatever reason (e.g. database corruption by a careless human).
",no
"I think it would be a great idea to break out the method `isLevenshteinClose` into a predicate. By doing so we can collapse code in here. We could chose to create one of two predicates instead of having this long if else statement.

So please break out the isLevenshteinClose method into a predicate 😸.",no
"@andreasohlund I'll be your memory here ;) We decided to not couple core to the outbox release. We both agreed to expose the settings via the settings dictionary. I talked to @johnsimons and @SimonCropp today and we came to the conclusion that it is better to have extension methods in the ravendb repo which then are obsoleted. Exposing the hack over the settings seems quirky as well. So this seems to be the lesser evil and more controllable.
",no
"This should actually be `return 0` rather than `pass` . The return count is used to count how many objects were actually deleted, so if a failure is allowed to return 1 (the next line) the system will report it has deleted two objects here instead of just the one. 
",no
"@vtikha  Commits of the type `Merge branch 'master' [into <xxx> | of <xxx>]` are usually useless, it is way better to rebase your branch before pushing.
The only reason to have this kind of commits is when you have a shared branch that is developed for a long period, and a rebase would be more complicated than a merge, otherwise, please **REBASE**!!!
",no
